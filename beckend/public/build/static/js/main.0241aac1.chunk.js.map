{"version":3,"sources":["serviceWorkerRegistration.js","reportWebVitals.js","services/http.service.js","services/async-storage.service.js","services/board.service.js","services/socket.service.js","services/user.service.js","services/util.service.js","services/event-bus.service.js","store/board.actions.js","store/user.actions.js","assets/imgs/close.svg","cmp/AddCard.jsx","cmp/DynamicPopover/ActionListPopOver.jsx","cmp/DynamicPopover/MembersPopover.jsx","cmp/DynamicPopover/EditLabel.jsx","cmp/DynamicPopover/LabelsPopover.jsx","cmp/DynamicPopover/DatesPopover.jsx","cmp/DynamicPopover/ChecklistPopover.jsx","services/unsplash.service.js","cmp/DynamicPopover/SearchForCover.jsx","services/cloudinary.service.js","cmp/DynamicPopover/CoverPopover.jsx","assets/imgs/icons/menu-arrow-icon.svg","cmp/LabelPreview.jsx","cmp/DueDatePreview.jsx","cmp/DynamicCmps/DynamicButton.jsx","cmp/UserInfo.jsx","cmp/DynamicPopover/UserMenuPopover.jsx","cmp/ActivityPreview.jsx","cmp/ShowMenu.jsx","cmp/DroweMenu.jsx","cmp/DynamicPopover/AttachmentsPopover.jsx","cmp/DynamicPopover/DeleteCardPopover.jsx","cmp/DynamicPopover/MoveCopyCardPopover.jsx","cmp/DynamicPopover/UserBoardsPopover.jsx","cmp/DynamicPopover/NotifPopover.jsx","cmp/DynamicPopover.jsx","cmp/DynamicPopover/SingleMemberPopover.jsx","cmp/MembersList.jsx","cmp/CardCheckPreview.jsx","cmp/CardCommentPreview.jsx","cmp/CardVisibilityPreview.jsx","cmp/CardLabelsPreview.jsx","cmp/CardDuDatePreview.jsx","cmp/QuickCardActions.jsx","assets/imgs/close-edit-card.svg","cmp/QuickCardEditor.jsx","cmp/CardPreview.jsx","cmp/CardList.jsx","assets/imgs/plus.svg","cmp/ListPreview.jsx","cmp/BoardList.jsx","cmp/MembersListBoard.jsx","assets/imgs/bars-loader.svg","cmp/Loading.jsx","cmp/DynamicPopover/BoardMenu/MainBoardMenuContent.jsx","cmp/DynamicPopover/BoardMenu/SelectBgType.jsx","cmp/DynamicPopover/BoardMenu/ChooseBgColor.jsx","cmp/DynamicPopover/BoardMenu/ChooseBgImg.jsx","assets/imgs/checked.svg","cmp/SearchMenu.jsx","cmp/ArchiveItems.jsx","cmp/DynamicBoardMenu.jsx","assets/imgs/close-filter.svg","cmp/BoardHeader.jsx","assets/imgs/icons/plus-white.svg","cmp/AddList.jsx","cmp/CardDetails/JoinCard.jsx","cmp/CardDetails/ArchiveButtoms.jsx","cmp/CardSideBar.jsx","cmp/CardLabelsList.jsx","cmp/CommentPreview.jsx","cmp/CommentsList.jsx","cmp/ActivityList.jsx","cmp/CardDetails/CardActivities.jsx","cmp/CardTitle.jsx","cmp/CardDescription.jsx","cmp/ProgressBar.jsx","cmp/TaskInput.jsx","cmp/ChecklistTask.jsx","cmp/AddNewTask.jsx","cmp/ChecklistApp.jsx","cmp/ChecklistListApp.jsx","cmp/CardDetailsHeader.jsx","cmp/CardDetails/AttachmentPreview.jsx","cmp/CardDetails/CardAttachmentsList.jsx","pages/CardDetails.jsx","cmp/DashBoard/PieDoneOverdue.jsx","cmp/DashBoard/PieTasksPerLabel.jsx","cmp/DashBoard/BarTaskPerMember.jsx","cmp/DashBoard/BarTaskPerList.jsx","cmp/DashBoard/DashboardTitle.jsx","cmp/DashBoard/LineTasksOverTime.jsx","pages/Dashboard.jsx","pages/BoardApp.jsx","assets/imgs/trackit-logo.svg","assets/imgs/trackit-logo-white.svg","cmp/Header/LogoName.jsx","cmp/Header/HomeHeader.jsx","pages/HomePage.jsx","pages/Login.jsx","pages/Signup.jsx","cmp/UserBoards/BoardPreview.jsx","cmp/UserBoards/SideNav.jsx","pages/TemplateBoards.jsx","assets/imgs/icons/close-icon-white.svg","assets/imgs/icons/checked-icon-white.svg","cmp/CreateBoard.jsx","pages/UserBoards.jsx","routes.js","pages/CardNotFound.jsx","assets/imgs/icons/menu-plus-icon.svg","cmp/Header/AppHeader.jsx","cmp/UserMsg.jsx","root-cmp.jsx","store/board.reducer.js","store/user.reducer.js","store/store.js","index.js"],"names":["Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","params","res","console","log","dir","response","status","assign","storageService","query","get","entityType","entityId","entities","find","entity","_id","post","newEntity","_makeId","push","save","put","updatedEntity","idx","findIndex","splice","remove","postMany","newEntities","map","delay","JSON","parse","localStorage","getItem","Promise","resolve","reject","setTimeout","setItem","stringify","length","text","possible","i","charAt","Math","floor","random","boardService","userId","boardId","getBoardById","filterBy","board","socketService","socket","setup","io","on","eventName","cb","off","removeAllListeners","emit","terminate","createSocketService","USER_KEY","STORAGE_KEY_LOGGEDIN_USER","userService","login","logout","signup","getLoggedinUser","getUsers","getById","update","filterUserBoards","boards","type","filter","createdBy","isBoardStarred","toggleStarBoard","boardMembersIdx","boardMembers","member","isStarred","user","_saveLocalUser","userCred","Error","initials","_getUserInitials","fullname","sessionStorage","removeItem","split","part","toUpperCase","join","utilService","makeId","txt","makeLorem","size","words","getRandomIntInclusive","min","max","ceil","getFormattedBgStyle","background","bgImgUrl","small","full","eventBusService","listener","callListener","detail","addEventListener","removeEventListener","dispatchEvent","CustomEvent","showUserMsg","showSuccessMsg","showErrorMsg","loadBoards","dispatch","loadBoard","loadListAndCard","list","card","err","addBoard","addedBoard","removeBoard","toggleLabels","setFilterBy","updateBoard","action","activity","_storeSaveActivity","activities","unshift","isNotif","_filterActionsNotif","id","createdAt","Date","now","byMember","cardId","cardTitle","setNotif","count","setUpdateLabel","labelsProps","onLogin","credentials","loginAsGuest","username","password","myBus","_AddCard","state","handleChange","ev","key","preventDefault","onAddCard","value","target","setState","newCard","isArchived","description","comments","cardMembers","cardLabelIds","checklists","dueDate","attachments","cardStyle","props","cards","onCloseAdding","this","className","TextareaAutosize","placeholder","onChange","onKeyPress","autoFocus","onClick","src","close","alt","React","Component","mapDispatchToProps","AddCard","connect","boardReducer","ActionList","onUpdateBoard","listIdx","lists","listToFind","listId","listTitle","_MembersPopover","currListIdx","currCardIdx","inputTxt","filteredMembers","toggleMember","loggedInUser","currCard","isMemberOnCard","memberIdx","cardMember","memberId","some","filterRegex","RegExp","test","Avatar","imgUrl","MembersPopover","userReducer","_EditLabel","labelName","labelColor","isDelete","labelsColor","onSaveLabel","currLabel","label","title","color","labels","changeTitle","labelChoose","deleteLabel","labelIdx","confirmDeleteLabel","createLabelsArr","clrNum","isLabelChoosen","chosenLabel","EditLabel","_LabelsPopover","filteredLabels","toggleLabel","newBoard","isLabelOnCard","cardLabelId","labelId","editLabel","stopPropagation","isCreat","createLabel","isCreate","LabelsPopover","_DatesPopover","date","handleDateSelect","stringDate","toString","day","substring","month","year","hourGmt","timestamp","onSaveDate","duedate","isDone","handleClose","onSelect","startDate","openToDate","inline","formatWeekDay","nameOfDay","substr","DatesPopover","_ChecklistPopover","onAddChecklist","boardToUpdate","checklistId","tasks","onSubmit","name","Button","variant","ChecklistPopover","KEY","unsplashService","getImgs","keyword","imgs","results","img","urls","link","links","html","shift","SearchForCover","getImgForCover","searchCover","minLength","debounceTimeout","cloudinaryService","uploadFile","UPLOAD_URL","formData","FormData","append","files","fetch","body","json","fileName","original_filename","secure_url","catch","error","_CoverPopover","isCoverSelected","coverImgs","isSearch","onToggleCover","cover","isCoverOnCard","isCover","coverId","handelSize","onRemoveCover","imgToShow","onToggleImgCover","coverImg","onAddImage","coverUploadImg","onSaveCover","halfCover","fullCover","covers","htmlFor","style","backgroundImage","CoverPopover","LabelPreview","boardLabels","DueDatePreview","onToggleDone","Checkbox","checked","_DynamicButton","DynamicCmp","onToggle","DownArrow","notifCount","DynamicButton","UserInfo","to","_UserMenuPopover","onLogout","history","_UserMenuPopoverWithRouter","withRouter","UserMenuPopover","ActivityPreview","display","ShowMenu","TemporaryDrawer","toggleMenu","isMenuOpen","toggleDrawer","anchor","open","event","Drawer","hideBackdrop","Divider","_AttachmentsPopover","urlLink","onAddAttach","attachment","AttachmentsPopover","DeleteCardPopover","onDeleteCard","_MoveCopyCardPopoverWithRouter","cardIdx","onMoveCard","cardToMove","forEach","boardCard","onCopyCard","duplicatedCard","isCopy","chosenCards","boardTitle","FormControl","InputLabel","Select","MenuItem","_MoveCopyCardPopover","MoveCopyCardPopover","_UserBoardsPopover","toggleStar","getBoardBtns","bgStyle","boardStyle","getfilteredBoards","goToBoard","boardsToShow","guestBoards","UserBoardsPopover","_NotifPopover","onNotifClick","notifications","setNotifCount","_NotifPopoverWithRouter","NotifPopover","DynamicPopover","anchorEl","isEditLabel","newTitle","isChangeTitle","handleClick","currentTarget","markReadNotif","handleDateChange","handleBack","titleModal","dnmTitleModal","undefined","Fragment","Popover","onClose","anchorOrigin","vertical","horizontal","_SingleMemberPopover","removeMember","SingleMemberPopover","MembersList","members","isCardOpen","AvatarGroup","CardCheckPreview","reduce","acc","checklist","task","taskCount","taskCountDone","isDoneLabel","CardCommentPreview","cardComments","comment","_CardLabelsPreview","onToggleLabel","isOpen","isLabelOpen","CardLabelsPreview","CardDuDatePreview","classDone","overDue","QuickCardActions","onArchive","OnUpdateBoard","_QuickCardEditor","isEditTitle","isEditMode","rect","toggleEditTitle","getBoundingClientRect","x","onEditMode","onSaveCardTitle","isDragging","draggingClass","coverStyle","editClass","isLabels","fullTitle","left","top","y","height","onFocus","select","QuickCardEditor","_CardPreview","handleDnd","draggingOver","onSelectedCard","draggableId","index","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","_CardPreviewWithRouter","CardPreview","CardList","droppableId","droppableProps","ListPreview","isAdding","toggleOnAdd","onSaveListTitle","onBlur","plus","BoardList","direction","MembersListBoard","spacing","Loading","Loader","MainBoardMenuContent","changeMenu","SelectBgType","ChooseBgColor","changeBgColor","_ChooseBgImg","searchStr","prevState","setBgImg","imgIdx","openLink","href","ChooseBgImg","_SearchMenu","searchKey","isFilter","onFilterBy","filterType","filterIdx","filteryid","onToggleSearch","searchId","forceNotifyByEnter","SearchMenu","_ArchiveItems","onFilterCards","tilte","onSendToBoard","_ArchiveItemsWithRouter","ArchiveItems","DynamicBoardMenu","_BoardHeader","menuTitle","menuTarget","cardsCount","toggleChangeTitle","saveBoardTitle","onToggleStarBoard","resetSearch","openSearchOnMenu","prevProps","notification","inputStyle","fontSize","fontWeight","Provider","onOpenDashboard","BoardHeader","AddList","onAddList","newList","addMode","_JoinCard","onJoinCard","JoinCard","_ArchiveButtoms","onToggleArchived","ArchiveButtoms","CardSideBar","CardLabelsList","CommentPreview","CommentsList","ActivityList","_CardActivities","isEditing","isDetails","newActivityTxt","onToggleDetails","onToggleComment","onSaveActivity","CardActivities","CardTitle","isEdit","onSaveTitle","onToggleEdit","CardDescription","onToggleEditing","onSaveDescription","ProgressBar","currChecklist","width","getProgress","precent","classNameBar","doneCount","TaskInput","newTaskTxt","onDiscardChanges","onSaveTask","taskIdx","onEditTask","classTask","ChecklistTask","onDeleteTask","AddNewTask","onIsAddItem","onAddTask","handleKeyPress","_ChecklistApp","isAddItem","onDeleteChecklist","checklistIdx","updateIsDone","every","ChecklistApp","ChecklistListApp","CardDetailsHeader","coverMode","AttachmentPreview","cardAttachment","onDeleteAttach","CardAttachmentsList","cardAttachments","attachmentId","attachIdx","_CardDetails","getCurrCard","CardDetails","PieDoneOverdue","datasets","getValuesDoneOverdue","backgroundColor","borderColor","borderWidth","getPieData","PieTasksPerLabel","mapTasksPerLabel","taskPerLabel","BarTaskPerMember","defaults","font","plugins","legend","tasksPerMembers","mapTasksPerMember","taskPerMember","options","indexAxis","responsive","scales","ticks","stepSize","tooltips","BarTaskPerList","tasksPerList","mapTasksPerList","getMapTasksPerList","taskPerList","getBarData","DashboardTitle","tasksCount","getTasksCount","getVerdueCount","styles","buildStyles","textColor","pathColor","trailColor","textSize","LineTasksOverTime","mapTasksOverTime","Object","entries","sort","b","localeCompare","getMapTasksOverTime","callback","values","beginAtZero","tooltip","callbacks","context","tension","showLine","pointRadius","_Dashboard","goBack","allCards","Dashboard","_BoardApp","onDragEnd","destination","source","dndStart","dndEnd","dndStartIdx","dndEndIdx","listStart","listEnd","onToggleLabels","updateSocket","keys","exact","component","path","BoardApp","LogoName","isLoggedIn","linkUrl","logoUrl","WhiteLogo","ColorLogo","HomeHeader","_HomePage","onStartAsGuest","HomePage","_Login","isLoginFailed","isLoading","clearForm","emptyCredentials","field","clearErrMsg","required","Login","_Signup","isSignupFailed","onSignup","buttonText","cookiePolicy","Signup","BoardPreview","isYellow","isLarge","SideNav","_TemplateBoards","templateBoards","getTemplateBoards","slice","TemplateBoards","_CreateBoard","backgrounds","selectedBgIdx","createBoard","boardMember","getCovers","getLabels","onToggleCreateBoard","selectBg","selectedBg","selectedBgStyle","CloseIcon","autoComplete","CheckedIcon","_CreateBoardWithRouter","CreateBoard","_UserBoards","userBoards","isCreateBoard","getBoardsByType","getGuestBoards","starredBoards","owndBoards","guestdBoards","routes","_AppHeader","isUserBoardsOpen","isStarredBoardsOpen","onToggleUserBoards","onToggleStarredBoards","notificaion","PlusIcon","AppHeader","UserMsg","msg","removeEvent","msgType","RootCmp","route","initialState","lastUpdatedBoard","currList","rootReducer","combineReducers","undoLastBoard","newState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0241aac1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'GET', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/')\r\n        }\r\n        throw err\r\n    }\r\n}","\r\nexport const storageService = {\r\n    query,\r\n    get,\r\n    post,\r\n    put,\r\n    remove,\r\n    postMany,\r\n    save\r\n}\r\n\r\nfunction query(entityType, delay = 0) {\r\n    var entities = JSON.parse(localStorage.getItem(entityType)) || []\r\n    // console.log('entities', entities);\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            // reject('OOOOPs')\r\n            resolve(entities)\r\n        }, delay)\r\n    })\r\n    // return Promise.resolve(entities)\r\n}\r\n\r\n\r\nfunction get(entityType, entityId) {\r\n    return query(entityType)\r\n        .then(entities => entities.find(entity => entity._id === entityId))\r\n}\r\n\r\nfunction post(entityType, newEntity) {\r\n    newEntity._id = _makeId()\r\n    return query(entityType)\r\n        .then(entities => {\r\n            entities.push(newEntity)\r\n            save(entityType, entities)\r\n            return newEntity\r\n        })\r\n}\r\n\r\nfunction put(entityType, updatedEntity) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            const idx = entities.findIndex(entity => entity._id === updatedEntity._id)\r\n            entities.splice(idx, 1, updatedEntity)\r\n            save(entityType, entities)\r\n            return updatedEntity\r\n        })\r\n}\r\n\r\nfunction remove(entityType, entityId) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            const idx = entities.findIndex(entity => entity._id === entityId)\r\n            entities.splice(idx, 1)\r\n            save(entityType, entities)\r\n        })\r\n}\r\n\r\nfunction save(entityType, entities) {\r\n    localStorage.setItem(entityType, JSON.stringify(entities))\r\n}\r\n\r\nfunction _makeId(length = 5) {\r\n    var text = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return text\r\n}\r\n\r\nfunction postMany(entityType, newEntities) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            newEntities = newEntities.map(entity => ({ ...entity, _id: _makeId() }))\r\n            entities.push(...newEntities)\r\n            save(entityType, entities)\r\n            return entities\r\n        })\r\n}","import { httpService } from './http.service'\nimport { storageService } from './async-storage.service'\n// import { userService } from './user.service'\n// import { socketService, SOCKET_EVENT_REVIEW_ADDED } from './socket.service'\n\nconst BOARD_KEY = 'boardsDB'\n\nexport const boardService = {\n  // add,\n  query,\n  remove,\n  getBoardById,\n  save\n}\n\nfunction query(userId) {\n  // this function saves the whole DB locally, but sends only the user boards to the store\n  // when we move to backend the server will filter and return only the user boards \n  // the frontend query will simply return it to the store...\n  // return storageService.query(BOARD_KEY)\n  // .then((boards) => {\n  //   if (!boards.length) {\n  //     boards = require('../data/boards.json');\n  //     storageService.save(BOARD_KEY, boards)\n  //   }\n  // const userBoards = boards.filter(board =>\n  //   (!board.createdBy || board.boardMembers.some(member => member._id === userId)) //change in json to \"id\"?\n  //   )\n  //     // console.log('usrBrds:', userBoards);\n  //     return userBoards\n  //   })\n\n  return httpService.get(`boards`, { userId: userId })\n  // return httpService.get(`board${queryStr}`)\n}\n\n// function query2() {\n//   // return httpService.get(`board${queryStr}`)\n//   return storageService.query(BOARD_KEY)\n//     .then((boards) => {\n//       if (!boards.length) {\n//         boards = require('../data/board.json');\n//         storageService.save(BOARD_KEY, boards)\n//       }\n//       return boards\n//     })\n// }\n\n\nfunction remove(boardId) {\n  // return httpService.delete(`board/${boardId}`)\n  return storageService.remove(BOARD_KEY, boardId)\n}\n// async function add(board) {\n//   // const addedBoard = await httpService.post(`board`, board)\n//   // board.byUser = userService.getLoggedinUser()\n//   // board.aboutUser = await userService.getById(board.aboutUserId)\n\n//   const addedBoard = storageService.post(BOARD_KEY, board)\n//   return addedBoard\n// }\n\nfunction getBoardById(boardId, filterBy = {}) {\n  return httpService.get(`boards/${boardId}`, { filterBy: filterBy })\n  // return storageService.get(BOARD_KEY, boardId)\n}\n\nfunction save(board) {\n  console.log('board', board);\n\n  if (board._id) {\n    return httpService.put(`boards/${board._id}`, board);\n    // console.log('board in service.save', board);\n    // return storageService.put(BOARD_KEY, board)\n  } else {\n    return httpService.post(`boards`, board);\n    // board.owner = userService.getLoggedinUser()\n    // return storageService.post(BOARD_KEY, board)\n  }\n}\n\n// This IIFE functions for Dev purposes \n// It allows testing of real time updates (such as sockets) by listening to storage events\n// (async () => {\n//   var boards = await storageService.query('board')\n\n//   // Dev Helper: Listens to when localStorage changes in OTHER browser\n//   window.addEventListener('storage', async () => {\n//     console.log('Storage updated');\n//     const freshBoards = await storageService.query('board')\n//     if (freshBoards.length === boards.length + 1 ){\n//       console.log('Board Added - localStorage updated from another browser')\n//       socketService.emit(SOCKET_EVENT_REVIEW_ADDED, freshBoards[freshBoards.length-1])\n//     }\n//     boards = freshBoards\n//   });\n// })()\n\n","import io from 'socket.io-client';\n\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : '//localhost:3030'\nexport const socketService = createSocketService()\n// export const socketService = createDummySocketService()\n\n\n// var socketIsReady = false;\n// socketService.setup()\n\nfunction createSocketService() {\n    var socket = null;\n    const socketService = {\n        setup() {\n            socket = io(baseUrl)\n        },\n        on(eventName, cb) {\n            socket.on(eventName, cb)\n        },\n        off(eventName, cb = null) {\n            if (!socket) return;\n            if (!cb) socket.removeAllListeners(eventName)\n            else socket.off(eventName, cb)\n        },\n        emit(eventName, data) {\n            socket.emit(eventName, data)\n        },\n        terminate() {\n            socket = null\n        }\n    }\n    return socketService\n}","import { storageService } from './async-storage.service'\nimport { httpService } from './http.service'\n// import { socketService, SOCKET_EVENT_USER_UPDATED } from './socket.service'\n\nconst USER_KEY = 'usersDB'\nconst STORAGE_KEY_LOGGEDIN_USER = 'loggedinUser'\n\nexport const userService = {\n    login,\n    logout,\n    signup,\n    getLoggedinUser,\n    getUsers,\n    getById,\n    remove,\n    update,\n    filterUserBoards,\n    isBoardStarred,\n    toggleStarBoard\n}\n// getUsers()\nfunction getUsers() {\n    // return storageService.query(USER_KEY)\n    //     .then((users) => {\n    //         if (!users.length) {\n    //             users = require('../data/users.json');\n    //             storageService.save(USER_KEY, users)\n    //             return users\n    //         }\n    //     })\n    return httpService.get(`user`);\n}\n\nasync function getById(userId) {\n    // const user = await storageService.get(USER_KEY, userId)\n    const user = await httpService.get(`user/${userId}`)\n    // gWatchedUser = user;\n    return user;\n}\nfunction remove(userId) {\n    return storageService.remove(USER_KEY, userId)\n    // return httpService.delete(`user/${userId}`)\n}\n\nasync function update(user) {\n    await storageService.put(USER_KEY, user)\n    // user = await httpService.put(`user/${user._id}`, user)\n    // Handle case in which admin updates other user's details\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\n    return user;\n}\n\nasync function login(userCred) {\n    // console.log('usercred',userCred);\n\n    // const users = await storageService.query(USER_KEY)\n    // console.log('userCred', userCred);\n\n    const user = await httpService.post('auth/login', userCred)\n    // const user = users.find(user => user.username === userCred.username)\n    if (!user) {\n        throw new Error('login service error')\n    }\n    return _saveLocalUser(user)\n\n    // socketService.emit('set-user-socket', user._id);\n    // if (user) return _saveLocalUser(user)\n}\nasync function signup(userCred) {\n    userCred.initials = _getUserInitials(userCred.fullname)\n    // const user = await storageService.post(USER_KEY, userCred)\n    const user = await httpService.post('auth/signup', userCred)\n    // socketService.emit('set-user-socket', user._id);\n    return _saveLocalUser(user)\n}\nasync function logout() {\n    sessionStorage.removeItem(STORAGE_KEY_LOGGEDIN_USER)\n    // socketService.emit('unset-user-socket');\n    return await httpService.post('auth/logout')\n}\n\nfunction getLoggedinUser() {\n    return JSON.parse(sessionStorage.getItem(STORAGE_KEY_LOGGEDIN_USER) || 'null')\n}\n\nfunction filterUserBoards(boards, userId, type) {\n    return boards.filter(board => {\n        if (!board.createdBy) return false\n        if (type === \"all\") return true\n        else if (type === \"owner\") return (board.createdBy._id === userId)\n        else if (type === \"guest\") return (board.createdBy._id !== userId)\n        else if (type === \"starred\") return isBoardStarred(board, userId)\n        else return []\n        // else return !isBoardStarred(board, userId)\n    })\n    // newest to oldest order\n    // return filteredBoards.sort((board1, board2) => board2.createdAt - board1.createdAt)\n}\n\nfunction isBoardStarred(board, userId) {\n    return board.boardMembers.find(member => member._id === userId).isStarred\n}\n\nfunction toggleStarBoard(board, userId) {\n    const boardMembersIdx = board.boardMembers.findIndex(member => member._id === userId)\n    board.boardMembers[boardMembersIdx].isStarred = !board.boardMembers[boardMembersIdx].isStarred\n    return board\n}\n\nfunction _saveLocalUser(user) {\n    sessionStorage.setItem(STORAGE_KEY_LOGGEDIN_USER, JSON.stringify(user))\n    return user\n}\n\nfunction _getUserInitials(fullname) {\n    const nameParts = fullname.split(' ')\n    return nameParts.map(part => part.charAt(0).toUpperCase()).join('')\n}\n\n\n// This is relevant when backend is connected\n// (async () => {\n//     var user = getLoggedinUser()\n//     if (user) socketService.emit('set-user-socket', user._id)\n// })();\n\n","export const utilService = {\n    makeId,\n    makeLorem,\n    getRandomIntInclusive,\n    getFormattedBgStyle\n}\n\nfunction makeId(length = 8) {\n    var txt = '';\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (var i = 0; i < length; i++) {\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    return txt;\n}\n\nfunction getFormattedBgStyle(background, size = 'small') {\n    if (typeof (background) === 'object') {\n        const bgImgUrl = (size === 'small') ? background.small : background.full\n        return { background: `url(${bgImgUrl}) center / cover no-repeat` }\n    } else return { background }\n}\n\nfunction makeLorem(size = 100) {\n    var words = ['The sky', 'above', 'the port', 'was', 'the color of television', 'tuned', 'to', 'a dead channel', '.', 'All', 'this happened', 'more or less', '.', 'I', 'had', 'the story', 'bit by bit', 'from various people', 'and', 'as generally', 'happens', 'in such cases', 'each time', 'it', 'was', 'a different story', '.', 'It', 'was', 'a pleasure', 'to', 'burn'];\n    var txt = '';\n    while (size > 0) {\n        size--;\n        txt += words[Math.floor(Math.random() * words.length)] + ' ';\n    }\n    return txt;\n}\n\nfunction getRandomIntInclusive(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive \n}\n","function on(eventName, listener) {\n\n    const callListener = ({ detail }) => {\n        listener(detail);\n    };\n\n    window.addEventListener(eventName, callListener);\n\n    return () => {\n        window.removeEventListener(eventName, callListener);\n    };\n}\n\nfunction emit(eventName, data) {\n    window.dispatchEvent(new CustomEvent(eventName, { detail: data }));\n}\n\nexport const eventBusService = { on, emit };\n\nexport function showUserMsg(txt, type = '') {\n    eventBusService.emit('show-user-msg', { txt, type })\n}\nexport function showSuccessMsg(txt) {\n    showUserMsg(txt, 'success')\n}\nexport function showErrorMsg(txt) {\n    showUserMsg(txt, 'danger')\n}\n\nwindow.myBus = eventBusService;\nwindow.showUserMsg = showUserMsg;\n\n// eventBusService.on('baba', (x)=>console.log('Hi Baba', x))\n// eventBusService.on('baba', (x)=>console.log('Hello Baba Ji', x))\n// eventBusService.emit('baba', [5, 8, 11])\n// setTimeout(()=>{\n//     eventBusService.emit('baba', 17)\n// }, 2000)\n\n/* Listening Component...\n    import {eventBusService} from 'path...event-bus-service'\n    eventBusService.on('some-event', (dataFromEvent) => {\n    do something with dataFromEvent\n    })\n\n   Receiving Component...\n    eventBusService.emit('some-event', data)\n*/","import { boardService } from '../services/board.service'\r\nimport { emitToUser, socketService } from '../services/socket.service'\r\n// import { socketService, SOCKET_EVENT_BOARD_ADDED } from '../services/socket.service'\r\nimport { userService } from '../services/user.service'\r\nimport { utilService } from '../services/util.service.js'\r\nimport { showSuccessMsg, showErrorMsg } from '../services/event-bus.service';\r\nexport function loadBoards(userId) {\r\n  return async dispatch => {\r\n    try {\r\n      const boards = await boardService.query(userId)\r\n      dispatch({ type: 'SET_BOARDS', boards })\r\n      // socketService.on(SOCKET_EVENT_BOARD_ADDED, (board) =>{\r\n      //   dispatch({ type: 'ADD_BOARD', board })\r\n      // })\r\n\r\n    } catch (err) {\r\n      showErrorMsg('Sorry cannot load boards')\r\n      console.log('BoardActions: err in loadBoards', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function loadBoard(boardId) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = !boardId ? null : await boardService.getBoardById(boardId)\r\n      dispatch({ type: 'SET_BOARD', board: { ...board } })\r\n      // socketService.on(SOCKET_EVENT_BOARD_ADDED, (board) =>{\r\n      //   dispatch({ type: 'ADD_BOARD', board })\r\n      // })\r\n    } catch (err) {\r\n      showErrorMsg('Sorry cannot load board')\r\n      console.log('BoardActions: err in loadBoards', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function loadListAndCard(list, card) {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'SET_LIST', list })\r\n      dispatch({ type: 'SET_CARD', card })\r\n\r\n      // socketService.on(SOCKET_EVENT_BOARD_ADDED, (board) =>{\r\n      //   dispatch({ type: 'ADD_BOARD', board })\r\n      // })\r\n    } catch (err) {\r\n      console.log('BoardActions: err in loadList', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addBoard(board) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedBoard = await boardService.save(board)\r\n      dispatch({ type: 'ADD_BOARD', board: addedBoard })\r\n\r\n    } catch (err) {\r\n      showErrorMsg('Sorry cannot add board')\r\n      console.log('BoardActions: err in addBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeBoard(boardId) {\r\n  return async dispatch => {\r\n    try {\r\n      await boardService.remove(boardId)\r\n      dispatch({ type: 'REMOVE_BOARD', boardId })\r\n    } catch (err) {\r\n      showErrorMsg('Sorry cannot remove board')\r\n      console.log('BoardActions: err in removeBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function toggleLabels() {\r\n  return dispatch => {\r\n    dispatch({ type: 'TOGGLE_LABELS' })\r\n  }\r\n}\r\n\r\nexport function setFilterBy(filterBy, boardId) {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'SET_FILTER', filterBy: filterBy });\r\n      const board = !boardId ? null : await boardService.getBoardById(boardId, filterBy)\r\n      dispatch({ type: 'UPDATE_BOARD', board: { ...board } });\r\n      // dispatch({ type: 'SET_BOARD', board: { ...board } })\r\n    } catch (err) {\r\n      console.log('Cannot update notification', err);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n// when we move to backend this function will check if the board has 'createBy'\r\n// if not- it's a template and it should only update the store, NOT the server!\r\nexport function updateBoard(board, action = null, card = '', txt = \"\") {\r\n  return async dispatch => {\r\n    try {      \r\n      if (action) {\r\n        var activity = _storeSaveActivity(action, card, txt);\r\n        board.activities.unshift(activity);\r\n      }\r\n      dispatch({ type: 'UPDATE_BOARD', board: { ...board } });\r\n      await boardService.save(board);\r\n      dispatch({ type: 'UPDATE_LAST_UPDATED_BOARD' });\r\n      socketService.emit('update-board', board);\r\n      if (action && activity.isNotif) socketService.emit('received notification');\r\n    } catch (err) {\r\n      // console.log('board id: ', board._id)\r\n      // loadBoard(board._id)\r\n      // dispatch({ type: 'UPDATE_BOARD', board: { ...board } });\r\n      dispatch({ type: 'UNDO_UPDATE_BOARD' });\r\n      showErrorMsg('Sorry cannot update board')\r\n      console.log('BoardActions: err in updateBoard', err);\r\n      // console.log('after loadboard')\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction _storeSaveActivity(action, card, txt) {\r\n\r\n  // const cardCopy = { ...card } // MAYBE WE DONT NEED IT\r\n  const activity = {\r\n    id: utilService.makeId(),\r\n    txt,\r\n    createdAt: Date.now(),\r\n    byMember: userService.getLoggedinUser(),\r\n    action,\r\n    card: card ? { cardId: card.cardId, cardTitle: card.cardTitle } : '',\r\n    isNotif: false,\r\n  }\r\n  return _filterActionsNotif(activity)\r\n}\r\n\r\nfunction _filterActionsNotif(activity) {\r\n  switch (activity.action) {\r\n    // MEMBERs\r\n    case 'Added':\r\n    case 'Removed':\r\n    // DUE DATE\r\n    case 'Set due date':\r\n    case 'Removed due date':\r\n    case 'Changed due date':\r\n    // CHECKLIST\r\n    case 'Completed checklist':\r\n    // COMMENT\r\n    case 'Added comment':\r\n      activity.isNotif = true\r\n      break\r\n    default:\r\n      activity.isNotif = false\r\n      break\r\n  }\r\n  return activity\r\n}\r\n\r\n\r\nexport function setNotif(isNotif) {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'SET_NOTIF', isNotif: isNotif });\r\n      isNotif ?\r\n        dispatch({ type: 'SET_NOTIF_COUNT++' })\r\n        : dispatch({ type: 'SET_NOTIF_COUNT', count: 0 });\r\n    } catch (err) {\r\n      console.log('Cannot update notification', err);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport function setUpdateLabel(labelsProps) {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'SET_LABEL', labelsProps });\r\n    } catch (err) {\r\n      console.log('Cannot set labels props', err);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n// can be deleteted:\r\nexport function setNotifCount(count) {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'SET_NOTIF_COUNT', count });\r\n    } catch (err) {\r\n      console.log('Cannot update notification', err);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { userService } from \"../services/user.service.js\";\n// import { showErrorMsg } from '../services/event-bus.service.js'\nimport { socketService } from '../services/socket.service'\n\nexport function loadUsers() {\n    return async dispatch => {\n        try {\n            dispatch({ type: 'LOADING_START' })\n            const users = await userService.getUsers()\n            dispatch({ type: 'SET_USERS', users })\n        } catch (err) {\n            console.log('UserActions: err in loadUsers', err)\n        } finally {\n            dispatch({ type: 'LOADING_DONE' })\n        }\n    }\n}\n\nexport function updateUser(user) {\n    return async dispatch => {\n        try {\n            await userService.update(user);\n            dispatch({ type: 'SET_USER', user });\n            // socket.emit('set-user-socket',user.id)\n        } catch (err) {\n            console.log('err in updateUser:', err);\n        }\n    }\n}\n\nexport function removeUser(userId) {\n    return async dispatch => {\n        try {\n            await userService.remove(userId)\n            dispatch({ type: 'REMOVE_USER', userId })\n        } catch (err) {\n            console.log('UserActions: err in removeUser', err)\n        }\n    }\n}\n\nexport function onLogin(credentials) {\n    return async (dispatch) => {\n        try {\n            const user = await userService.login(credentials)\n            dispatch({\n                type: 'SET_USER',\n                user\n            })\n            return user\n        } catch (err) {\n            // showErrorMsg('Cannot login')\n            console.log('Cannot login', err)\n            throw err\n        }\n    }\n}\n\n\nexport function onSignup(credentials) {\n    return (dispatch) => {\n        userService.signup(credentials)\n            .then(user => {\n                dispatch({\n                    type: 'SET_USER',\n                    user\n                })\n            })\n            .catch(err => {\n                // showErrorMsg('Cannot signup')\n                console.log('Cannot signup', err)\n            })\n\n    }\n}\n\nexport function onLogout() {\n    return (dispatch) => {\n        userService.logout()\n            .then(() => dispatch({\n                type: 'SET_USER',\n                user: null\n            }))\n            .catch(err => {\n                // showErrorMsg('Cannot logout')\n                console.log('Cannot logout', err)\n            })\n    }\n}\n\nexport function loginAsGuest() {\n    const guestCreds = {\n        username: \"pandaguest\",\n        password: \"123\"\n    }\n    try {\n        return onLogin(guestCreds)\n    } catch (err) {\n        console.log('error login as guest');\n    }\n}\n\n\n// export function loadAndWatchUser(userId) {\n//     return async (dispatch) => {\n//         try {\n//             const user = await userService.getById(userId);\n//             dispatch({ type: 'SET_WATCHED_USER', user })\n//             socketService.emit(SOCKET_EMIT_USER_WATCH, userId)\n//             socketService.off(SOCKET_EVENT_USER_UPDATED)\n//             socketService.on(SOCKET_EVENT_USER_UPDATED, user => {\n//                 console.log('USER UPADTED FROM SOCKET');\n//                 dispatch({ type: 'SET_WATCHED_USER', user })\n//             })\n//         } catch (err) {\n//             showErrorMsg('Cannot load user')\n//             console.log('Cannot load user', err)\n//         }\n//     }\n// }\n\n","export default __webpack_public_path__ + \"static/media/close.e9203ba4.svg\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport { updateBoard } from '../store/board.actions.js';\nimport { utilService } from '../services/util.service.js';\nimport { TextareaAutosize } from '@mui/material';\nimport { Button } from '@mui/material';\nimport close from '../assets/imgs/close.svg';\n\nexport class _AddCard extends React.Component {\n    state = {\n        cardTitle: \"\"\n    }\n\n    handleChange = (ev) => {\n        if (ev.key === 'Enter') {\n            ev.preventDefault();\n            this.onAddCard();\n            return;\n        }\n        const value = ev.target.value;\n        this.setState({ cardTitle: value });\n    }\n\n    onAddCard = () => {\n        let cardTitle = this.state.cardTitle;\n        if (!cardTitle) {\n            this.props.onCloseAdding();\n            return;\n        }\n        const newCard = {\n            cardId: utilService.makeId(),\n            cardTitle,\n            isArchived: false,\n            description: \"\",\n            comments: [],\n            cardMembers: [],\n            cardLabelIds: [],\n            checklists: [],\n            createdAt: new Date(),\n            dueDate: {},\n            attachments: [],\n            cardStyle: {}\n        }\n        const { list, board } = this.props;\n        list.cards.push(newCard);\n        this.setState({ cardTitle: \"\" })\n        const action = `Added card`;\n        this.props.updateBoard(board, action, newCard);\n        this.props.onCloseAdding();\n    }\n\n    render() {\n        const { cardTitle } = this.state;\n        return (\n            <div className=\"all-cards card-previre-content\">\n                <TextareaAutosize className=\"text-area-auto card-input\"\n                    value={cardTitle}\n                    placeholder=\"Enter a title for this card...\"\n                    aria-label=\"empty textarea\"\n                    onChange={this.handleChange}\n                    onKeyPress={this.handleChange}\n                    // onBlur={this.onAddCard}\n                    autoFocus\n                />\n                <div className=\"add-card-actions flex align-center\">\n                    {/* <Button onClick={this.onAddCard} variant=\"contained\" className=\"add-card-btn\">Add card</Button> */}\n                    <button onClick={this.onAddCard} className=\"add-card-btn\">Add card</button>\n                    <button onClick={this.props.onCloseAdding}><img src={close} alt=\"close\" /></button>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        board: state.boardReducer.board\n    }\n}\nconst mapDispatchToProps = {\n    updateBoard\n}\n\nexport const AddCard = connect(mapStateToProps, mapDispatchToProps)(_AddCard)","import { components } from \"react-select\";\nimport { AddCard } from '../AddCard.jsx';\n\nexport function ActionList({ list, board, onUpdateBoard }) {\n\n    function onDeleteList() {\n        const listIdx = board.lists.findIndex(listToFind => listToFind.listId === list.listId)\n        board.lists.splice(listIdx, 1);\n        console.log('board from delete', board);\n        const action = `Deleted list ${list.listTitle}`;\n        onUpdateBoard(action);\n    }\n\n    return (\n        <div>\n            <p onClick={onDeleteList}>Delete</p>\n        </div>\n    )\n\n}","import React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport { connect } from 'react-redux';\nimport { loadBoards, removeBoard, addBoard, updateBoard } from '../../store/board.actions.js';\nimport DoneIcon from '@mui/icons-material/Done';\nimport { TextareaAutosize } from '@mui/material';\nclass _MembersPopover extends React.Component {\n    state = {\n        board: null,\n        currListIdx: null,\n        currCardIdx: null,\n        inputTxt: '',\n        filteredMembers: []\n    }\n\n    componentDidMount() {\n        const { board, currListIdx, currCardIdx } = this.props\n        this.setState({ ...this.state, board, currListIdx, currCardIdx, filteredMembers: board.boardMembers })\n    }\n\n    toggleMember = (member) => {\n        const { currListIdx, currCardIdx } = this.state\n        const { loggedInUser, board } = this.props\n        const currCard = board.lists[currListIdx].cards[currCardIdx]\n        if (this.isMemberOnCard(currCard, member._id)) {\n            const memberIdx = currCard.cardMembers.findIndex(cardMember => cardMember._id === member._id)\n            currCard.cardMembers.splice(memberIdx, 1)\n            var action = (loggedInUser._id === member._id) ? 'Left' : `Removed`\n        } else {\n            currCard.cardMembers.push(member)\n            var action = (loggedInUser._id === member._id) ? 'Join' : `Added`\n        }\n        this.props.updateBoard(board, action, currCard)\n    }\n\n    isMemberOnCard = (currCard, memberId) => {\n        return (currCard.cardMembers.some(cardMember => cardMember._id === memberId))\n    }\n\n    handleChange = ({ target }) => {\n        this.setState({ ...this.state, inputTxt: target.value }, () => {\n            const filterRegex = new RegExp(this.state.inputTxt, 'i')\n            this.setState({ ...this.state, filteredMembers: this.props.board.boardMembers.filter(member => filterRegex.test(member.fullname)) })\n        })\n    }\n\n    render() {\n        const { board, currListIdx, currCardIdx, filteredMembers, inputTxt } = this.state\n        if (!board || currCardIdx === null || currListIdx === null) return <></>\n        const currCard = board.lists[currListIdx].cards[currCardIdx]\n        return (\n            <section className=\"members-popover\">\n                <TextareaAutosize\n                    className=\"search-members text-area-auto\"\n                    placeholder=\"Search members\"\n                    type='text'\n                    onChange={this.handleChange}\n                    value={inputTxt}\n                />\n                <h3>Board Members</h3>\n                {filteredMembers.length ?\n                    (filteredMembers.map(member => (\n                        <div className=\"member-preview flex direction-row space-between \" onClick={() => this.toggleMember(member)} >\n                            <div className=\"flex direction-row \">\n                                <Avatar className=\"card-details-avatar\" alt={member.fullname} src={member.imgUrl}\n                                    key={member._id} />\n                                <div className=\"flex align-center\">{member.fullname} ({member.username})</div>\n                            </div>\n                            {this.isMemberOnCard(currCard, member._id) && <DoneIcon />}\n                        </div>\n                    )))\n                    : <>Looks like that person isn't a member yet. <br />\n                        Enter their email address to <br />\n                        add them to the card and board.</>}\n            </section>\n        )\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        board: state.boardReducer.board,\n        loggedInUser: state.userReducer.loggedInUser\n    }\n}\nconst mapDispatchToProps = {\n    updateBoard\n}\n\nexport const MembersPopover = connect(mapStateToProps, mapDispatchToProps)(_MembersPopover)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { TextareaAutosize } from '@mui/material';\nimport { utilService } from '../../services/util.service.js'\nimport { updateBoard, setUpdateLabel } from '../../store/board.actions.js';\nimport DoneIcon from '@mui/icons-material/Done';\n\nclass _EditLabel extends React.Component {\n\n    state = {\n        labelName: '',\n        labelColor: '',\n        isDelete: false,\n        labelsColor: []\n    }\n\n    componentDidMount() {\n        const { labelsProps } = this.props;\n        const currLabel = labelsProps.label;\n        this.createLabelsArr();\n        if (currLabel) this.setState({ labelName: currLabel.title });\n    }\n\n    handleChange = (ev) => {\n        if (ev.key === 'Enter') {\n            ev.preventDefault();\n            this.onSaveLabel();\n            return;\n        }\n        const value = ev.target.value;\n        this.setState({ labelName: value })\n    }\n\n    onSaveLabel = () => {\n        const { labelName, labelColor } = this.state;\n        const { labelsProps, board } = this.props\n        const currLabel = labelsProps.label;\n        if (currLabel) {\n            currLabel.title = labelName ? labelName : currLabel.title;\n            currLabel.color = labelColor ? labelColor : currLabel.color;\n        } else {\n            board.labels.push({ id: utilService.makeId(), title: labelName, color: labelColor })\n        }\n        labelsProps.label = {};\n        this.props.setUpdateLabel(labelsProps)\n        this.props.updateBoard(board);\n        this.props.changeTitle(false, 'labels-preview');\n    }\n\n    labelChoose = (labelColor) => {\n        this.setState({ ...this.state, labelColor })\n    }\n\n    deleteLabel = () => {\n        const { labelsProps, board } = this.props\n        const currLabel = labelsProps.label;\n        const labelIdx = board.labels.findIndex(label => label.id === currLabel.id)\n        board.labels.splice(labelIdx, 1);\n        this.props.updateBoard(board);\n        this.props.changeTitle(false, 'labels-preview');\n    }\n\n    confirmDeleteLabel = () => {\n        this.setState({ ...this.state, isDelete: !this.state.isDelete })\n    }\n\n    createLabelsArr = () => {\n        let labelsColor = [];\n        let clrNum = 1;\n        for (let i = 0; i < 11; i++) {\n            labelsColor.push('clr' + clrNum++);\n        }\n        this.setState({ ...this.state, labelsColor })\n    }\n\n    isLabelChoosen = (chosenLabel) => {\n        return chosenLabel === this.state.labelColor;\n    }\n\n    render() {\n        const { isDelete, labelsColor, labelName } = this.state;\n        const { labelsProps } = this.props;\n        return (\n            <div className=\"labels-board\">\n                {!isDelete && <div>\n                    <label className=\"edit-labels-label\">Name</label>\n                    <TextareaAutosize className=\"text-area-auto label-input\"\n                        value={labelName}\n                        aria-label=\"empty textarea\"\n                        onChange={this.handleChange}\n                        onKeyPress={this.handleChange}\n                        autoFocus\n                    />\n                    <label className=\"edit-labels-label\">Select a color</label>\n                    <div className=\"color-plate\">\n                        {labelsColor.map(label => (\n                            <div className={`color-sqr pointer + ${label}`} key={label.id} onClick={() => this.labelChoose(label)} >\n                                {this.isLabelChoosen(label) && <DoneIcon />}\n                            </div>))}\n                        <p className=\"label-no-color\">No color</p>\n                    </div>\n                    <div className=\"edit-labels-actions flex space-between\">\n                        <div className=\"edit-labels-btn save pointer\" onClick={this.onSaveLabel}>Save</div>\n                        {labelsProps.label && <div className=\"edit-labels-btn delete pointer\" onClick={this.confirmDeleteLabel}>Delete</div>}\n                    </div>\n                </div>}\n                {isDelete && <div>\n                    <p className=\"edit-label-delete\">There is no undo. This will remove this label from all cards and destroy its history.</p>\n                    <div className=\"edit-labels-btn delete deleted pointer\" onClick={this.deleteLabel}>Delete</div>\n                </div>}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        boards: state.boardReducer.boards,\n        labelsProps: state.boardReducer.labelsProps\n    }\n}\n\nconst mapDispatchToProps = {\n    updateBoard,\n    setUpdateLabel\n\n}\n\nexport const EditLabel = connect(mapStateToProps, mapDispatchToProps)(_EditLabel)","import React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport { connect } from 'react-redux';\nimport { loadBoards, removeBoard, addBoard, updateBoard, setUpdateLabel } from '../../store/board.actions.js';\nimport DoneIcon from '@mui/icons-material/Done';\nimport { BsPencil } from \"react-icons/bs\";\nimport { TextareaAutosize } from '@mui/material';\nimport { EditLabel } from './EditLabel.jsx';\nimport { DynamicPopover } from '../DynamicPopover.jsx';\n\nclass _LabelsPopover extends React.Component {\n    state = {\n        board: null,\n        currListIdx: null,\n        currCardIdx: null,\n        // isCreate: false,\n        currLabel: '',\n        filteredLabels: [],\n        inputTxt: ''\n    }\n\n    componentDidMount() {\n        const { board, currListIdx, currCardIdx } = this.props\n        this.setState({ ...this.state, board, currListIdx, currCardIdx, filteredLabels: board.labels })\n    }\n\n    toggleLabel = (label) => {\n        const { currListIdx, currCardIdx } = this.state\n        const newBoard = { ...this.state.board }\n        const currCard = newBoard.lists[currListIdx].cards[currCardIdx]\n        if (this.isLabelOnCard(currCard, label.id)) {\n            const labelIdx = currCard.cardLabelIds.findIndex(cardLabelId => cardLabelId === label.id)\n            newBoard.lists[currListIdx].cards[currCardIdx].cardLabelIds.splice(labelIdx, 1)\n        } else {\n            newBoard.lists[currListIdx].cards[currCardIdx].cardLabelIds.push(label.id)\n        }\n        this.props.updateBoard(newBoard)\n    }\n\n    isLabelOnCard = (currCard, labelId) => {\n        return (currCard.cardLabelIds.some(cardLabelId => cardLabelId === labelId))\n    }\n\n    editLabel = (label) => (ev) => {\n        ev.stopPropagation();\n        const { changeTitle, setUpdateLabel } = this.props;\n        setUpdateLabel({ label, isCreat: true });\n        changeTitle(true, 'Change label', label);\n    }\n\n    createLabel = () =>{\n        this.props.changeTitle(true, 'Create label');\n    }\n\n    // toggleEditLabel = () => {\n    //     this.setState({ ...this.state, isCreate: !this.state.isCreate })\n    // }\n\n    handleChange = ({ target }) => {\n        this.setState({ ...this.state, inputTxt: target.value }, () => {\n            const filterRegex = new RegExp(this.state.inputTxt, 'i')\n            this.setState({ ...this.state, filteredLabels: this.props.board.labels.filter(label => filterRegex.test(label.title)) })\n        })\n    }\n\n\n    render() {\n        const { board, currListIdx, currCardIdx, isCreate, currLabel, filteredLabels, inputTxt } = this.state\n        const { labelsProps} = this.props;\n        if (!board || currCardIdx === null || currListIdx === null) return <></>\n        const currCard = board.lists[currListIdx].cards[currCardIdx]\n        return (\n            <section className=\"label-popover\">\n                {!labelsProps.isCreate && <div>\n                    <TextareaAutosize\n                        className=\"search-labels text-area-auto\"\n                        placeholder=\"Search labels...\"\n                        type='text'\n                        onChange={this.handleChange}\n                        value={inputTxt}\n                    // onKeyPress={this.handleChange}\n                    // onBlur={this.onDiscardChanges}\n                    />\n                    <h4>Labels</h4>\n                    {filteredLabels.length ?\n                        filteredLabels.map(label => (\n                            <div key={label.id} className=\"edit-label-popover flex\" onClick={() => this.toggleLabel(label)} >\n                                <div className={'edit-label-color ' + label.color}>\n                                    <span>{label.title}</span>\n                                    {this.isLabelOnCard(currCard, label.id) && <DoneIcon />}\n                                </div>\n                                <div onClick={this.editLabel(label)} className=\"edit-label-icon pointer\">\n                                    <BsPencil />\n                                </div>\n                            </div>\n                        ))\n                        : <>Sorry no results... <br />\n                            Maybe try to create a new label</>}\n                    <div className=\"create-label pointer\" onClick={this.createLabel}>Create a new label</div>\n                </div>}\n\n            </section>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        board: state.boardReducer.board,\n        labelsProps: state.boardReducer.labelsProps\n    }\n}\n\nconst mapDispatchToProps = {\n    loadBoards,\n    removeBoard,\n    addBoard,\n    updateBoard,\n    setUpdateLabel\n}\n\nexport const LabelsPopover = connect(mapStateToProps, mapDispatchToProps)(_LabelsPopover)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { loadBoards, removeBoard, addBoard, updateBoard } from '../../store/board.actions.js';\nimport DatePicker from \"react-datepicker\";\n\nclass _DatesPopover extends React.Component {\n    state = {\n        date: null,\n    }\n\n    componentDidMount() {\n        const { board, currListIdx, currCardIdx } = this.props\n        const currCard = board.lists[currListIdx].cards[currCardIdx]\n        const date = (currCard.dueDate && currCard.dueDate.date) ? currCard.dueDate.date : Date.now()\n        console.log('date', date)\n        this.setState({ date })\n    }\n\n    handleDateSelect = (date) => {\n        const stringDate = date.toString()\n        const day = stringDate.substring(8, 10)\n        const month = stringDate.substring(4, 7)\n        const year = stringDate.substring(11, 15)\n        const hourGmt = stringDate.substring(17, 28)\n        const timestamp = `${day} ${month} ${year} ${hourGmt}`\n        this.setState({ ...this.state, date: Date.parse(timestamp) })\n    }\n\n    onSaveDate = (date) => {\n        const { board, currListIdx, currCardIdx } = this.props\n        const currCard = board.lists[currListIdx].cards[currCardIdx]\n        // need to fix\n        if (!date) var action = 'Removed due date'\n        else if (date && currCard.duedate && !currCard.duedate.date) var action = 'Set due date'\n        else var action = 'Changed due date'\n        currCard.dueDate = {\n            date: date,\n            isDone: false\n        }\n        this.props.updateBoard(board, action, currCard)\n        this.props.handleClose()\n    }\n\n    render() {\n        const { date } = this.state\n        if (!date) return <></>\n        return (\n            <div className=\"dates-popover\">\n                <DatePicker\n                    onSelect={this.handleDateSelect}\n                    startDate={Date.now()}\n                    // startDate={new Date()}\n                    // dateFormat=\"Pp\"\n                    openToDate={date}\n                    inline\n                    formatWeekDay={nameOfDay => nameOfDay.substr(0, 3)}\n                />\n                <div className=\" flex direction-col\">\n                    <button className=\"btn-date-save\" onClick={() => this.onSaveDate(this.state.date)}>Save</button>\n                    <button className=\"btn-date-remove\" onClick={() => this.onSaveDate(null)}>Remove</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        boards: state.boardReducer.boards\n    }\n}\n\nconst mapDispatchToProps = {\n    loadBoards,\n    removeBoard,\n    addBoard,\n    updateBoard\n}\n\nexport const DatesPopover = connect(mapStateToProps, mapDispatchToProps)(_DatesPopover)\n","import React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport { connect } from 'react-redux';\nimport { utilService } from '../../services/util.service.js';\nimport { loadBoards, removeBoard, addBoard, updateBoard } from '../../store/board.actions.js';\nimport DoneIcon from '@mui/icons-material/Done';\nimport { Button } from '@mui/material';\n\nclass _ChecklistPopover extends React.Component {\n    state = {\n        board: null,\n        currListIdx: null,\n        currCardIdx: null,\n        title: 'Checklist'\n    }\n\n    componentDidMount() {\n        const { board, currListIdx, currCardIdx } = this.props\n        this.setState({ ...this.state, board, currListIdx, currCardIdx })\n    }\n\n    handleChange = ({ target }) => {\n        this.setState({ ...this.state, title: target.value })\n        // this.setState({ ...this.state, board: boardToUpdate })\n    }\n\n    onAddChecklist = (ev) => {\n        ev.preventDefault();\n        const { currListIdx, currCardIdx, title, board } = this.state\n        const currCard = board.lists[currListIdx].cards[currCardIdx]\n        const action = `Added checklist \"${title}\"`\n        const boardToUpdate = { ...this.state.board }\n        boardToUpdate.lists[currListIdx].cards[currCardIdx].checklists.push({\n            checklistId: utilService.makeId(),\n            title,\n            tasks: []\n        })\n        this.props.updateBoard(boardToUpdate, action, currCard)\n        this.props.handleClose()\n    }\n\n    render() {\n        const { board, currListIdx, currCardIdx, title } = this.state\n        if (!board || currCardIdx === null || currListIdx === null) return <></>\n        return (\n            <section className=\"popover-checklist\">\n                <label>Title</label>\n                <form onSubmit={this.onAddChecklist}>\n                    <input className=\"popover-checklist-input\"\n                        name='cardTitle'\n                        type='text'\n                        onChange={this.handleChange}\n                        value={title}\n                    />\n                    <Button onClick={this.onAddChecklist} variant=\"contained\" className=\"add-btn\">Add</Button>\n                </form>\n            </section>\n        )\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        boards: state.boardReducer.boards,\n        loggedInUser: state.userReducer.loggedInUser\n    }\n}\nconst mapDispatchToProps = {\n    updateBoard\n}\n\nexport const ChecklistPopover = connect(mapStateToProps, mapDispatchToProps)(_ChecklistPopover)","import Axios from 'axios'\n\nconst KEY = \"dXZ90rFg6fkomwI0ttsljiR3C_o35DBKwIhHcoX6oow\"\n\nexport const unsplashService = {\n    getImgs\n}\n\nasync function getImgs(keyword, count = 10) {\n    if (!keyword) {\n        keyword = 'scenery'\n        count++\n    }\n    const res = await Axios.get(`https://api.unsplash.com/search/photos?query=${keyword}&per_page=${count}&orientation=landscape&client_id=${KEY}`)\n    const imgs = res.data.results.map(img => ({ id: img.id, small: img.urls.small, full: `${img.urls.full}&auto=format&fit=crop&w=1920`, link: img.links.html, name:img.user.name }))\n    if (keyword === 'scenery') imgs.shift()\n    return imgs\n}","import React from 'react';\nimport { TextareaAutosize } from '@mui/material';\nimport { unsplashService } from '../../services/unsplash.service';\nimport { DebounceInput } from 'react-debounce-input';\nexport class SearchForCover extends React.Component {\n \n    componentDidMount() {\n        this.props.getImgForCover(9);\n    }\n\n    render() {\n        const { handleChange, searchCover, getImgForCover } = this.props;\n        const searchKey = ['Animals', 'Business', 'Nature', 'Organization', 'Colorful', 'Minimal', 'Space', 'Perspective'];\n        return (\n            <div className=\"search-cover\">\n                <div className=\"search-cover-input\">\n                    <DebounceInput \n                        minLength={2}\n                        debounceTimeout={400}\n                        className=\"search-cover-img text-area-auto\"\n                        placeholder=\"Search unsplash photo...\"\n                        type='text'\n                        onChange={handleChange}\n                        value={searchCover}\n                    />\n                </div>\n                <h4>Suggested searches</h4>\n                <div className=\"suggested-keywords\">\n                    {searchKey.map((key, idx) => (\n                        <button className=\"suggested-search-btn\" key={idx} onClick={() => { getImgForCover(12, key) }}>\n                            {key}\n                        </button>))}\n                </div>\n\n            </div>\n        )\n    }\n}","import { utilService } from \"./util.service\";\nconst CLOUD_NAME = 'looply';\nconst UPLOAD_PRESET = 'oxageyls';\n\nexport const cloudinaryService = {\n    uploadFile\n}\n\nfunction uploadFile(ev) {\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\n    const formData = new FormData();\n    // console.log('target', ev.target)\n    formData.append('file', ev.target.files[0])\n    // console.log('ev.target.files[0]):', ev.target.files[0])\n    formData.append('upload_preset', UPLOAD_PRESET);\n    // console.log('formData:', formData)\n\n    return fetch(UPLOAD_URL, {\n        method: 'POST',\n        body: formData\n    })\n        .then(res => res.json())\n        .then(res => ({\n            id: utilService.makeId(),\n            fileName: res.original_filename,\n            url: res.secure_url,\n            createdAt: Date.now()\n        }))\n        .catch(err => console.error(err))\n}","import React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport { connect } from 'react-redux';\nimport { loadBoards, removeBoard, addBoard, updateBoard } from '../../store/board.actions.js';\nimport DoneIcon from '@mui/icons-material/Done';\nimport { unsplashService } from '../../services/unsplash.service';\nimport { color } from '@mui/system';\nimport { SearchForCover } from '../DynamicPopover/SearchForCover';\nimport { cloudinaryService } from '../../services/cloudinary.service.js';\n\n\nclass _CoverPopover extends React.Component {\n    state = {\n        board: null,\n        currListIdx: null,\n        currCardIdx: null,\n        isCoverSelected: 'selected',\n        coverImgs: [],\n        isSearch: false,\n        searchCover: '',\n    }\n\n    componentDidMount() {\n        const { board, currListIdx, currCardIdx } = this.props\n        this.setState({ board, currListIdx, currCardIdx });\n        this.getImgForCover(6);\n    }\n\n    onToggleCover = async (cover) => {\n        const { currListIdx, currCardIdx } = this.state\n        const newBoard = { ...this.state.board }\n        const currCard = newBoard.lists[currListIdx].cards[currCardIdx]\n        if (this.isCoverOnCard(currCard, cover.id)) {\n            newBoard.lists[currListIdx].cards[currCardIdx].cardStyle = {}\n        } else {\n            newBoard.lists[currListIdx].cards[currCardIdx].cardStyle = {\n                id: cover.id,\n                color: cover.color,\n                isCover: false\n            }\n        }\n        await this.props.updateBoard(newBoard)\n    }\n\n    isCoverOnCard = (currCard, coverId) => {\n        return (currCard.cardStyle.id === coverId)\n    }\n\n    handelSize = (currCard, isCover) => {\n        const { board } = this.props\n        currCard.cardStyle.isCover = isCover;\n        this.props.updateBoard(board);\n    }\n\n    onRemoveCover = (currCard) => {\n        const { board } = this.props;\n        currCard.cardStyle = {};\n        this.props.updateBoard(board);\n    }\n\n    handleChange = (ev) => {\n        const value = ev.target.value\n        this.setState({ searchCover: value }, () => { this.getImgForCover(12) })\n    }\n\n    getImgForCover = async (imgToShow, key = '') => {\n        let { searchCover } = this.state;\n        if (key) {\n            searchCover = key\n        }\n        const coverImgs = await unsplashService.getImgs(searchCover, imgToShow);\n        this.setState({ ...this.state, coverImgs });\n    }\n\n    onToggleImgCover = (currCard, coverImg) => {\n        const { board } = this.props;\n        if (this.isCoverOnCard(currCard, coverImg.id)) {\n            currCard.cardStyle = {}\n        } else {\n            currCard.cardStyle = {\n                id: coverImg.id,\n                img: coverImg.small,\n                isCover: false\n            }\n        }\n        this.props.updateBoard(board)\n    }\n\n    onAddImage = async (ev) => {\n        const coverUploadImg = await cloudinaryService.uploadFile(ev);\n        this.onSaveCover(coverUploadImg);\n    }\n\n    onSaveCover = (coverUploadImg) => {\n        const { board, currListIdx, currCardIdx } = this.props;\n        const currCard = board.lists[currListIdx].cards[currCardIdx];\n        if (this.isCoverOnCard(currCard, coverUploadImg.id)) {\n            currCard.cardStyle = {}\n        } else {\n            currCard.cardStyle = {\n                id: coverUploadImg.id,\n                img: coverUploadImg.url,\n                isCover: false\n            }\n        }\n        currCard.attachments.unshift(coverUploadImg);\n        this.props.updateBoard(board)\n\n    }\n\n\n    render() {\n        const { board, currListIdx, currCardIdx, coverImgs, searchCover } = this.state\n        const { changeTitle, isSearch } = this.props;\n        if (!board || currCardIdx === null || currListIdx === null) return <></>\n        const currCard = board.lists[currListIdx].cards[currCardIdx];\n        const halfCover = !currCard.cardStyle.isCover ? 'selected' : '';\n        const fullCover = currCard.cardStyle.isCover ? 'selected' : '';\n        return (\n            <section className=\"popover-cover\">\n                {isSearch && <SearchForCover searchCover={searchCover} getImgForCover={this.getImgForCover} handleChange={this.handleChange} />}\n                {!isSearch && <h4>Size</h4>}\n                {!isSearch && <div>\n                    <div className=\"header-cover\">\n                        <div onClick={() => { this.handelSize(currCard, false) }} className={`header-half-cover pointer  ${halfCover}`}>\n                            <div className=\"paragraph\"></div>\n                            <div className=\"row\"></div>\n                            <div className=\"row second\"></div>\n                        </div>\n                        <div onClick={() => { this.handelSize(currCard, true) }} className={`header-full-cover pointer ${fullCover}`}>\n                            <div className=\"row full\"></div>\n                            <div className=\"row second full\"></div>\n                        </div>\n                    </div>\n                    {currCard.cardStyle.id && <div className=\"remove-cover btn\" onClick={() => { this.onRemoveCover(currCard) }}>Remove cover</div>}\n                </div>\n                }\n\n                {/* { <div className=\"colors-for-cover\"> */}\n                {!isSearch && <h4 className=\"color-title\">Colors</h4>}\n                {!isSearch && <div className=\"color-plate\">\n                    {board.covers.length && board.covers.map(cover => (\n                        <div key={cover.id} onClick={() => this.onToggleCover(cover)}\n                            className={`color-sqr pointer ${cover.color} \n                             ${this.isCoverOnCard(currCard, cover.id) ? 'color-selected' : ''} `}>\n                        </div>\n                    ))}\n                </div>}\n                {/* </div>} */}\n                {!isSearch && <div>\n                    <h4>Attachment</h4>\n                    <label htmlFor=\"file-input\">\n                        <div className=\"uplaod-img btn pointer\">Upload a cover image</div>\n                    </label>\n                    <input type=\"file\" className=\"file-input\" id={'file-input'} onChange={this.onAddImage} />\n                </div>}\n\n                <div >\n                    {!isSearch && <h4>Unsplash</h4>}\n                    {isSearch && <h4>Top photos</h4>}\n                    <div className=\"cover-img-plate \">\n                        {coverImgs.map(coverImg => (<div key={coverImg.id} onClick={() => this.onToggleImgCover(currCard, coverImg)}\n                            className={`img-cover ${this.isCoverOnCard(currCard, coverImg.id) ? 'cover-selected' : ''} `} style={{ backgroundImage: `url(${coverImg.small})` }}></div>))}\n                    </div>\n                </div>\n\n                <div className=\"search-cover btn pointer\">\n                    {!isSearch && <span onClick={() => {\n                        changeTitle(true, 'change cover')\n                        // this.setState({ ...this.state, isSearch: !this.state.isSearch })\n                    }}>Search for photos</span>}\n                </div>\n\n            </section>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        boards: state.boardReducer.boards\n    }\n}\n\nconst mapDispatchToProps = {\n    loadBoards,\n    removeBoard,\n    addBoard,\n    updateBoard\n}\n\nexport const CoverPopover = connect(mapStateToProps, mapDispatchToProps)(_CoverPopover)","export default __webpack_public_path__ + \"static/media/menu-arrow-icon.1596174c.svg\";","export function LabelPreview({ labelId, boardLabels, type}) {\n    const currLabel = boardLabels.find(label => label.id === labelId)\n    \n        return (\n            <div className={`${currLabel.color} label pointer`}>\n                {currLabel.title}\n            </div>\n        )\n}","import React from 'react';\nimport Checkbox from '@mui/material/Checkbox';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\n\nexport class DueDatePreview extends React.Component {\n\n    onToggleDone = (ev) => {\n        ev.stopPropagation();\n        this.props.onToggleDone()\n    }\n\n    render() {\n        const { dueDate } = this.props\n        return (\n            <div className=\"due-date-preview\">\n                <h3>Due Date</h3>\n                <div className=\"date-display flex direction-row\">\n                    <Checkbox checked={dueDate.isDone}\n                        onClick={this.onToggleDone}\n                    />\n                    <div className=\" gray hover flex direction-row align-center\">\n                        <div className=\"date\">{new Date(dueDate.date).toString().substring(0, 16)}</div>\n                        {dueDate.isDone && <div className='status done'>COMPLETE</div>}\n                        {!dueDate.isDone && dueDate.date < Date.now() && <div className='status overdue'>OVERDUE</div>}\n                        <KeyboardArrowDownIcon />\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}","import React from 'react';\nimport { connect } from 'react-redux'\nimport Avatar from '@mui/material/Avatar';\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined';\nimport LocalOfferOutlinedIcon from '@mui/icons-material/LocalOfferOutlined';\nimport CheckBoxOutlinedIcon from '@mui/icons-material/CheckBoxOutlined';\nimport ScheduleOutlinedIcon from '@mui/icons-material/ScheduleOutlined';\nimport CallToActionOutlinedIcon from '@mui/icons-material/CallToActionOutlined';\nimport AddIcon from '@mui/icons-material/Add';\nimport AttachFileOutlinedIcon from '@mui/icons-material/AttachFileOutlined';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport HorizontalRuleIcon from '@mui/icons-material/HorizontalRule';\nimport DownArrow from '../../assets/imgs/icons/menu-arrow-icon.svg';\nimport { LabelPreview } from '../LabelPreview';\nimport { BsThreeDots } from \"react-icons/bs\";\nimport { DueDatePreview } from '../DueDatePreview';\nimport NotificationsActiveOutlinedIcon from '@mui/icons-material/NotificationsActiveOutlined';\nimport NotificationsNoneIcon from '@mui/icons-material/NotificationsNone';\n\nclass _DynamicButton extends React.Component {\n    render() {\n        const { type, loggedInUser } = this.props\n        const DynamicCmp = (props) => {\n            switch (props.type) {\n                case 'members':\n                case 'change members':\n                    return <><PersonOutlineOutlinedIcon />{props.title}</>\n                case 'add-members':\n                case 'add-labels':\n                    return <><AddIcon /></>\n                case 'list actions':\n                    return <><BsThreeDots /></>\n                case 'labels':\n                case 'edit labels':\n                    return <><LocalOfferOutlinedIcon /> {props.title}</>\n                case 'labels-preview':\n                    return <LabelPreview {...props} />\n                case 'checklist':\n                    return <><CheckBoxOutlinedIcon /> Checklist</>\n                case 'dates':\n                    return <><ScheduleOutlinedIcon />{props.title}</>\n                case 'dates-edit':\n                case 'edit-dates':\n                    return <><DueDatePreview  {...props} /> </>\n                case 'attachments':\n                    return <><AttachFileOutlinedIcon className=\"attachment-icon\" /> Attachments</>\n                case 'add-attachments':\n                    return <>Add an attachment</>\n                case 'cover':\n                case 'change cover':\n                    return <><CallToActionOutlinedIcon /> <span>{props.title}</span></>\n                // return <><CallToActionOutlinedIcon /> <span>Cover</span></>\n                case 'delete-card':\n                    return <> <HorizontalRuleIcon /> Delete</>\n                case 'move-card':\n                    return <> <ArrowForwardIcon />  Move</>\n                case 'copy-card':\n                    return <> <ContentCopyIcon /> Copy</>\n                case 'userMenu':\n                    return <>\n                        <Avatar alt=\"\" src={loggedInUser.imgUrl} className=\"logged-in-avatar\">\n                            <p>{loggedInUser.initials}</p>\n                        </Avatar>\n                    </>\n                case 'userBoards':\n                    return <><span onClick={() => props.onToggle()}><span>Boards</span><img src={DownArrow} alt=\"\" /></span></>\n                case 'starredBoards':\n                    return <><span onClick={() => props.onToggle()}><span>Starred</span><img src={DownArrow} alt=\"\" /></span></>\n                case 'newNotif':\n                    return <> <NotificationsActiveOutlinedIcon /> <div className=\"notif-background\" ><span className=\"notif-count\">{this.props.notifCount}</span></div></>\n                case 'noNotif':\n                    return <NotificationsNoneIcon />\n                default:\n                    return props.type\n            }\n        }\n        return (\n            <DynamicCmp type={type} {...this.props} />\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        loggedInUser: state.userReducer.loggedInUser,\n        notifCount: state.boardReducer.notifCount\n    }\n}\n\nexport const DynamicButton = connect(mapStateToProps)(_DynamicButton)","import { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport Avatar from '@mui/material/Avatar';\n\nfunction _UserInfo(props) {\n    const closePopover = () => {\n        props.handleClose()\n    }\n    const { user, loggedInUser } = props\n\n    return (\n        <div className=\"user-info flex\">\n            <Avatar alt=\"\" src={user.imgUrl} className=\"user-avatar\">\n                <p>{user.initials}</p>\n            </Avatar>\n            <div className=\"user-name-info\">\n                <p className=\"fullname\">{user.fullname}</p>\n                <p className=\"username\">{user.username}</p>\n                {(loggedInUser._id === user._id) && <Link className=\"edit-profile\" to=\"/boards\" onClick={closePopover}>Edit profile info</Link>}\n            </div>\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        loggedInUser: state.userReducer.loggedInUser\n    }\n}\n\nexport const UserInfo = connect(mapStateToProps)(_UserInfo)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom';\nimport { onLogout } from '../../store/user.actions'\nimport { UserInfo } from '../UserInfo';\n\nclass _UserMenuPopover extends React.Component {\n    onLogout = async () => {\n        await this.props.onLogout()\n        this.props.history.push('/')\n    }\n\n    render() {\n        const { loggedInUser } = this.props\n        if (!loggedInUser) return (<></>)\n        return (\n            <div className=\"user-menu popover-content\">\n                <UserInfo user={loggedInUser} handleClose={this.props.handleClose} />\n                <div>\n                    <button onClick={this.onLogout}>Logout</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        loggedInUser: state.userReducer.loggedInUser\n    }\n}\n\nconst mapDispatchToProps = {\n    onLogout\n}\n\nconst _UserMenuPopoverWithRouter = withRouter(_UserMenuPopover);\nexport const UserMenuPopover = connect(mapStateToProps, mapDispatchToProps)(_UserMenuPopoverWithRouter)\n","import React from 'react';\nimport Avatar from '@mui/material/Avatar';\nexport class ActivityPreview extends React.Component {\n\n    render() {\n        const { activity, display } = this.props\n        return (\n            <div className=\"activity-preview flex direction-row\">\n                <Avatar className=\"card-details-avatar\" alt={activity.byMember.fullname} src={activity.byMember.imgUrl}\n                    key={activity.byMember._id} />\n                <div>\n                    <h4>{activity.byMember.fullname} {activity.action} {activity.txt}\n                        {(display === 'menu') && activity.card.cardTitle && `on card: \"${activity.card.cardTitle}\"`}\n                    </h4>\n\n                    <small> {new Date(activity.createdAt).toString().substring(0, 16)}</small>\n                </div>\n            </div>\n\n        )\n    }\n}","import Divider from '@mui/material/Divider';\nimport { ActivityPreview } from './ActivityPreview.jsx';\n\nexport function ShowMenu({ board }) {\n\n    return (\n        <>\n            {/* <div className=\"menu-content\"> */}\n                {board.activities.length && board.activities.map(activity => <ActivityPreview activity={activity} display={'menu'} key={activity.id} />)}\n            {/* </div> */}\n        </>\n    )\n\n}\n\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport { ShowMenu } from '../cmp/ShowMenu.jsx';\nimport close from '../assets/imgs/close.svg';\n\nexport function TemporaryDrawer({ board, toggleMenu, isMenuOpen }) {\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        toggleMenu()\n        console.log('toggle menu');\n    };\n\n    const list = (anchor) => (\n        <div className=\"menu-wrapper\">\n            <div className=\"menu-screen\" onClick={toggleDrawer(anchor, false)}></div>\n            <div className=\"board-menu-content\"\n            // sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\n            // role=\"presentation\"\n            // onClick={toggleDrawer(anchor, false)}\n            // onKeyDown={toggleDrawer(anchor, false)}\n            >\n                <div className=\"board-menu-content-header flex\">\n                    <div className=\"title\"><h3>Menu</h3></div>\n                    {/* <span className=\"exit-icon\" onClick={toggleMenu}> */}\n                    <span className=\"exit-icon\" onClick={toggleDrawer(anchor, false)}>\n                        <img src={close} alt=\"Close\" />\n                    </span>\n                </div>\n                <Divider />\n\n                <div className=\"menu-content fancy-scrollbar\">\n                    <div className=\"board-actions\">\n                        <button className=\"menu-action-btn\">\n                            {/* <span className=\"change-bg-preview\" style={board.boardStyle}></span> */}\n                            Change background\n                        </button>\n                    </div>\n                    <Divider />\n                    <div className=\"activities\">\n                        <ShowMenu board={board} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n    const anchor = 'right';\n\n    return (\n        <div className=\"menu-visible\">\n            <React.Fragment key={anchor}>\n                <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n                <Drawer\n                    anchor={anchor}\n                    open={isMenuOpen}\n                    // onClose={toggleDrawer(anchor, false)}\n                    hideBackdrop={true}\n                >\n                    {list(anchor)}\n                </Drawer>\n            </React.Fragment>\n        </div>\n    );\n}\n","import React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport { connect } from 'react-redux';\nimport { loadBoards, removeBoard, addBoard, updateBoard } from '../../store/board.actions.js';\nimport { cloudinaryService } from '../../services/cloudinary.service.js';\nimport { showSuccessMsg, showErrorMsg } from '../../services/event-bus.service';\nimport DoneIcon from '@mui/icons-material/Done';\nimport { color } from '@mui/system';\nimport { utilService } from '../../services/util.service';\nclass _AttachmentsPopover extends React.Component {\n    state = {\n        board: null,\n        currListIdx: null,\n        currCardIdx: null,\n        urlLink: ''\n    }\n\n    componentDidMount() {\n        const { board, currListIdx, currCardIdx } = this.props\n        this.setState({ board, currListIdx, currCardIdx })\n    }\n\n    onAddAttach = async (ev) => {\n        showErrorMsg('Uploading...')\n        const attachment = await cloudinaryService.uploadFile(ev)\n        const { board, currListIdx, currCardIdx } = this.props\n        const currCard = board.lists[currListIdx].cards[currCardIdx]\n        currCard.attachments.unshift(attachment)\n        this.props.updateBoard(board, 'Attached', currCard)\n        this.props.handleClose()\n        showSuccessMsg('Uploading Complete')\n    }\n\n    // onAddLink = (ev) => {\n    //     console.log('even url', ev.target.value);\n    //     const attach = {\n    //         id: utilService.makeId(),\n    //         fileName: 'test',\n    //         url: ev.target.value,\n    //         createdAt: Date.now()\n    //     }\n    //     console.log('attach', attach);\n    //     const { board, currListIdx, currCardIdx } = this.props\n    //     const currCard = board.lists[currListIdx].cards[currCardIdx]\n    //     currCard.attachments.unshift(attach)\n    //     this.props.updateBoard(board, 'Attached', currCard)\n    // }\n\n    render() {\n        const { board, currListIdx, currCardIdx, urlLink } = this.state\n        if (!board || currCardIdx === null || currListIdx === null) return <></>\n        return (\n            <section className=\"popover-attachment flex direction-col\">\n                <label htmlFor=\"file-upload\">Computer</label>\n                <input id=\"file-upload\" type=\"file\" onChange={this.onAddAttach} />\n\n                {/* <label htmlFor=\"url\">Enter an https:// URL:</label>\n                <input type=\"text\" value={urlLink} onChange={this.onAddLink} /> */}\n\n            </section>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        board: state.boardReducer.board\n    }\n}\n\nconst mapDispatchToProps = {\n    loadBoards,\n    removeBoard,\n    addBoard,\n    updateBoard\n}\n\nexport const AttachmentsPopover = connect(mapStateToProps, mapDispatchToProps)(_AttachmentsPopover)","export function DeleteCardPopover({ onDeleteCard }) {\n    return (\n        <section className=\"delete-card-popover\">\n            <p>All actions will be removed from the activity <br />\n                feed and you won’t be able to\n                re-open the <br />\n                card. There is no undo.</p>\n            <button onClick={onDeleteCard}>Delete</button>\n        </section>\n    )\n}","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport { updateBoard } from '../../store/board.actions.js';\nimport { utilService } from '../../services/util.service';\nclass _MoveCopyCardPopoverWithRouter extends React.Component {\n\n    state = {\n        listIdx: 0,\n        cardIdx: 0,\n        title: '',\n    }\n\n    componentDidMount() {\n        const { currListIdx, currCardIdx, currCard, isCopy } = this.props\n        this.setState({ listIdx: currListIdx, cardIdx: currCardIdx, title: currCard.cardTitle })\n    }\n\n    handleChange = ({ target }) => {\n        const { name, value } = target\n        this.setState({ [name]: value })\n    }\n\n    onMoveCard = (cardToMove) => {\n        const { board } = this.props\n        const { listIdx, cardIdx, title } = this.state\n        const listId = board.lists[listIdx].listId\n        let action;\n        board.lists.forEach(list => {\n            list.cards.forEach((boardCard, idx) => {\n                if (boardCard.cardId === cardToMove.cardId) list.cards.splice(idx, 1)\n            })\n            if (list.listId === listId) {\n                list.cards.splice(cardIdx, 0, cardToMove)\n                action = `Moved card ${title}`;\n            } else {\n                action = `copied card ${title}`\n            }\n\n        })\n        this.props.history.push(`/boards/${board._id}`)\n        this.props.updateBoard(board, action, cardToMove)\n    }\n\n    onCopyCard = () => {\n        const { currCard } = this.props\n        const { title } = this.state\n        if (!title) return\n        const duplicatedCard = JSON.parse(JSON.stringify(currCard))\n        duplicatedCard.cardId = utilService.makeId()\n        duplicatedCard.cardTitle = this.state.title\n        this.onMoveCard(duplicatedCard)\n    }\n\n    render() {\n        const { board, isCopy } = this.props\n        const { listIdx, cardIdx, title } = this.state\n        const chosenCards = board.lists[listIdx].cards\n        return (\n            <section className=\"move-copy-card-popover flex direction-col\">\n                <div className=\"board-title\">\n                    <h4>Board:</h4>\n                    <h4>{board.boardTitle}</h4>\n                </div>\n                {\n                    isCopy &&\n                    <div className=\"card-title flex direction-col\">\n                        <label htmlFor=\"title\"><h4>Title:</h4></label>\n                        <TextareaAutosize\n                            id='title'\n                            name='title'\n                            className=\"text-area-auto\"\n                            type='text'\n                            placeholder='Title'\n                            onChange={this.handleChange}\n                            value={title}\n                            // onBlur={this.onSaveDescription}\n                            // onFocus={(ev) => ev.target.select()}\n                            autoFocus\n                        />\n                    </div>\n                }\n                <h4 className=\"copy-to\">copy to...</h4>\n                <div className=\"list-position flex diirection-row space-between\">\n\n                    <FormControl variant=\"standard\" >\n                        <InputLabel id=\"list\">List</InputLabel>\n                        <Select\n                            label=\"List\"\n                            labelId=\"list\"\n                            id=\"select-list\"\n                            value={listIdx}\n                            name=\"listIdx\"\n                            onChange={this.handleChange}\n                        >\n                            {board.lists.map((list, idx) => (<MenuItem value={idx}>{list.listTitle}</MenuItem>))}\n                        </Select>\n                    </FormControl>\n\n                    <FormControl variant=\"standard\"  >\n                        <InputLabel id=\"position\">Position</InputLabel>\n                        <Select\n                            labelId=\"position\"\n                            id=\"select-position\"\n                            value={cardIdx}\n                            name=\"cardIdx\"\n                            onChange={this.handleChange}\n                        >\n                            {chosenCards.length ?\n                                chosenCards.map((card, idx) => <MenuItem value={idx}>{idx ? idx + 1 : 1}</MenuItem>)\n                                :\n                                <MenuItem value={0}>1</MenuItem>}\n                        </Select>\n                    </FormControl>\n                </div>\n\n\n                {!isCopy && <button onClick={() => this.onMoveCard(this.props.currCard)}>Move</button>}\n                {isCopy && <button onClick={this.onCopyCard}>Create card</button>}\n            </section>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        board: state.boardReducer.board,\n        loggedInUser: state.userReducer.loggedInUser\n    }\n}\nconst mapDispatchToProps = {\n    updateBoard\n}\nconst _MoveCopyCardPopover = withRouter(_MoveCopyCardPopoverWithRouter);\nexport const MoveCopyCardPopover = connect(mapStateToProps, mapDispatchToProps)(_MoveCopyCardPopover)","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { FiStar } from 'react-icons/fi';\nimport { userService } from '../../services/user.service';\nimport { utilService } from '../../services/util.service';\nimport { loadBoards, updateBoard } from '../../store/board.actions'\n\nclass _UserBoardsPopover extends React.Component {\n\n    async componentDidMount() {\n        const { loggedInUser, boards } = this.props\n        if (loggedInUser && !boards.length) await this.props.loadBoards(loggedInUser._id)\n    }\n\n    toggleStar = (ev, board) => {\n        ev.stopPropagation()\n        const { loggedInUser, updateBoard } = this.props\n        const updatedBoard = userService.toggleStarBoard(board, loggedInUser._id)\n        updateBoard(updatedBoard)\n        console.log('updated star board');\n    }\n\n    getBoardBtns = (boards) => {\n        console.log('this.props:', this.props);\n        return boards.map(board => {\n            const bgStyle = utilService.getFormattedBgStyle(board.boardStyle)\n            return <div key={board._id} className=\"board-menu-btn flex align-center\">\n                <Link key={board._id} className=\"flex align-center\" to={`/boards/${board._id}`} onClick={() => this.props.handleClose()}>\n                    <span className=\"board-bg\" style={bgStyle}></span>\n                    <p>{board.boardTitle}</p>\n                </Link >\n                {(this.props.type === 'starredBoards') ? <button className=\"star-board\" onClick={(ev) => this.toggleStar(ev, board)}><FiStar /></button> : <></>}\n            </div>\n            // <button key={board._id} className=\"board-menu-btn flex align-center\" onClick={() => this.props.goToBoard(board._id)}>\n            //      <span className=\"board-bg\" style={bgStyle}></span>\n            //      <p>{board.boardTitle}</p>\n            //      {(this.props.type === 'starredBoards') ? <span onClick={(ev) => this.toggleStar(ev, board)}><FiStar /></span> : <></>}\n            //  </button>\n        })\n    }\n\n    getfilteredBoards = (type) => {\n        const { boards, loggedInUser } = this.props\n        return userService.filterUserBoards(boards, loggedInUser._id, type)\n    }\n\n    goToBoard = (boardId) => {\n        this.props.handleClose()\n        this.props.history.push(`/boards/${boardId}`)\n    }\n\n    render() {\n        const { type } = this.props\n        const boardsToShow = (type === 'userBoards') ? this.getfilteredBoards(\"owner\") : this.getfilteredBoards(\"starred\")\n        const guestBoards = (type === 'userBoards') ? this.getfilteredBoards(\"guest\") : []\n        if (!boardsToShow.length && !guestBoards.length) return <div className=\"no-boards\">No boards yet...</div>\n        return (\n            <div className=\"user-boards-popover\">\n                {type === 'userBoards' && <>\n                    {boardsToShow.length ? <div className=\"owner-section\">\n                        <h4>Your Boards</h4>\n                        <div className=\"owned-boards\">\n                            {this.getBoardBtns(boardsToShow)}\n                        </div>\n                    </div> : <></>}\n                    {guestBoards.length ? <div className=\"guest-section\">\n                        <h4>Guest Boards</h4>\n                        <div className=\"guest-boards\">\n                            {this.getBoardBtns(guestBoards)}\n                        </div>\n                    </div> : <></>}\n                </>}\n                {type === 'starredBoards' ? <div className=\"starred-section\">\n                    <div className=\"starred-boards\">\n                        {this.getBoardBtns(boardsToShow)}\n                    </div>\n                </div> : <></>\n                }\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        boards: state.boardReducer.boards,\n        loggedInUser: state.userReducer.loggedInUser\n    }\n}\n\nconst mapDispatchToProps = {\n    loadBoards,\n    updateBoard\n}\n\nexport const UserBoardsPopover = connect(mapStateToProps, mapDispatchToProps)(_UserBoardsPopover)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setNotif, setNotifCount } from '../../store/board.actions';\nimport { ActivityPreview } from '../ActivityPreview';\nimport { withRouter } from 'react-router-dom';\n\nclass _NotifPopover extends React.Component {\n\n    onNotifClick = (cardId) => {\n        const { board } = this.props\n        const list = board.lists.find(list => list.cards.find(card => card.cardId === cardId))\n        if (!list) this.props.history.push(`/cardNotFound`)\n        else this.props.history.push(`/boards/${board._id}/${list.listId}/${cardId}`);\n        this.props.handleClose()\n    }\n\n    render() {\n        const { board, notifCount } = this.props\n        const notifications = board.activities.filter(activity => activity.isNotif)\n        return (\n            <div className=\"notif-popover\">\n                {notifications.length ?\n                    notifications.map((activity, idx) =>\n                        <div onClick={() => this.onNotifClick(activity.card.cardId)}\n                            className={`notif ${(idx < notifCount) ? 'unread' : ''}`} >\n                            <ActivityPreview activity={activity} display={'menu'} key={activity.id} />\n                        </div>)\n\n                    : <div>Sorry... no new notifications to show</div>}\n            </div>\n        )\n    }\n\n}\n\nfunction mapStateToProps(state) {\n    return {\n        board: state.boardReducer.board,\n        isNotif: state.boardReducer.isNotif,\n        loggedInUser: state.userReducer.loggedInUser,\n        notifCount: state.boardReducer.notifCount,\n    }\n}\n\nconst mapDispatchToProps = {\n    setNotif,\n    setNotifCount\n}\n\nconst _NotifPopoverWithRouter = withRouter(_NotifPopover);\nexport const NotifPopover = connect(mapStateToProps, mapDispatchToProps)(_NotifPopoverWithRouter)","import React from 'react';\nimport Popover from '@mui/material/Popover';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport { ActionList } from './DynamicPopover/ActionListPopOver';\nimport { MembersPopover } from './DynamicPopover/MembersPopover';\nimport { LabelsPopover } from './DynamicPopover/LabelsPopover';\nimport { DatesPopover } from './DynamicPopover/DatesPopover';\nimport { ChecklistPopover } from './DynamicPopover/ChecklistPopover';\nimport { CoverPopover } from './DynamicPopover/CoverPopover';\nimport { DynamicButton } from './DynamicCmps/DynamicButton';\nimport { UserMenuPopover } from './DynamicPopover/UserMenuPopover';\nimport { TemporaryDrawer } from '../cmp/DroweMenu.jsx';\nimport { AttachmentsPopover } from './DynamicPopover/AttachmentsPopover';\nimport { DeleteCardPopover } from './DynamicPopover/DeleteCardPopover';\nimport { MoveCopyCardPopover } from './DynamicPopover/MoveCopyCardPopover';\nimport { MuiPickersUtilsProvider, DatePicker, TimePicker, DateTimePicker, } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { removeUser } from '../store/user.actions';\nimport { UserBoardsPopover } from './DynamicPopover/UserBoardsPopover';\nimport { NotifPopover } from './DynamicPopover/NotifPopover';\nimport { IoChevronBackOutline } from 'react-icons/io5';\nimport { EditLabel } from './DynamicPopover/EditLabel';\n\n\nexport class DynamicPopover extends React.Component {\n    state = {\n        anchorEl: null,\n        isEditLabel: false,\n        newTitle: '',\n        isChangeTitle: false,\n        currLabel: '',\n        isSearch: false\n    }\n\n    handleClick = (event) => {\n        event.preventDefault();\n        this.setState({ anchorEl: event.currentTarget })\n    };\n\n    handleClose = () => {\n        if (this.props.type === 'userBoards' || this.props.type === 'starredBoards') this.props.onToggle()\n        this.setState({ anchorEl: null })\n        if (this.props.markReadNotif) this.props.markReadNotif()\n    };\n\n    handleDateChange = () => {\n        console.log('im in DynamicPopover.handleDateChange');\n    }\n\n    changeTitle = (isChangeTitle, newTitle, currLabel = '') => {\n        if (newTitle === 'change cover') {\n            var isSearch = true\n        }\n        this.setState({ ...this.state, newTitle, isChangeTitle, currLabel, isSearch })\n    }\n\n    handleBack = () => {\n        if (this.props.titleModal === 'cover') {\n            var isSearch = true\n        }\n        this.setState({ ...this.state, isChangeTitle: !this.state.isChangeTitle, newTitle: this.props.titleModal, isSearch })\n    }\n\n    render() {\n        let { type, title, titleModal } = this.props\n        const { anchorEl, isChangeTitle, newTitle, currLabel, isSearch } = this.state\n        const open = Boolean(anchorEl);\n        const dnmTitleModal = isChangeTitle ? newTitle : titleModal;\n        let id = open ? 'simple-popover' : undefined;\n        const DynamicCmp = (props) => {\n            switch (props.type) {\n                case 'members':\n                case 'add-members':\n                case 'change members':\n                    return <MembersPopover {...props} />\n                case 'list actions':\n                    return <ActionList {...props} />\n                case 'labels':\n                case 'edit labels':\n                    if (isChangeTitle)\n                        return <EditLabel {...props} />\n                case 'add-labels':\n                    if (isChangeTitle) return <EditLabel {...props} />\n                    return <LabelsPopover {...props} />\n                case 'labels-preview':\n                    if (isChangeTitle) return <EditLabel {...props} />\n                    return <LabelsPopover {...props} />\n                case 'dates-edit':\n                case 'edit-dates':\n                case 'dates':\n                    return <DatesPopover {...props} />\n                case 'attachments':\n                case 'add-attachments':\n                    return <AttachmentsPopover {...props} />\n                case 'cover':\n                case 'change cover':\n                    return <CoverPopover {...props} />\n                case 'checklist':\n                    return <ChecklistPopover {...props} />\n                case 'userMenu':\n                    return <UserMenuPopover {...props} />\n                case 'userBoards':\n                case 'starredBoards':\n                    return <UserBoardsPopover {...props} handleClose={this.handleClose} />\n                case 'boardMenu':\n                    return <TemporaryDrawer {...props} />\n                case 'delete-card':\n                    return <DeleteCardPopover {...props} />\n                case 'move-card':\n                    return <MoveCopyCardPopover {...props} />\n                case 'copy-card':\n                    return <MoveCopyCardPopover {...props} isCopy={true} />\n                case 'newNotif':\n                case 'noNotif':\n                    return <NotifPopover {...props} />\n\n                default:\n                    break;\n            }\n        }\n\n        return (\n            <React.Fragment>\n                <button onClick={this.handleClick}>\n                    <DynamicButton type={type} {...this.props} />\n                </button>\n                <Popover\n                    className={type}\n                    id={id}\n                    open={open}\n                    anchorEl={anchorEl}\n                    onClose={this.handleClose}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                >\n                    {/* OPEN MODAL */}\n                    <div className=\"popover-header-title flex\">\n                        {isChangeTitle &&\n                            <span onClick={this.handleBack} className=\"back-icon pointer\" >\n                                <IoChevronBackOutline />\n                            </span>}\n                        <span>{dnmTitleModal}</span>\n                        <button className=\"close-popover\" onClick={this.handleClose}></button>\n                    </div>\n                    <div className=\"popover-content-container\">\n                        {<DynamicCmp type={type} currLabel={currLabel} isSearch={isSearch} changeTitle={this.changeTitle} {...this.props} handleClose={this.handleClose} />}\n                    </div>\n                </Popover >\n            </React.Fragment>\n        );\n    }\n\n}\n\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport Popover from '@mui/material/Popover';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Avatar from '@mui/material/Avatar';\nimport { updateBoard } from '../../store/board.actions.js';\nimport { containerClasses } from '@mui/material';\n\nclass _SingleMemberPopover extends React.Component {\n    state = {\n        anchorEl: null,\n        currListIdx: null,\n        currCardIdx: null\n        // board: null,\n    }\n    componentDidMount() {\n        const { currListIdx, currCardIdx } = this.props\n        this.setState({ currListIdx, currCardIdx })\n    }\n\n    handleClick = (event) => {\n        event.preventDefault();\n        event.stopPropagation()\n        this.setState({ anchorEl: event.currentTarget })\n    };\n\n    handleClose = (event) => {\n        this.setState({ anchorEl: null })\n        event.stopPropagation()\n    };\n\n    removeMember = (member) => (event) => {\n        event.stopPropagation();\n        const board = this.props.board\n        const { currCard, loggedInUser } = this.props\n        const memberIdx = currCard.cardMembers.findIndex(cardMember => cardMember._id === member._id)\n        currCard.cardMembers.splice(memberIdx, 1);\n        const action = (loggedInUser._id === member._id) ? 'Left' : 'Removed'\n        this.props.updateBoard(board, action, currCard)\n    }\n\n\n    render() {\n        const { type, title, titleModal, member, loggedInUser } = this.props\n        const { anchorEl } = this.state\n        const open = Boolean(anchorEl);\n        const id = open ? 'simple-popover' : undefined;\n        return (\n            <div className=\"single-member-popover\">\n                <span className=\"btn-photo-member\" onClick={this.handleClick}>\n                    <Avatar className=\"card-details-avatar hover\" alt={member.fullname} src={member.imgUrl} />\n                </span>\n                <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={anchorEl}\n                    onClose={this.handleClose}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                >\n                    {/* OPEN MODAL */}\n                    <div className=\"single-member-popover-header-title flex direction-row\">\n                        <div className=\"single-member-title flex direction-row\">\n                            <Avatar src={member.imgUrl} className=\"avatar\">\n                                <p>{member.initials}</p>\n                            </Avatar>\n                            <div className=\"user-name-info\">\n                                <h4 className=\"fullname\">{member.fullname}</h4>\n                                <p className=\"username\">@{member.username}</p>\n                                {(loggedInUser && loggedInUser._id === member._id) &&\n                                    <Link className=\"edit-profile\" to=\"/boards\"\n                                        onClick={this.handleClose}><p>Edit profile info</p></Link>}\n                            </div>\n                        </div>\n                        <button className=\"close-popover\" onClick={this.handleClose}>X</button>\n                    </div>\n                    <div className=\"popover-content-container\">\n                        <div className=\"remove-from-card pointer\" onClick={this.removeMember(member)} >Remove from card</div>\n                    </div>\n                </Popover >\n            </div>\n        );\n    }\n\n}\n\nfunction mapStateToProps(state) {\n    return {\n        loggedInUser: state.userReducer.loggedInUser,\n        board: state.boardReducer.board\n    }\n}\nconst mapDispatchToProps = {\n    updateBoard\n}\n\n\nexport const SingleMemberPopover = connect(mapStateToProps, mapDispatchToProps)(_SingleMemberPopover)","import React from 'react'\nimport Avatar from '@mui/material/Avatar';\nimport AvatarGroup from '@mui/material/AvatarGroup';\nimport AddIcon from '@mui/icons-material/Add';\nimport { DynamicPopover } from './DynamicPopover';\nimport { SingleMemberPopover } from './DynamicPopover/SingleMemberPopover'\nexport function MembersList({ members, board, currListIdx, currCardIdx, isCardOpen, currCard}) {\n    return (\n        <div className=\"members-list flex direction-row\">\n            <AvatarGroup max={15} className=\"members-group\">\n                {members.map(member =>\n                        <SingleMemberPopover key={member._id} member={member}\n                            currListIdx={currListIdx} currCardIdx={currCardIdx} currCard={currCard} />\n                        /* <Avatar className=\"card-details-avatar hover\" alt={member.username}\n                        src={member.imgUrl} key={member._id} /> */\n                )}\n            </AvatarGroup>\n            {isCardOpen &&\n                <DynamicPopover type={'add-members'}\n                    titleModal={'Members'}\n                    board={board}\n                    currListIdx={currListIdx}\n                    currCardIdx={currCardIdx}\n                />\n            }\n        </div>\n    )\n}\n","import { BsCheckBox } from 'react-icons/bs';\n\nexport function CardCheckPreview({ checklists }) {\n\n    function countTasks() {\n        const tasksDisplay = checklists.reduce((acc, checklist) => {\n            acc['taskCount'] += checklist.tasks.length\n            checklist.tasks.forEach(task => {\n                if (task.isDone) acc['taskCountDone']++\n            })\n            return acc;\n        }, { taskCount: 0, taskCountDone: 0 })\n        return tasksDisplay\n    }\n\n    const { taskCount, taskCountDone } = countTasks();\n    const isDoneLabel = taskCount === taskCountDone ? 'done' : '';\n    return (\n        <div className={`badge flex align-center ${isDoneLabel}`}>\n            <span className={`badge-icon checkbox flex align-center  ${isDoneLabel}`} ><BsCheckBox className=\"card-icon\"/></span>\n            <span className=\"card-txt\"> {taskCountDone + '/' + taskCount} </span>\n        </div>\n    )\n\n}","import { FaRegComment } from \"react-icons/fa\";\n\nexport function CardCommentPreview({ cardComments }) {\n    function countComments() {\n        const countComment = cardComments.reduce((acc, comment) => {\n            acc++\n            return acc;\n        }, 0)\n        return countComment\n    }\n    return (\n        <div className=\"badge flex align-center\">\n            <span className=\"badge-icon flex align-center\">\n                <FaRegComment />\n            </span>\n            <span className=\"card-txt\">{countComments()}</span>\n        </div>\n    )\n\n\n}","import React from 'react';\nimport { AiOutlineEye } from \"react-icons/ai\";\nexport class CardVisibilityPreview extends React.Component {\n\n\n    render() {\n        const { cardMembers } = this.props;\n        return (\n            <span>\n                {cardMembers.map(member => <span key={member._id}> {member.isWatch && <AiOutlineEye />}</span>)}\n            </span>\n        )\n\n    }\n\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport {toggleLabels} from '../store/board.actions'\n\nclass _CardLabelsPreview extends React.Component {\n    onToggleLabel = (ev) => {\n        ev.preventDefault();\n        ev.stopPropagation();\n        this.props.toggleLabels()\n    }\n\n    render() {\n        const { labelId, boardLabels } = this.props\n        const isOpen = this.props.isLabelOpen ? ' label-preview-open' : '';\n        const currLabel = boardLabels.find(label => label.id === labelId)\n        if(currLabel.color === 'clr11') return <> </>\n        return (\n            <div onClick={this.onToggleLabel} className={`${currLabel.color} label-card${isOpen}`}>\n                {isOpen && currLabel.title}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        isLabelOpen: state.boardReducer.isLabelOpen,\n    }\n}\nconst mapDispatchToProps = {\n    toggleLabels\n}\n\nexport const CardLabelsPreview = connect(mapStateToProps, mapDispatchToProps)(_CardLabelsPreview)","import React from 'react';\nimport AccessTimeSharpIcon from '@mui/icons-material/AccessTimeSharp';\nimport { RiCheckboxBlankLine } from \"react-icons/ri\";\nimport { IoMdCheckboxOutline } from \"react-icons/io\";\nexport class CardDuDatePreview extends React.Component {\n\n\n    onToggleDone = (ev) => {\n        ev.stopPropagation();\n        ev.preventDefault();\n        const { card } = this.props;\n        card.dueDate.isDone = !card.dueDate.isDone;\n        this.props.updateBoard(this.props.board);\n    }\n\n    render() {\n        const { dueDate } = this.props;\n        const classDone = dueDate.isDone ? 'done' : '';\n        const overDue = !dueDate.isDone && dueDate.date < Date.now() ? 'overdue' : '';\n        return (\n            <div className={`badge due-date flex align-center ${classDone} ${overDue}`} onClick={this.onToggleDone}>\n                { !dueDate.isDone && <span className=\"check\"><RiCheckboxBlankLine />\n                </span>}\n                { dueDate.isDone && <span className=\"check\"> <IoMdCheckboxOutline /> </span>}\n                <span className=\"clock\"><AccessTimeSharpIcon /> </span>\n                <span className=\"date\">{new Date(dueDate.date).toString().substring(3, 10)}</span>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { DynamicPopover } from './DynamicPopover';\nimport { BsArchive } from \"react-icons/bs\";\n\nexport function QuickCardActions({ board, currListIdx, currCardIdx, currCard, OnUpdateBoard, onArchive }) {\n\n    return (\n        <div className=\"quick-card-actions fade-in\">\n\n            <span className=\"quick-card-actions-btn\"> <DynamicPopover type={'edit labels'} title={'Edit labels'} titleModal={'Labels'}\n                board={board}\n                currListIdx={currListIdx}\n                currCardIdx={currCardIdx}\n            />\n            </span>\n\n            <span className=\"quick-card-actions-btn\"> <DynamicPopover type={'change members'} title={'Change members'} titleModal={'Members'}\n                board={board}\n                currListIdx={currListIdx}\n                currCardIdx={currCardIdx}\n            />\n            </span>\n\n            {/* <DynamicPopover type={'edit-dates'} title={'Edit dates'} titleModal={'Dates'}\n                board={board}\n                currListIdx={currListIdx}\n                currCardIdx={currCardIdx}\n            /> */}\n\n            <span className=\"quick-card-actions-btn\"><DynamicPopover type={'change cover'} title={'Change cover'} titleModal={'Cover'}\n                board={board}\n                currListIdx={currListIdx}\n                currCardIdx={currCardIdx}\n            />\n            </span>\n\n            <span className=\"quick-card-actions-btn\"> <DynamicPopover type={'move-card'} titleModal={'Move Card'}\n                board={board}\n                currListIdx={currListIdx}\n                currCardIdx={currCardIdx}\n                currCard={currCard}\n            /></span>\n\n            <span className=\"quick-card-actions-btn\"> <DynamicPopover type={'copy-card'} titleModal={'Copy Card'}\n                board={board}\n                currListIdx={currListIdx}\n                currCardIdx={currCardIdx}\n                currCard={currCard}\n            /></span>\n\n            <span className=\"quick-card-actions-btn\"> <button onClick={onArchive}><BsArchive /> Archive</button></span>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/close-edit-card.56748bb7.svg\";","import React from 'react';\nimport { MembersList } from './MembersList.jsx';\nimport { CardCheckPreview } from './CardCheckPreview.jsx';\nimport { CardCommentPreview } from './CardCommentPreview.jsx';\nimport { CardVisibilityPreview } from './CardVisibilityPreview.jsx';\nimport { BsPencil } from \"react-icons/bs\";\nimport { GrTextAlignFull } from \"react-icons/gr\";\nimport { connect } from 'react-redux';\nimport { TextareaAutosize } from '@mui/material';\nimport { DynamicPopover } from '../cmp/DynamicPopover.jsx';\nimport { updateBoard, loadListAndCard, loadBoard } from '../store/board.actions.js';\nimport { CardLabelsPreview } from './CardLabelsPreview.jsx';\nimport { CardDuDatePreview } from './CardDuDatePreview.jsx';\nimport { QuickCardActions } from './QuickCardActions.jsx';\nimport close from '../assets/imgs/close-edit-card.svg';\n\nclass _QuickCardEditor extends React.Component {\n\n    state = {\n        cardTitle: \"\",\n        isEditTitle: false,\n        isEditMode: false,\n        rect: null\n    }\n\n    toggleEditTitle = (ev) => {\n        if (ev) {\n            ev.stopPropagation();\n            ev.preventDefault();\n            var rect = ev.target.getBoundingClientRect();\n            rect.x = rect.x - 256;\n        }\n        this.props.onEditMode();\n        const { card } = this.props;\n        this.setState({ isEditMode: !this.state.isEditMode, cardTitle: card.cardTitle, rect })\n    }\n\n    handleChange = (ev) => {\n        if (ev.key === 'Enter') {\n            ev.preventDefault();\n            this.onSaveCardTitle(this.state.cardTitle);\n            return;\n        }\n        const value = ev.target.value;\n        this.setState({ ...this.state, cardTitle: value });\n    }\n\n    onSaveCardTitle = () => {\n        const { cardTitle } = this.state\n        if (!cardTitle) return;\n        const { board, card, updateBoard } = this.props;\n        card.cardTitle = cardTitle;\n        updateBoard(board);\n        this.toggleEditTitle();\n        this.props.onEditMode();\n    }\n\n    handleClose = (ev) => {\n        ev.stopPropagation();\n        ev.preventDefault();\n        this.setState({ ...this.state, isEditTitle: !this.state.isEditTitle })\n    }\n\n    onArchive = () => {\n        const { card, board, updateBoard } = this.props;\n        card.isArchived = true;\n        const action = `Archived card`;\n        updateBoard({ ...board }, action, card);\n        this.toggleEditTitle();\n    }\n\n    render() {\n        const { card, board, isDragging, currListIdx, currCardIdx, updateBoard } = this.props\n        const { isEditMode, cardTitle, rect } = this.state;\n        const draggingClass = isDragging ? 'dragged' : 'not-dragged';\n        const coverStyle = card.cardStyle.img ? 'img-cover' : card.cardStyle.color\n        const editClass = isEditMode ? 'quick-card-edit-preview' : '';\n        const isLabels = card.cardLabelIds ? 'show-labels' : ''\n        const isCover = card.cardStyle.isCover ? { fullCover: 'full ' + coverStyle, fullTitle: 'full' } : { fullTitle: 'half' };\n        return (\n            <React.Fragment>\n                {isEditMode && <div className=\"screen-quick-card-edit\" onClick={this.toggleEditTitle}><img src={close} alt=\"close\" /></div>}\n                <div className={editClass} style={isEditMode ? { left: `${rect.x}`, top: `${rect.y}` } : {}}>\n                    <div className={`card-preview-content pointer ${draggingClass}`}>\n                        {card.cardStyle.id && <div className={'card-preview-header ' + coverStyle} style={{ backgroundImage: `url(${card.cardStyle.img})` }}></div>}\n                        <div className={\"card-preview-main-content \" + isCover.fullCover}>\n                            {isCover.fullTitle === 'half' && <div className={`list-card-labels  ${isLabels} flex`}> {card.cardLabelIds && card.cardLabelIds.map(labelId => <CardLabelsPreview key={labelId} labelId={labelId} boardLabels={board.labels} />)}</div>}\n                            {!isEditMode && <span className={`card-preview-title  ${isCover.fullCover}`}>{card.cardTitle}</span>}\n                            {isEditMode && <TextareaAutosize className=\"quick-card-input\"\n                                value={cardTitle}\n                                aria-label=\"card title\"\n                                onChange={this.handleChange}\n                                onKeyPress={this.handleChange}\n                                style={{ height: `90px` }}\n                                onFocus={(ev) => ev.target.select()}\n                                autoFocus\n                            />}\n                            {/* <div onClick={this.onArchive}>Archive</div> */}\n                            {isCover.fullTitle === 'half' && <span className=\"card-preview-icon flex\">\n                                <div className=\"icons-preview flex wrap\">\n                                    {card.dueDate.date && <CardDuDatePreview dueDate={card.dueDate} board={board} card={card} updateBoard={updateBoard}/>}\n                                    {card.description && <div className='badge flex align-center'><GrTextAlignFull /></div>}\n                                    {/* <span className=\"badge is-watch\">{card.cardMembers && <CardVisibilityPreview cardMembers={card.cardMembers} />} </span> */}\n                                    {card.comments.length ? <CardCommentPreview cardComments={card.comments} /> : <> </>}\n                                    <div title=\"checklist\">{card.checklists.length ? <CardCheckPreview checklists={card.checklists} /> : <> </>}</div>\n                                </div>\n                                <div className=\"badge-icon members flex\">{card.cardMembers && <MembersList members={card.cardMembers} currCard={card} isCardOpen={false} />}\n                                </div>\n                            </span>}\n                            {!isEditMode && !card.isArchived && <button className=\"quick-card-edit-btn\" onClick={this.toggleEditTitle}><BsPencil /></button>}\n                        </div>\n                    </div>\n                    {isEditMode && <button className=\"save-quick-card-btn\" onClick={this.onSaveCardTitle}>Save</button>}\n                    {isEditMode && <div><QuickCardActions board={board} currListIdx={currListIdx} currCardIdx={currCardIdx} currCard={card} onArchive={this.onArchive} /></div>}\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        board: state.boardReducer.board,\n        loggedInUser: state.userReducer.loggedInUser\n    }\n}\nconst mapDispatchToProps = {\n    updateBoard,\n    loadListAndCard,\n    loadBoard\n}\n\nexport const QuickCardEditor = connect(mapStateToProps, mapDispatchToProps)(_QuickCardEditor)","import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Link } from 'react-router-dom';\nimport { QuickCardEditor } from './QuickCardEditor.jsx';\nimport { connect } from 'react-redux';\nimport { updateBoard, loadListAndCard } from '../store/board.actions.js';\nimport { withRouter } from 'react-router-dom';\n\nclass _CardPreview extends React.Component {\n\n    state = {\n        isEditMode: false\n    }\n\n    handleDnd = () => {\n        console.log('is dragging', this.props.draggingOver);\n    }\n\n    onEditMode = () => {\n        this.setState({ isEditMode: !this.state.isEditMode })\n    }\n\n    onSelectedCard = () => {\n        const { list, board, card } = this.props;\n        this.props.loadListAndCard(list, card);\n        if (this.state.isEditMode) return;\n        this.props.history.push(`/boards/${board._id}/${list.listId}/${card.cardId}`);\n    }\n\n    render() {\n        const { card, currCardIdx, currListIdx, list } = this.props\n        if(card.isArchived) return <></>\n        return (\n            <Draggable draggableId={card.cardId} index={currCardIdx}>\n                {(provided, snapshot) => (\n                    <div onClick={this.onSelectedCard} {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                        <QuickCardEditor list={list} card={card} currListIdx={currListIdx} currCardIdx={currCardIdx} onEditMode={this.onEditMode} isDragging={snapshot.isDragging} />\n                    </div>\n                )\n                }\n            </Draggable>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        board: state.boardReducer.board,\n        loggedInUser: state.userReducer.loggedInUser\n    }\n}\nconst mapDispatchToProps = {\n    updateBoard,\n    loadListAndCard\n}\nconst _CardPreviewWithRouter = withRouter(_CardPreview);\nexport const CardPreview = connect(mapStateToProps, mapDispatchToProps)(_CardPreviewWithRouter)","import { CardPreview } from './CardPreview.jsx'\nimport { Droppable } from 'react-beautiful-dnd';\n\nexport function CardList({ cards, list, onUpdateBoard, board, currListIdx }) {\n    if (!cards) return <> </>\n    return (\n        <Droppable droppableId={list.listId} type=\"card\">\n            {(provided, snapshot) => (\n                <section className=\"all-cards\" ref={provided.innerRef} {...provided.droppableProps}>\n                        {cards.map((card, index) => (\n                            <CardPreview key={card.cardId} board={board} currListIdx={currListIdx} list={list} currCardIdx={index} card={card} onUpdateBoard={onUpdateBoard} />\n                        ))}\n                    {provided.placeholder}\n                </section>\n            )}\n        </Droppable>\n    )\n}","export default __webpack_public_path__ + \"static/media/plus.57788bd4.svg\";","import React from 'react';\nimport { CardList } from './CardList.jsx';\nimport { AddCard } from './AddCard';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport { boardService } from '../services/board.service.js';\nimport { DynamicPopover } from './DynamicPopover.jsx';\nimport { TextareaAutosize } from '@mui/material';\nimport { BsThreeDots } from \"react-icons/bs\";\nimport plus from '../assets/imgs/plus.svg';\n\nexport class ListPreview extends React.Component {\n\n    state = {\n        isAdding: false,\n        listTitle: \"\",\n        isEditTitle: false\n    }\n\n    toggleOnAdd = () => {\n        this.setState({ isAdding: !this.state.isAdding })\n    }\n\n    onCloseAdding = () => {\n        this.toggleOnAdd();\n    }\n\n    toggleEditTitle = () => {\n        const { list } = this.props;\n        this.setState({ isEditTitle: !this.state.isEditTitle, listTitle: list.listTitle })\n    }\n\n    handleChange = (ev) => {\n        if (ev.key === 'Enter') {\n            ev.preventDefault();\n            this.onSaveListTitle();\n        }\n        const value = ev.target.value;\n        this.setState({ listTitle: value });\n    }\n\n    onSaveListTitle = () => {\n        const { listTitle } = this.state;\n        if (!listTitle) return;\n        const { onUpdateBoard, board, currListIdx } = this.props;\n        board.lists[currListIdx].listTitle = listTitle;\n        onUpdateBoard(board);\n        this.toggleEditTitle();\n    }\n\n\n    render() {\n        const { list, onUpdateBoard, currListIdx, board } = this.props\n        const { isAdding, isEditTitle, listTitle } = this.state\n        return (\n            <Draggable draggableId={list.listId} index={currListIdx}>\n                {provided => (\n                    <section className=\"list-wrapper\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                        <div className=\"list-content flex direction-col\">\n                            <div className=\"list-header flex\">\n                                {!isEditTitle && <h2 onClick={this.toggleEditTitle}>{list.listTitle}</h2>}\n                                {isEditTitle && \n                                    <TextareaAutosize className=\"text-area-auto list-title-input\"\n                                        value={listTitle}\n                                        aria-label=\"empty textarea\"\n                                        onChange={this.handleChange}\n                                        onKeyPress={this.handleChange}\n                                        onBlur={this.onSaveListTitle}\n                                        onFocus={(ev => {\n                                            ev.target.select();\n                                        })}\n                                        autoFocus\n                                    />\n                                }\n                                <div className=\"list-header-menu-btn\">\n                                    <DynamicPopover type={'list actions'} board={board} list={list} onUpdateBoard={onUpdateBoard} titleModal={'List actions'} />\n                                </div>\n                            </div>\n                            <div className=\"list-cards fancy-scrollbar\">\n                                <CardList key={list.listId} cards={list.cards} board={board} currListIdx={currListIdx} list={list} onUpdateBoard={onUpdateBoard} />\n                                {isAdding && <AddCard list={list} onUpdateBoard={onUpdateBoard} onCloseAdding={this.onCloseAdding} />}\n                            </div>\n                            {!isAdding &&\n                                <span className=\"add-card-container\" onClick={() => { this.toggleOnAdd() }}>\n                                    <img src={plus} alt=\"\" />\n                                    Add a card\n                                </span>}\n                        </div>\n                    </section >\n                )\n                }\n            </Draggable>\n\n        )\n    }\n}","import { ListPreview } from './ListPreview.jsx';\nimport { Droppable } from 'react-beautiful-dnd';\n\nexport function BoardList({ lists, onUpdateBoard, board }) {\n\n    return (\n        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\n            {provided => (\n                <div className=\"all-lists flex\" {...provided.droppableProps} ref={provided.innerRef}>\n                    {lists.map((list, index) => (\n                        <ListPreview key={list.listId} board={board} list={list} currListIdx={index} onUpdateBoard={onUpdateBoard} />))}\n                        {provided.placeholder}\n                </div>\n            )}\n        </Droppable>\n    )\n}","import React from 'react'\nimport Avatar from '@mui/material/Avatar';\nimport AvatarGroup from '@mui/material/AvatarGroup';\nexport function MembersListBoard({ members }) {\n    return (\n        <>\n            <AvatarGroup max={5} spacing={3}>\n                {members.map(member => <Avatar alt={member.username} src={member.imgUrl} key={member._id} />)}\n            </AvatarGroup>\n        </>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/bars-loader.8e56973c.svg\";","import React from 'react'\nimport Loader from '../assets/imgs/bars-loader.svg'\n\nexport function Loading() {\n    return (\n            <div className=\"loader flex align-center justify-center\">\n                <img src={Loader} alt=\"loading...\" />\n            </div>\n    )\n}\n","import Divider from '@mui/material/Divider';\nimport { utilService } from '../../../services/util.service';\nimport { ShowMenu } from '../../ShowMenu';\nimport SearchSharpIcon from '@mui/icons-material/SearchSharp';\nimport { BsArchive } from \"react-icons/bs\";\n\nexport function MainBoardMenuContent({ board, changeMenu }) {\n    const bgStyle = utilService.getFormattedBgStyle(board.boardStyle)\n    return (\n        <>\n            <div className=\"board-actions\">\n                <button className=\"menu-action-btn\" onClick={() => changeMenu('Change Background', 'select-bg-type')}>\n                    <span className=\"change-bg-preview\" style={bgStyle}></span>\n                    Change background\n                </button>\n                <button className=\"menu-action-btn search flex align-center\" onClick={() => changeMenu('Search cards', 'search')}>\n                    <span className=\"search-cards-icon\"><SearchSharpIcon /></span>\n                    <span className=\"search-cards-txt\"> Search cards </span>\n                </button>\n                <button className=\"menu-action-btn archive\" onClick={() => changeMenu('Archived', 'archive')}>\n                    <span className=\"archive-icon\"><BsArchive /></span>\n                    <span className=\"archive-txt\">Archived items</span>\n                </button>\n            </div>\n            <Divider />\n            <div className=\"activities\">\n                <ShowMenu board={board} />\n            </div>\n        </>\n    )\n}","export function SelectBgType(props) {\n    // console.log('bg prps', props);\n    return (\n        <div className=\"select-bg flex\">\n            <div className=\"photos\" onClick={() => { props.changeMenu('Photos by Unsplash', 'photos') }}>\n                <img src=\"https://a.trellocdn.com/prgb/dist/images/photos-thumbnail@3x.8f9c1323c9c16601a9a4.jpg\" alt=\"Photos\" />\n                <p>Photos</p>\n            </div>\n            <div className=\"colors\" onClick={() => { props.changeMenu('Colors', 'colors') }}>\n                <img src=\"https://a.trellocdn.com/prgb/dist/images/colors@2x.ec32a2ed8dd8198b8ef0.jpg\" alt=\"Colors\" />\n                <p>Colors</p>\n            </div>\n        </div>\n    )\n}","import { connect } from 'react-redux'\nimport { updateBoard } from \"../../../store/board.actions\"\n\nexport function _ChooseBgColor(props) {\n    const colors = ['#0079bf', '#d29034', '#519839', '#b04632', '#89609e', '#cd5a91', '#4bbf6b', '#00aecc', '#838c91']\n\n    const changeBgColor = (color) => {\n        const newBoard = { ...props.board }\n        newBoard.boardStyle = color\n        props.updateBoard(newBoard, 'changed the board background color')\n    }\n\n    return (\n        <div className=\"choose-bg-color flex wrap\">\n            {colors.map((color, idx) =>\n                (<div key={color} className={`bg-color bgclr${idx + 1}`} onClick={() => { changeBgColor(color) }}></div>))}\n        </div >\n    )\n}\n\nfunction mapStateToProps() {\n    return {}\n}\n\nconst mapDispatchToProps = {\n    updateBoard\n}\n\nexport const ChooseBgColor = connect(mapStateToProps, mapDispatchToProps)(_ChooseBgColor)","import React from 'react'\nimport { DebounceInput } from 'react-debounce-input';\nimport { BiSearch } from 'react-icons/bi'\nimport { unsplashService } from '../../../services/unsplash.service'\nimport { connect } from 'react-redux'\nimport { updateBoard } from '../../../store/board.actions'\nimport { Loading } from '../../Loading'\n\nclass _ChooseBgImg extends React.Component {\n    state = {\n        searchStr: '',\n        imgs: []\n    }\n\n    async componentDidMount() {\n        this.getImgs()\n    }\n\n    handleChange = (ev) => {\n        const value = ev.target.value\n        this.setState({ searchStr: value }, this.getImgs)\n    }\n\n    getImgs = async () => {\n        // console.log('getting imgs for:', this.state.searchStr);\n        const imgs = await unsplashService.getImgs(this.state.searchStr, 18)\n        this.setState(prevState => ({ ...prevState, imgs }))\n    }\n\n    setBgImg = (imgIdx) => {\n        const img = this.state.imgs[imgIdx]\n        const newBoard = { ...this.props.board }\n        newBoard.boardStyle = { full: img.full, small: img.small }\n        this.props.updateBoard(newBoard, 'changed the board background image')\n    }\n\n    openLink = (ev) => {\n        ev.stopPropagation()\n    }\n\n    render() {\n        const { imgs } = this.state\n        if (!imgs || !imgs.length) return <Loading className=\"menu-load\" />\n        return (\n            <div className=\"choose-bg-img\">\n                <div className=\"search-photos flex align-center\">\n                    <BiSearch />\n                    <DebounceInput\n                        minLength={2}\n                        debounceTimeout={400}\n                        onChange={this.handleChange} />\n                </div>\n                <div className=\"bg-img-list flex wrap\">\n                    {imgs.map((img, idx) => (\n                        <div key={img.id} className=\"bg-img\" style={{ backgroundImage: `url(${img.small})` }} onClick={() => this.setBgImg(idx)}>\n                            <a href={img.link} target=\"_blank\" onClick={this.openLink}>{img.name}</a>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps() {\n    return {}\n}\n\nconst mapDispatchToProps = {\n    updateBoard\n}\n\nexport const ChooseBgImg = connect(mapStateToProps, mapDispatchToProps)(_ChooseBgImg)","export default __webpack_public_path__ + \"static/media/checked.440ed774.svg\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport { updateBoard, loadListAndCard, loadBoard, setFilterBy } from '../store/board.actions.js';\nimport Divider from '@mui/material/Divider';\nimport { TextareaAutosize } from '@mui/material';\nimport { DebounceInput } from 'react-debounce-input';\nimport checked from '../assets/imgs/checked.svg';\nimport AvatarGroup from '@mui/material/AvatarGroup';\nimport Avatar from '@mui/material/Avatar';\n\nclass _SearchMenu extends React.Component {\n\n    state = {\n        filterBy: {\n            searchKey: '',\n            labels: [],\n            members: [],\n            dueDate: [],\n            isFilter: false\n        }\n    }\n\n    componentDidMount (){\n        this.setState({ filterBy: this.props.filterBy })\n    }\n\n    handleChange = (ev) => {\n        const value = ev.target.value;\n        const { filterBy } = this.props;\n        filterBy.searchKey = value;\n        filterBy.isFilter = true;\n        this.props.setFilterBy(filterBy, this.props.board._id);\n    }\n\n    onFilterBy = (type, id) => {\n        let filterType = this.props.filterBy[type];\n\n        const filterIdx = filterType.findIndex(filteryid => filteryid === id)\n        if (filterIdx !== -1) {\n            filterType.splice(filterIdx, 1);\n        } else {\n            filterType.push(id);\n        }\n        \n        this.setState({ filterBy: { ...this.state.filterBy, [type]: filterType, isFilter: true } }, () => {\n            this.props.setFilterBy(this.state.filterBy, this.props.board._id);\n        });\n    }\n\n    onToggleSearch = (type, id) => {\n        return this.props.filterBy[type].some(searchId => searchId === id)\n    }\n\n    render() {\n        const { board, filterBy } = this.props;\n        return (\n            <div className=\"search-cards\">\n                <DebounceInput\n                    minLength={2}\n                    debounceTimeout={2000}\n                    className=\"search-cards\"\n                    type='text'\n                    onChange={this.handleChange}\n                    forceNotifyByEnter={false}\n                    value={filterBy.searchKey}\n                />\n                <p>Search by term, label or member</p>\n\n                <Divider />\n                <div className=\"search-types\">\n                    <ul className=\"clean-list\">\n                        {board.labels.map(label => (\n                            <li className=\"labels pointer\" key={label.id} onClick={() => this.onFilterBy('labels', label.id)} >\n                                <div className=\"label-menu\">\n                                    <div className=\"label-list-item\">\n                                        <div className={`label-menu-color pointer ${label.color}`}>\n                                            <span >\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <span>\n                                        {label.title}\n                                    </span>\n                                    <span className=\"checked-icon labels\"> {this.onToggleSearch('labels',label.id) && <img src={checked} alt=\"checked\" />}</span>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n\n                    <Divider />\n                    <div className=\"members-type\">\n                        <ul className=\"members-search clean-list\">\n                            {/* <AvatarGroup max={6} > */}\n                            {board.boardMembers.map(member => (\n                                <li className=\"members-list flex align-center pointer\" key={member._id} onClick={() => this.onFilterBy('members', member._id)} >\n                                    <div>\n                                        <Avatar alt={member.username} src={member.imgUrl} key={member._id} />\n                                    </div>\n                                    <span>{member.username}</span>\n                                    <span className=\"checked-icon members\"> {this.onToggleSearch('members',member._id) && <img src={checked} alt=\"checked\" />}</span>\n                                </li>\n                            ))}\n                            {/* </AvatarGroup> */}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        board: state.boardReducer.board,\n        loggedInUser: state.userReducer.loggedInUser,\n        filterBy: state.boardReducer.filterBy,\n    }\n}\nconst mapDispatchToProps = {\n    updateBoard,\n    loadListAndCard,\n    loadBoard,\n    setFilterBy\n}\n\nexport const SearchMenu = connect(mapStateToProps, mapDispatchToProps)(_SearchMenu)","import React from 'react';\nimport { QuickCardEditor } from './QuickCardEditor.jsx';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateBoard } from '../store/board.actions.js';\nimport { TextareaAutosize } from '@mui/material';\n\nexport class _ArchiveItems extends React.Component {\n\n    state = {\n        searchKey: '',\n    }\n\n    handleChange = (ev) => {\n        const value = ev.target.value;\n        this.setState({ searchKey: value });\n        // regex.test(card.cardTitle)\n    }\n\n    onFilterCards = () => {\n        const { board } = this.props;\n        const regex = new RegExp(this.state.searchKey, 'i');\n        regex.test(board)\n\n    }\n    onSelectedCard = (list, card) => {\n        const { board, toggleMenu } = this.props;\n        toggleMenu();\n        this.props.history.push(`/boards/${board._id}/${list.listId}/${card.cardId}`);\n    }\n\n    onDeleteCard = (listIdx, cardIdx, card) => (ev) => {\n        ev.stopPropagation();\n        ev.preventDefault();\n        const { board, updateBoard, toggleMenu } = this.props;\n        toggleMenu();\n        board.lists[listIdx].cards.splice(cardIdx, 1);\n        updateBoard({ ...board }, 'Deleted card', card.tilte);\n    }\n\n    onSendToBoard = (card) => (ev) => {\n        ev.stopPropagation();\n        ev.preventDefault();\n        const { board, updateBoard, toggleMenu } = this.props;\n        toggleMenu();\n        card.isArchived = false;\n        updateBoard({ ...board });\n    }\n\n    render() {\n        const { board } = this.props;\n        const { searchKey } = this.state;\n        return (\n            <div>\n                {/* <TextareaAutosize className=\"search-archived-cards\"\n                    value={searchKey}\n                    aria-label=\"card title\"\n                    onChange={this.handleChange}\n                    onKeyPress={this.handleChange}\n                    style={{ height: `90px` }}\n                    onFocus={(ev) => ev.target.select()}\n                    autoFocus\n                /> */}\n                {board.lists.map((list, listIdx) => (list.cards.map((card, cardIdx) =>\n                (card.isArchived && <div className=\"archived-list\" onClick={() => { this.onSelectedCard(list, card) }}>\n                    <QuickCardEditor card={card} currListIdx={listIdx} currCardIdx={cardIdx} />\n                    <div className=\"archive-actions flex\">\n                        <p className=\"send-to-board pointer\" onClick={this.onSendToBoard(card)}>Send to board </p>\n                        <span className=\"space\">-</span>\n                        <p className=\"delete-card pointer\" onClick={this.onDeleteCard(listIdx, cardIdx, card)}> Delete</p>\n                    </div>\n                </div>\n                ))))}\n            </div >\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        board: state.boardReducer.board,\n        loggedInUser: state.userReducer.loggedInUser\n    }\n}\nconst mapDispatchToProps = {\n    updateBoard,\n}\nconst _ArchiveItemsWithRouter = withRouter(_ArchiveItems);\nexport const ArchiveItems = connect(mapStateToProps, mapDispatchToProps)(_ArchiveItemsWithRouter)","import React from 'react';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport { IoChevronBackOutline } from 'react-icons/io5'\nimport close from '../assets/imgs/close.svg';\nimport { MainBoardMenuContent } from './DynamicPopover/BoardMenu/MainBoardMenuContent';\nimport { SelectBgType } from './DynamicPopover/BoardMenu/SelectBgType';\nimport { ChooseBgColor } from './DynamicPopover/BoardMenu/ChooseBgColor';\nimport { ChooseBgImg } from './DynamicPopover/BoardMenu/ChooseBgImg';\nimport { SearchMenu } from './SearchMenu';\nimport { ArchiveItems } from './ArchiveItems';\n\nexport function DynamicBoardMenu({ board, toggleMenu, isMenuOpen, target, title, changeMenu, onFilterCards }) {\n\n    const DynamicCmp = (props) => {\n        switch (props.target) {\n            case 'main':\n                return <MainBoardMenuContent {...props} />\n            case 'select-bg-type':\n                return <SelectBgType {...props} />\n            case 'colors':\n                return <ChooseBgColor {...props} />\n            case 'photos':\n                return <ChooseBgImg {...props} />\n            case 'search':\n                return <SearchMenu {...props} />\n            case 'archive':\n                return <ArchiveItems {...props} />\n        }\n    }\n\n    const anchor = 'right';\n\n    return (\n        <div className=\"menu-visible\">\n            <React.Fragment key={anchor}>\n                <Button onClick={toggleMenu}>{anchor}</Button>\n                <Drawer\n                    anchor={anchor}\n                    open={isMenuOpen}\n                    // onClose={toggleDrawer(anchor, false)}\n                    hideBackdrop={true}\n                >\n                    <div className=\"menu-wrapper\">\n                        <div className=\"menu-screen\" onClick={toggleMenu}></div>\n                        <div className=\"board-menu-content\">\n                            <div className=\"board-menu-content-header flex\">\n                                <div className=\"title\"><h3>{title}</h3></div>\n                                <span className=\"exit-icon\" onClick={toggleMenu}>\n                                    <img src={close} alt=\"Close\" />\n                                </span>\n\n                                {(target !== 'main') &&\n                                    <span className=\"back-icon\" onClick={() => changeMenu('Menu', 'main')}>\n                                        <IoChevronBackOutline />\n                                    </span>}\n                            </div>\n                            <Divider />\n                            <div className=\"menu-content fancy-scrollbar\">\n                                <DynamicCmp target={target} board={board} changeMenu={changeMenu} toggleMenu={toggleMenu} onFilterCards={onFilterCards}/>\n                            </div>\n                        </div>\n                    </div>\n                </Drawer>\n            </React.Fragment>\n        </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/close-filter.aedc814a.svg\";","import React from \"react\"\nimport { connect } from 'react-redux'\nimport { IconContext } from \"react-icons\";\nimport { FiStar } from 'react-icons/fi';\nimport { BsThreeDots } from \"react-icons/bs\";\nimport AutosizeInput from 'react-input-autosize';\n\nimport { userService } from \"../services/user.service\"\nimport { updateBoard, setNotif, setFilterBy } from \"../store/board.actions\"\nimport { MembersListBoard } from \"./MembersListBoard\"\nimport { TemporaryDrawer } from '../cmp/DroweMenu.jsx';\nimport { Loading } from \"./Loading\";\nimport { DynamicBoardMenu } from \"./DynamicBoardMenu\";\nimport { socketService } from '../services/socket.service';\nimport EqualizerIcon from '@mui/icons-material/Equalizer';\nimport close from '../assets/imgs/close-filter.svg';\n\nclass _BoardHeader extends React.Component {\n  state = {\n    isEditTitle: false,\n    title: '',\n    isMenuOpen: false,\n    menuTitle: 'Menu',\n    menuTarget: 'main',\n    cardsCount: 0\n  }\n\n  componentDidMount() {\n    this.setState({ title: this.props.board.boardTitle })\n    // socketService.setup()\n\n    // socketService.on('sending notification', (isNotif) => {\n    //   this.props.setNotif(isNotif)\n    // })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.filterBy && prevProps.filterBy !== this.props.filterBy) {\n      this.onFilterCards()\n    }\n  }\n\n  handleChange = (ev) => {\n    const value = ev.target.value\n    this.setState({ title: value })\n  }\n\n  toggleChangeTitle = () => {\n    const { isEditTitle } = this.state\n    this.setState({ isEditTitle: !isEditTitle })\n  }\n\n  saveBoardTitle = (ev) => {\n    ev.preventDefault()\n    let { title } = this.state\n    const { board, updateBoard } = this.props\n    if (!title) title = 'Untitled'\n    if (title === board.boardTitle) {\n      this.toggleChangeTitle()\n      return\n    }\n    board.boardTitle = title\n    updateBoard(board, \"changed board title\")\n    this.toggleChangeTitle()\n  }\n\n  onToggleStarBoard = () => {\n    const { board, updateBoard, loggedInUser } = this.props\n    const updatedBoard = userService.toggleStarBoard(board, loggedInUser._id)\n    updateBoard(updatedBoard)\n  }\n\n  onFilterCards = () => {\n    const { board, filterBy } = this.props;\n    if (!filterBy.members.length && !filterBy.labels.length && filterBy.searchKey === '') {\n      this.setState({ ...this.state, cardsCount: 0 });\n      filterBy.isFilter = false;\n    } else {\n      this.setState({ ...this.state, cardsCount: board.cardsCount });\n    }\n  }\n\n  resetSearch = () => {\n    this.props.setFilterBy({\n      searchKey: '',\n      labels: [],\n      members: [],\n      isFilter: false\n    }, this.props.board._id)\n    this.setState({ ...this.state, cardsCount: 0 });\n  }\n\n  toggleMenu = () => {\n    const { isMenuOpen } = this.state\n    // this.setState(prevState => ({ ...prevState, isMenuOpen: !isMenuOpen }))\n    this.setState(prevState => ({ ...prevState, isMenuOpen: !isMenuOpen, menuTitle: 'Menu', menuTarget: 'main' }))\n  }\n\n  changeMenu = (menuTitle, menuTarget) => {\n    this.setState(prevState => ({ ...prevState, menuTitle, menuTarget }))\n  }\n\n  openSearchOnMenu = () => {\n    const { isMenuOpen } = this.state\n    this.setState(prevState => ({ ...prevState, isMenuOpen: !isMenuOpen, menuTitle: 'Search cards', menuTarget: 'search' }))\n  }\n\n  render() {\n    const { board, loggedInUser, filterBy } = this.props\n    const { title, isEditTitle, isMenuOpen, menuTarget, menuTitle, notification } = this.state\n    const isStarred = userService.isBoardStarred(board, loggedInUser._id)\n    return (\n      <div className=\"board-header flex align-center space-between wrap\">\n        <div className=\"header-left flex align-center\">\n          {!isEditTitle && <h1 className=\"board-btn header-title\" onClick={this.toggleChangeTitle}>{board.boardTitle}</h1>}\n          {isEditTitle &&\n            <form onSubmit={this.saveBoardTitle}>\n              <AutosizeInput\n                className=\"header-title-input\"\n                autoFocus\n                name=\"boardTitle\"\n                type=\"text\"\n                placeholder=\"Enter Title\"\n                value={title}\n                inputStyle={{ fontSize: 18, fontWeight: 700, color: \"#172b4d\" }}\n                onChange={this.handleChange}\n                onBlur={this.saveBoardTitle}\n              />\n            </form>\n          }\n          <button className={`board-btn star ${isStarred ? \" active\" : \"\"}`} onClick={this.onToggleStarBoard}>\n            <IconContext.Provider value={{ className: \"star-icon\" }} >\n              <FiStar />\n            </IconContext.Provider>\n          </button>\n          <span className=\"board-header-divider\"></span>\n          <div className=\"board-members\">\n            <MembersListBoard members={board.boardMembers} />\n          </div>\n        </div>\n        <div className=\"header-right flex\">\n          {filterBy.isFilter && <div className=\"cards-count pointer\">\n            <span onClick={this.openSearchOnMenu}  className=\"number-count\">{board.cardsCount} search results</span>\n            <span onClick={this.resetSearch} className=\"close-filter-btn\"><img src={close} alt=\"close\" /></span>\n          </div>}\n          <button className=\"board-btn flex align-center\" onClick={this.props.onOpenDashboard}><EqualizerIcon /> Dashboard</button>\n            {/* <span className=\"icon\"><EqualizerIcon /></span>\n            <span className=\"title\">Dashboard</span> */}\n          {!isMenuOpen && <button className=\"board-btn show-menu flex align-center\" onClick={this.toggleMenu}>\n            <span className=\"icon flex justify-center align-center\"><BsThreeDots /> </span>\n            <span className=\"title\">Show menu</span>\n          </button>}\n          {isMenuOpen && <DynamicBoardMenu board={board} toggleMenu={this.toggleMenu} onFilterCards={this.onFilterCards}\n            isMenuOpen={isMenuOpen} target={menuTarget} title={menuTitle} changeMenu={this.changeMenu} />}\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    loggedInUser: state.userReducer.loggedInUser,\n    notifCount: state.boardReducer.notifCount,\n    filterBy: state.boardReducer.filterBy,\n  }\n}\n\nconst mapDispatchToProps = {\n  updateBoard,\n  setNotif,\n  setFilterBy,\n\n}\n\nexport const BoardHeader = connect(mapStateToProps, mapDispatchToProps)(_BoardHeader)","export default __webpack_public_path__ + \"static/media/plus-white.c1dcc11a.svg\";","import React from 'react';\nimport { utilService } from '../services/util.service.js';\nimport { TextareaAutosize } from '@mui/material';\nimport { Button } from '@mui/material';\nimport close from '../assets/imgs/close.svg';\nimport AddIcon from '@mui/icons-material/Add';\nimport plus from '../assets/imgs/icons/plus-white.svg';\nexport class AddList extends React.Component {\n    state = {\n        listTitle: \"\",\n        isAdding: false\n    }\n\n    handleChange = (ev) => {\n        if (ev.key === 'Enter') {\n            ev.preventDefault();\n            this.onAddList();\n            return;\n        }\n        const value = ev.target.value;\n        this.setState({ listTitle: value });\n    }\n\n    onAddList = () => {\n        const listTitle = this.state.listTitle;\n        if (!listTitle) {\n            this.onCloseAdding()\n            return\n        }\n        const newList = {\n            listId: utilService.makeId(),\n            listTitle,\n            cards: []\n        }\n        const { board } = this.props;\n        board.lists.push(newList);\n        const action = `Added list ${listTitle}`\n        this.setState({ listTitle: \"\" });\n        this.props.onUpdateBoard(board, action);\n        this.onCloseAdding();\n    }\n\n    toggleOnAdd = () => {\n        this.setState({ isAdding: !this.state.isAdding })\n    }\n\n    onCloseAdding = () => {\n        this.toggleOnAdd();\n    }\n\n    render() {\n        const { listTitle, isAdding } = this.state;\n        const addMode = isAdding ? 'add-mode' : '';\n        return (\n            <div onClick={this.toggleOnAdd} className={'add-list board-btn flex align-center pointer ' + addMode}>\n               {isAdding &&  <form onSubmit={this.onAddList} >\n                    <TextareaAutosize className=\"text-area-auto list-input\"\n                        value={listTitle}\n                        aria-label=\"empty textarea\"\n                        placeholder=\"Enter list title\"\n                        onChange={this.handleChange}\n                        onKeyPress={this.handleChange}\n                        onBlur={this.onAddList}\n                        autoFocus\n                    />\n                    <div className=\"add-list-actions flex align-center\">\n                        <Button className=\"add-list-btn\">Add List</Button>\n                        <span className=\"close-add-list-btn\" onClick={this.onCloseAdding}><img src={close} alt=\"close\" /></span>\n                    </div>\n                </form>}\n                {!isAdding && <span className=\"plus flex align-center\" onClick={() => {\n                    this.toggleOnAdd()\n                }}> <img src={plus} alt=\"plus\" /><span className=\"add-list-txt\">Add another list</span></span>}\n               \n            </div>\n        )\n    }\n}\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { updateBoard } from '../../store/board.actions.js';\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined';\n\nclass _JoinCard extends React.Component {\n\n    onJoinCard = (member) => {\n        const { board, currListIdx, currCardIdx } = this.props\n        const currCard = board.lists[currListIdx].cards[currCardIdx]\n        board.lists[currListIdx].cards[currCardIdx].cardMembers.push(member)\n        var action = `${member} Added to `\n        this.props.updateBoard(board, action, currCard)\n    }\n\n    isMemberOnCard = (currCard, memberId) => {\n        return (currCard.cardMembers.some(cardMember => cardMember._id === memberId))\n    }\n\n    render() {\n        const { currListIdx, currCardIdx, loggedInUser, board } = this.props\n        if (!board) return <></>\n        const currCard = board.lists[currListIdx].cards[currCardIdx]\n        if (this.isMemberOnCard(currCard, loggedInUser._id)) return <></>\n        return (\n            <>\n                <h4>SUGGESTED</h4>\n                <div className=\"btn-container join-to-card\">\n                    <button onClick={() => this.onJoinCard(loggedInUser)}><PersonOutlineOutlinedIcon /> Join</button>\n                </div>\n            </>\n        )\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        board: state.boardReducer.board,\n        loggedInUser: state.userReducer.loggedInUser\n    }\n}\nconst mapDispatchToProps = {\n    updateBoard\n}\n\nexport const JoinCard = connect(mapStateToProps, mapDispatchToProps)(_JoinCard)","import React from 'react';\nimport { connect } from 'react-redux';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport RedoIcon from '@mui/icons-material/Redo';\nimport { BsArchive } from \"react-icons/bs\";\nimport { updateBoard } from '../../store/board.actions.js';\nimport { DynamicPopover } from '../DynamicPopover.jsx';\n\nclass _ArchiveButtoms extends React.Component {\n\n    onToggleArchived = () => {\n        const { board, currCard } = this.props\n        currCard.isArchived = !currCard.isArchived\n        this.props.updateBoard(board, `Archived card ${currCard.title}`, currCard)\n    }\n\n    onDeleteCard = () => {\n        const { board, currListIdx, currCardIdx, currCard } = this.props\n        this.props.handleClose()\n        board.lists[currListIdx].cards.splice(currCardIdx, 1)\n        this.props.updateBoard(board, `Deleted card`, currCard)\n    }\n\n    render() {\n        const { currCard } = this.props\n        return (\n            <>\n                {\n                    !currCard.isArchived &&\n                    <button onClick={this.onToggleArchived}><DeleteIcon />Archive</button>\n                }\n                {\n                    currCard.isArchived && <>\n                        <button onClick={this.onToggleArchived}><RedoIcon />Send to board</button>\n                        <DynamicPopover type={'delete-card'} titleModal={'Delete card?'}\n                            onDeleteCard={this.onDeleteCard} />\n                    </>\n                }\n\n            </>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        board: state.boardReducer.board,\n        loggedInUser: state.userReducer.loggedInUser\n    }\n}\n\nconst mapDispatchToProps = {\n    updateBoard,\n}\n\nexport const ArchiveButtoms = connect(mapStateToProps, mapDispatchToProps)(_ArchiveButtoms)","import React from 'react';\nimport { DynamicPopover } from './DynamicPopover';\nimport { JoinCard } from './CardDetails/JoinCard';\nimport { ArchiveButtoms } from './CardDetails/ArchiveButtoms';\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined';\n\nexport function CardSideBar({ board, currListIdx, currCardIdx, OnUpdateBoard, handleClose }) {\n    const currCard = board.lists[currListIdx].cards[currCardIdx]\n    return (\n        <div className=\"add-to-card\">\n\n            <JoinCard board={board}\n                currListIdx={currListIdx}\n                currCardIdx={currCardIdx} />\n\n            <h4>ADD TO CARD</h4>\n            <div className=\"btn-container\">\n\n                <DynamicPopover type={'members'} title={'Members'} titleModal={'Members'}\n                    board={board}\n                    currListIdx={currListIdx}\n                    currCardIdx={currCardIdx}\n                />\n                <DynamicPopover type={'labels'} title={'Labels'} titleModal={'Labels'}\n                    board={board}\n                    currListIdx={currListIdx}\n                    currCardIdx={currCardIdx}\n                />\n\n                <DynamicPopover type={'checklist'} title={'Checklist'} titleModal={'Add checklist'}\n                    board={board}\n                    currListIdx={currListIdx}\n                    currCardIdx={currCardIdx}\n                />\n                <DynamicPopover type={'dates'} title={'Dates'} titleModal={'Dates'}\n                    board={board}\n                    currListIdx={currListIdx}\n                    currCardIdx={currCardIdx}\n                />\n\n                <DynamicPopover type={'attachments'} title={'attachments'} titleModal={'Attachments'}\n                    board={board}\n                    currListIdx={currListIdx}\n                    currCardIdx={currCardIdx}\n                />\n\n                {!currCard.cardStyle.id && <DynamicPopover type={'cover'} title={'Cover'} titleModal={'Cover'}\n                    board={board}\n                    currListIdx={currListIdx}\n                    currCardIdx={currCardIdx}\n                />}\n\n\n                <h4>ACTIONS</h4>\n\n                <DynamicPopover type={'move-card'} titleModal={'Move Card'}\n                    board={board}\n                    currListIdx={currListIdx}\n                    currCardIdx={currCardIdx}\n                    currCard={currCard}\n                />\n\n                <DynamicPopover type={'copy-card'} titleModal={'Copy Card'}\n                    board={board}\n                    currListIdx={currListIdx}\n                    currCardIdx={currCardIdx}\n                    currCard={currCard}\n                />\n\n                <ArchiveButtoms currCard={currCard}\n                    currListIdx={currListIdx} currCardIdx={currCardIdx}\n                    handleClose={handleClose}\n                />\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { DynamicPopover } from './DynamicPopover'\nexport function CardLabelsList({ cardLabelIds, boardLabels, board, currCardIdx, currListIdx, changeTitle }) {\n    \n    return (\n        <div>\n            <h3>Labels</h3>\n            <div className=\"labels-list flex wrap\">\n                {cardLabelIds.map(labelId =>\n                    <DynamicPopover key={labelId} labelId={labelId} boardLabels={boardLabels} type={'labels-preview'} titleModal={'Labels'}\n                        board={board}\n                        currListIdx={currListIdx}\n                        currCardIdx={currCardIdx}\n                    />)}\n                {/* <LabelPreview key={labelId} labelId={labelId} boardLabels={boardLabels} />)} */}\n\n                <DynamicPopover className=\"add-labels\" type={'add-labels'} titleModal={'Labels'}\n                    board={board}\n                    currListIdx={currListIdx}\n                    currCardIdx={currCardIdx}\n                />\n                \n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport Avatar from '@mui/material/Avatar';\nexport class CommentPreview extends React.Component {\n\n    render() {\n        const { comment } = this.props\n        return (\n            <div className=\"card-details-comment flex direction-row\">\n                <Avatar className=\"card-details-avatar\" alt={comment.byMember.fullname} src={comment.byMember.imgUrl}\n                    key={comment.byMember._id} />\n                <div className=\"comment-content\">\n                    <div className=\"flex direction-row\">\n                        <h4>{comment.byMember.fullname}</h4>\n                        <small> {new Date(comment.createdAt).toString().substring(0, 16)}</small>\n                    </div>\n                    <div className=\"comment-txt\">\n                        <p>{comment.txt}</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport { CommentPreview } from './CommentPreview'\nexport function CommentsList({ comments }) {\n    if (!comments) return <React.Fragment></React.Fragment>\n    return (\n        <div>\n            {comments.length && comments.map(comment => <CommentPreview comment={comment}\n                key={comment.id} />)}\n        </div>\n    )\n}\n","import React from 'react'\nimport { ActivityPreview } from './ActivityPreview'\nexport function ActivityList({ activities, currCard }) {\n    if (!activities) return <></>\n    activities = activities.filter(activity => activity.card.cardId === currCard.cardId)\n    return (\n        <div>\n            {activities.length ? activities.map(activity => <ActivityPreview activity={activity}\n                key={activity.id} />) : <></>}\n        </div>\n    )\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Avatar from '@mui/material/Avatar';\nimport { Loading } from '../Loading';\nimport { CommentsList } from '../CommentsList';\nimport { ActivityList } from '../ActivityList';\nimport { utilService } from '../../services/util.service';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport FormatListBulletedIcon from '@mui/icons-material/FormatListBulleted';\nclass _CardActivities extends React.Component {\n    state = {\n        board: null,\n        currListIdx: null,\n        currCardIdx: null,\n        isEditing: false,\n        isDetails: false,\n        newActivityTxt: ''\n    }\n\n    componentDidMount() {\n        const { board, currListIdx, currCardIdx } = this.props\n        this.setState({ ...this.state, board, currListIdx, currCardIdx })\n        console.log('loggedin user: ', this.props.loggedInUser)\n    }\n\n    // state = {\n    //     activities: null,\n    //     isEditing: false,\n    //     newActivityTxt: ''\n    // }\n\n    // componentDidMount() {\n    //     this.setState({ activities: this.props.cardActivities })\n    // }\n\n    onToggleDetails = () => {\n        this.setState({ ...this.state, isDetails: !this.state.isDetails })\n    }\n    onToggleComment = () => {\n        // ev.stopPropagation()\n        this.setState({ ...this.state, isEditing: true })\n    }\n    handleChange = ({ target }) => {\n        this.setState({ ...this.state, newActivityTxt: target.value });\n    }\n    onSaveActivity = (ev) => {\n        ev.stopPropagation()\n        if (!this.state.newActivityTxt) return\n        const { currListIdx, currCardIdx } = this.state\n        const newBoard = { ...this.state.board }\n        newBoard.lists[currListIdx].cards[currCardIdx].comments.unshift({\n            // byMember: userService.getLoggedinUser(),\n            byMember: this.props.loggedInUser,\n            createdAt: Date.now(),\n            id: utilService.makeId(),\n            txt: this.state.newActivityTxt\n        })\n\n        const currCard = newBoard.lists[currListIdx].cards[currCardIdx];\n        const action = `Added comment`\n        const txt = this.state.newActivityTxt.substring(0, 20)\n        this.props.OnUpdateBoard(newBoard, action, currCard, txt)\n        this.setState({ ...this.state, newActivityTxt: '', isEditing: false });\n    }\n\n    render() {\n        let { isEditing, isDetails, newActivityTxt, board, currListIdx, currCardIdx } = this.state\n        const { loggedInUser } = this.props\n        if (!board || currCardIdx === null || currListIdx === null) return <Loading />\n        const comments = board.lists[currListIdx].cards[currCardIdx].comments\n        const currCard = board.lists[currListIdx].cards[currCardIdx]\n        // if (!comments) return <Loading />\n        return (\n            <div className=\"card-activities\">\n                <div className=\"flex direction-row space-between \">\n                    <div className=\"flex direction-row\">\n                        <FormatListBulletedIcon className=\"card-details-icon\" />\n                        <h3 className=\"card-subtitle\">Activity</h3>\n                    </div>\n                    {!isDetails && <button className=\"show-hide hover\" onClick={this.onToggleDetails}>Show details</button>}\n                    {isDetails && <button className=\"show-hide hover\" onClick={this.onToggleDetails}>Hide details</button>}\n                </div>\n                <div className=\"add-comment-container flex direction-row \">\n                    <Avatar className=\"card-details-avatar\" alt={loggedInUser.username} src={loggedInUser.imgUrl} />\n                    <div className=\" comment-container flex direction-col\" onClick={this.onToggleComment}>\n                        <TextareaAutosize\n                            className=\"input-comment text-area-auto\"\n                            name='description'\n                            type='text'\n                            placeholder='Write a comment...'\n                            onChange={this.handleChange}\n                            // onBlur={this.onToggleComment}\n\n                            value={newActivityTxt}\n                        />\n                        {isEditing && <button className=\"comment-save\" onClick={(ev) => this.onSaveActivity(ev)}>Save</button>}\n                    </div>\n                </div>\n\n\n                {currCard.comments.length ? <CommentsList comments={currCard.comments} /> : <></>}\n                {isDetails && <ActivityList currCard={currCard} activities={board.activities} />}\n\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        board: state.boardReducer.board,\n        loggedInUser: state.userReducer.loggedInUser\n    }\n}\nconst mapDispatchToProps = {\n    // removeBoard,\n    // loadBoard,\n    // updateBoard\n}\n\nexport const CardActivities = connect(mapStateToProps, mapDispatchToProps)(_CardActivities)","import React from 'react';\nimport { Loading } from './Loading';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport CreditCardOutlinedIcon from '@mui/icons-material/CreditCardOutlined';\nexport class CardTitle extends React.Component {\n    state = {\n        board: null,\n        currListIdx: null,\n        currCardIdx: null,\n        isEdit: false\n    }\n\n    componentDidMount() {\n        const { board, currListIdx, currCardIdx } = this.props\n        this.setState({ board, currListIdx, currCardIdx })\n    }\n\n    handleChange = (ev) => {\n        if (ev.key === 'Enter') {\n            ev.preventDefault();\n            this.onSaveTitle()\n        }\n        else {\n            const { currListIdx, currCardIdx } = this.state\n            const boardToUpdate = { ...this.state.board }\n            boardToUpdate.lists[currListIdx].cards[currCardIdx][ev.target.name] = ev.target.value\n            this.setState({ ...this.state, board: boardToUpdate })\n        }\n    }\n\n    onSaveTitle = () => {\n        this.props.OnUpdateBoard({ ...this.state.board })\n        this.onToggleEdit()\n    }\n\n    onToggleEdit = () => {\n        this.setState({ ...this.state, isEdit: !this.state.isEdit })\n    }\n\n    render() {\n        const { board, currListIdx, currCardIdx, isEdit } = this.state\n        if (!board || currCardIdx === null || currListIdx === null) return <Loading />\n        const currCard = board.lists[currListIdx].cards[currCardIdx]\n        return (<>\n            <div className=\"card-details-title flex direction-row\">\n\n                <CreditCardOutlinedIcon className=\"card-details-icon\" />\n                <div className=\"flex direction-col\">\n                    {isEdit && <TextareaAutosize\n                        className=\"text-area-auto\"\n                        name='cardTitle'\n                        type='text'\n                        placeholder='Enter title'\n                        onChange={this.handleChange}\n                        onKeyPress={this.handleChange}\n                        value={currCard.cardTitle}\n                        onBlur={this.onSaveTitle}\n                        onFocus={(ev) => ev.target.select()}\n                        autoFocus\n                    />}\n                    {!isEdit && <h2 onClick={this.onToggleEdit}>{currCard.cardTitle}</h2>}\n                    <small>in list <span>{board.lists[currListIdx].listTitle}</span></small>\n                </div>\n            </div>\n        </>\n        )\n    }\n\n}","import React from 'react';\nimport { Loading } from './Loading';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\n\nexport class CardDescription extends React.Component {\n    state = {\n        board: null,\n        currListIdx: null,\n        currCardIdx: null,\n        isEditing: false\n    }\n\n    componentDidMount() {\n        const { board, currListIdx, currCardIdx } = this.props\n        this.setState({ board, currListIdx, currCardIdx })\n    }\n    onToggleEditing = () => {\n        this.setState({ ...this.state, isEditing: true })\n    }\n\n    handleChange = ({ target }) => {\n        const { currListIdx, currCardIdx } = this.state\n        const boardToUpdate = { ...this.state.board }\n        boardToUpdate.lists[currListIdx].cards[currCardIdx][target.name] = target.value\n        this.setState({ ...this.state, board: boardToUpdate })\n    }\n\n    onSaveDescription = (ev) => {\n        ev.preventDefault();\n        ev.stopPropagation()\n        this.props.OnUpdateBoard({ ...this.state.board })\n        this.setState({ ...this.state, isEditing: false })\n    }\n\n    render() {\n        const { board, currListIdx, currCardIdx, isEditing } = this.state\n        if (!board || currCardIdx === null || currListIdx === null) return <Loading />\n        const currCard = board.lists[currListIdx].cards[currCardIdx]\n        return (<div className=\"card-description\" >\n            <div className=\"flex direction-row align-center\">\n                <FormatAlignLeftIcon className=\"card-details-icon\" />\n                <h3 className=\"card-subtitle\">Description</h3>\n                {!isEditing && currCard.description\n                    && <button className=\"hover btn-edit\" onClick={this.onToggleEditing}>Edit</button>}\n            </div>\n            {isEditing &&\n                <div className=\"edit-container\" onClick={this.onToggleEditing}>\n                    <form onSubmit={this.onSaveDescription} >\n                        <TextareaAutosize\n                            name='description'\n                            className=\"text-area-auto desc-edit\"\n                            type='text'\n                            placeholder='Add a more detailed description...'\n                            onChange={this.handleChange}\n                            value={currCard.description}\n                            onBlur={this.onSaveDescription}\n                            onFocus={(ev) => ev.target.select()}\n                            autoFocus\n                        />\n                        <div className=\"flex direction-row align-center\" >\n                            {isEditing && <button className=\"save-desc\" onClick={this.onSaveDescription}>Save</button>}\n                            {isEditing && <button className=\"discard-desc\" onClick={this.onToggleEditing}>X</button>}\n                        </div>\n                    </form>\n                </div>\n            }\n            {!isEditing && currCard.description && <div className=\"desc-txt pointer\" onClick={this.onToggleEditing}>\n                <p >{currCard.description}</p>\n            </div>}\n            {!isEditing && !currCard.description\n                && <div className=\"desc-txt-placeholder hover\" onClick={this.onToggleEditing}>\n                    <p>Add a more detailed description...</p>\n                </div>}\n        </div>\n        )\n    }\n\n}","import React from 'react'\n\nexport function ProgressBar({ currChecklist }) {\n    const style = { width: getProgress() }\n    const precent = getProgress()\n    const classNameBar = (precent === '100%') ? 'progressing bar-done' : 'progressing'\n\n    function getProgress() {\n        if (!currChecklist.tasks.length) return '0%'\n        let doneCount = 0\n        currChecklist.tasks.forEach(task => {\n            if (task.isDone) doneCount++\n        })\n        return `${Math.floor(doneCount / (currChecklist.tasks.length) * 100)}%`\n    }\n\n    return (\n        <div className=\"progress-bar flex direction-row align-center\">\n            <p>{precent}</p>\n            <div className=\"progress-bar-container\">\n                <div className={classNameBar} style={style} ></div>\n            </div>\n        </div >\n    )\n}","import React from 'react';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nexport class TaskInput extends React.Component {\n    state = {\n        newTaskTxt: null,\n        isEdit: false\n    }\n    componentDidMount() {\n        const { task } = this.props\n        this.setState({ ...this.state, newTaskTxt: task.txt })\n    }\n    onToggleEdit = () => {\n        this.setState({ ...this.state, isEdit: !this.state.isEdit })\n        this.props.onEditMode()\n    }\n    onDiscardChanges = () => {\n        this.setState({ newTaskTxt: this.props.task.txt, isEdit: false })\n        this.props.onEditMode()\n    }\n    handleChange = ({ target }) => {\n        this.setState({ ...this.state, newTaskTxt: target.value })\n    }\n    onSaveTask = () => {\n        const { taskIdx, task } = this.props\n        this.props.onEditTask(taskIdx, task.isDone, this.state.newTaskTxt)\n        this.onToggleEdit()\n    }\n\n    render() {\n        const { newTaskTxt, isEdit } = this.state\n        const { task } = this.props\n        const classTask = (task.isDone) ? 'task-done' : ''\n\n        if (!newTaskTxt) return <></>\n        return (<div className=\"task-input\">\n            {!isEdit && <div className={classTask} onClick={this.onToggleEdit}>{task.txt}</div>}\n            {isEdit &&\n                <div className=\"task-update\">\n                    <TextareaAutosize\n                        className=\"text-area-auto task-edit\"\n                        type='text'\n                        value={newTaskTxt}\n                        onChange={this.handleChange}\n                        onBlur={this.onDiscardChanges}\n                    />\n                    <div className=\"flex direction-row align-center\">\n                        <button className=\"save-task\" onClick={this.onSaveTask}>Save</button>\n                        <button className=\"discard-task\" onClick={this.onDiscardChanges}>X</button>\n                    </div>\n                </div>\n            }\n        </div>)\n    }\n}","import React from 'react';\nimport Checkbox from '@mui/material/Checkbox';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport { TaskInput } from './TaskInput';\n// export function ChecklistTask({ task, taskIdx, onDeleteTask, onEditTask }) {\nexport class ChecklistTask extends React.Component {\n    state = {\n        isEdit: false\n    }\n    onEditMode = () => {\n        this.setState({ isEdit: !this.state.isEdit })\n    }\n    render() {\n        const { task, taskIdx, onDeleteTask, onEditTask } = this.props\n        const { isEdit } = this.state\n        return (\n            <div className=\"task-preview flex direction-row space-between\">\n                <div className=\"width-100 flex direction-row align-center\">\n                    <Checkbox className={`checkbox ${(isEdit) ? 'edit' : ''}`} checked={task.isDone}\n                        onChange={() => onEditTask(taskIdx, !task.isDone, task.txt)} />\n                    <TaskInput onEditMode={this.onEditMode} task={task} taskIdx={taskIdx} onEditTask={onEditTask} />\n                </div>\n                {!isEdit && <DeleteOutlineIcon className=\"delete-task pointer\" onClick={() => onDeleteTask(taskIdx)} />}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nexport class AddNewTask extends React.Component {\n    state = {\n        txt: ''\n    }\n    onDiscardChanges = () => {\n        this.setState({ txt: '' })\n        this.props.onIsAddItem()\n    }\n    handleChange = (ev) => {\n        if (ev.key === 'Enter') {\n            ev.preventDefault()\n            this.onAddTask()\n        }\n        else this.setState({ txt: ev.target.value })\n    }\n    handleKeyPress = (ev) => {\n    }\n    onAddTask = () => {\n        const newTaskTxt = this.state.txt\n        if (!newTaskTxt) return\n        this.props.onAddTask(newTaskTxt)\n        this.setState({ txt: '' })\n    }\n\n    render() {\n        const { txt } = this.state\n        return (\n            <div className=\"add-new-task\">\n                <TextareaAutosize\n                    type='text'\n                    className=\"text-area-auto task-edit\"\n                    value={txt}\n                    onChange={this.handleChange}\n                    onKeyPress={this.handleChange}\n                    autoFocus\n                />\n                <div>\n                    <button className=\"save-task\" onClick={this.onAddTask}>Add</button>\n                    <button className=\"discard-task\" onClick={this.onDiscardChanges}>X</button>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport CheckBoxOutlinedIcon from '@mui/icons-material/CheckBoxOutlined';\nimport { loadBoards, removeBoard, addBoard, updateBoard } from '../store/board.actions.js';\nimport { utilService } from '../services/util.service';\nimport { ProgressBar } from './ProgressBar'\nimport { ChecklistTask } from './ChecklistTask'\nimport { AddNewTask } from './AddNewTask';\nclass _ChecklistApp extends React.Component {\n    state = {\n        isAddItem: false,\n        currChecklist: null,\n        title: null\n    }\n\n    componentDidMount() {\n        const { currCard, checklistIdx } = this.props\n        const currChecklist = currCard.checklists[checklistIdx]\n        const title = currChecklist.title\n        this.setState({ ...this.state, currChecklist, title })\n    }\n\n    onDeleteChecklist = () => {\n        const { title } = this.state\n        const { board, currCard, checklistIdx } = this.props\n        currCard.checklists.splice(checklistIdx, 1)\n        // const action = `Deleted Checklist ${title}`\n        this.props.updateBoard(board)\n    }\n\n    onDeleteTask = (taskIdx) => {\n        const { currChecklist, title } = this.state\n        const { board, currCard } = this.props\n        currChecklist.tasks.splice(taskIdx, 1)\n        // const action = `Deleted item on Checklist \"${title}\" `\n        this.props.updateBoard(board)\n    }\n\n    onEditTask = (taskIdx, updateIsDone, newTaskTxt) => {\n        const { currChecklist, title } = this.state\n        const { board, currCard } = this.props\n        currChecklist.tasks[taskIdx].isDone = updateIsDone\n        currChecklist.tasks[taskIdx].txt = newTaskTxt\n        if (currChecklist.tasks.every(task => task.isDone)) {\n            var action = `Completed checklist`\n            this.props.updateBoard(board, action, currCard)\n        } else {\n            this.props.updateBoard(board)\n        }\n    }\n\n    onAddTask = (txt) => {\n        const { currChecklist, title } = this.state\n        const { board, currCard } = this.props\n        currChecklist.tasks.push(\n            { id: utilService.makeId(), txt: txt, isDone: false }\n        )\n        // const action = `Added item \"${txt}\" on Checklist \"${title}\" `\n        this.props.updateBoard(board)\n    }\n\n    onIsAddItem = () => {\n        this.setState({ ...this.state, isAddItem: !this.state.isAddItem })\n    }\n\n    render() {\n        const { isAddItem, currChecklist } = this.state\n        const { board, checklistIdx } = this.props\n        if (!board || checklistIdx === null) return <></>\n        if (!currChecklist) return <></>\n        return (\n            <div className=\"checklist-app\">\n                <div className=\"flex direction-row space-between \">\n                    <div className=\"flex direction-row\">\n                        <CheckBoxOutlinedIcon className=\"card-details-icon\" />\n                        <h3 className=\"card-subtitle\">{currChecklist.title}</h3>\n                    </div>\n                    <button className=\"delete-checklist hover\" onClick={this.onDeleteChecklist}>Delete</button>\n                </div>\n                <ProgressBar currChecklist={currChecklist} />\n                {\n                    currChecklist.tasks.length ? currChecklist.tasks.map((task, taskIdx) =>\n                    (<ChecklistTask key={task.id} task={task} taskIdx={taskIdx}\n                        onEditTask={this.onEditTask} onDeleteTask={this.onDeleteTask} />))\n                        : <></>\n                }\n                {!isAddItem && <button className=\"add-item hover\" onClick={this.onIsAddItem}>Add an item</button>}\n                {isAddItem && <AddNewTask onIsAddItem={this.onIsAddItem} onAddTask={this.onAddTask} />}\n            </div >\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        board: state.boardReducer.board,\n        loggedInUser: state.userReducer.loggedInUser\n    }\n}\nconst mapDispatchToProps = {\n    updateBoard\n}\n\nexport const ChecklistApp = connect(mapStateToProps, mapDispatchToProps)(_ChecklistApp)","import React from 'react'\nimport { ChecklistApp } from './ChecklistApp'\nexport function ChecklistListApp({ currCard }) {\n    const checklists = currCard.checklists\n    return (\n        <>\n            {checklists.map((checklist, checklistIdx) => <ChecklistApp key={checklist.checklistId}\n                currCard={currCard}\n                checklistIdx={checklistIdx}\n            />)}\n        </>\n    )\n}","import { DynamicPopover } from './DynamicPopover';\nimport close from '../assets/imgs/close.svg';\nexport function CardDetailsHeader({ board, currListIdx, currCardIdx, handleClose }) {\n    const currCard = board.lists[currListIdx].cards[currCardIdx]\n    const coverMode = currCard.cardStyle.id ? 'cover-mode ' + currCard.cardStyle.color : '';\n    const coverStyle = currCard.cardStyle.img ? 'img-cover ' + 'cover-mode' : coverMode;\nconsole.log('cover img', currCard.cardStyle);\n    return (\n        <div className={coverStyle} style={{backgroundImage: `url(${currCard.cardStyle.img})`}}>\n            <div className=\"close-window-btn pointer flex align-center justify-center\" onClick={handleClose}><img src={close} alt=\"close\" /></div>\n        {coverMode && <div className={`cover-menu pointer`} >\n                <DynamicPopover type={'cover'} title={'Cover'} titleModal={'Cover'}\n                    board={board}\n                    currListIdx={currListIdx}\n                    currCardIdx={currCardIdx}\n                />\n            </div>}\n        </div>\n    )\n}","import React from 'react';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nexport class AttachmentPreview extends React.Component {\n    render() {\n        const { cardAttachment } = this.props\n        return (\n            <a href={cardAttachment.url} target=\"_blank\" className=\"card-attachment-preview flex direction-row\">\n                <img src={cardAttachment.url} />\n                <div>\n                    <div className=\"flex direction-row\">\n                        <h4 >{cardAttachment.fileName} </h4><OpenInNewIcon className=\"icon\" />\n                    </div>\n                    <div>\n                        <small>Added on {new Date(cardAttachment.createdAt).toString().substring(0, 16)} - </small>\n                        <small className=\"delete\" onClick={this.props.onDeleteAttach(cardAttachment.id)}> Delete </small>\n                    </div>\n                </div>\n            </a>\n        )\n    }\n}\n","import React from 'react'\nimport AttachFileOutlinedIcon from '@mui/icons-material/AttachFileOutlined';\nimport { AttachmentPreview } from './AttachmentPreview'\nimport { DynamicPopover } from '../DynamicPopover';\nexport function CardAttachmentsList({ board, currListIdx, currCardIdx, OnUpdateBoard }) {\n    const cardAttachments = board.lists[currListIdx].cards[currCardIdx].attachments\n\n    const onDeleteAttach = (attachmentId) => (event) => {\n        event.stopPropagation();\n        event.preventDefault();\n        const attachIdx = cardAttachments.findIndex(attachment => attachment.id === attachmentId)\n        cardAttachments.splice(attachIdx, 1)\n        const currCard = board.lists[currListIdx].cards[currCardIdx]\n        OnUpdateBoard(board, 'Removed attachment', currCard)\n    }\n\n    if (!cardAttachments.length) return <></>\n    return (\n        <div className=\"card-attachments\">\n            <div className=\"title flex direction-row align-center\">\n                <AttachFileOutlinedIcon className=\"card-details-icon\" />\n                <h3 className=\"card-subtitle\">Attachments</h3>\n            </div>\n            <div>\n                {cardAttachments.map(cardAttachment => <AttachmentPreview key={cardAttachment.id}\n                    cardAttachment={cardAttachment} onDeleteAttach={onDeleteAttach} />)}\n            </div>\n\n            <DynamicPopover type={'add-attachments'} title={'attachments'} titleModal={'Attachments'}\n                board={board}\n                currListIdx={currListIdx}\n                currCardIdx={currCardIdx}\n            />\n\n        </div>\n    )\n}","import React from 'react';\nimport { connect } from 'react-redux';\n// import { boardService } from '../services/board.service.js';\nimport { loadBoards, removeBoard, addBoard, updateBoard, loadListAndCard } from '../store/board.actions.js';\nimport { Loading } from '../cmp/Loading';\nimport { CardSideBar } from '../cmp/CardSideBar';\nimport { MembersList } from '../cmp/MembersList'\nimport { CardLabelsList } from '../cmp/CardLabelsList';\nimport { CardActivities } from '../cmp/CardDetails/CardActivities'\nimport { DueDatePreview } from '../cmp/DueDatePreview';\nimport { CardTitle } from '../cmp/CardTitle';\nimport { CardDescription } from '../cmp/CardDescription.jsx';\nimport { ChecklistListApp } from '../cmp/ChecklistListApp';\n// import Box from '@mui/material/Box';\n// import Button from '@mui/material/Button';\n// import Typography from '@mui/material/Typography';\n// import Modal from '@mui/material/Modal';\nimport { CardDetailsHeader } from '../cmp/CardDetailsHeader.jsx';\nimport { CardAttachmentsList } from '../cmp/CardDetails/CardAttachmentsList';\nimport { DynamicPopover } from '../cmp/DynamicPopover'\nclass _CardDetails extends React.Component {\n    state = {\n        // board: null,\n        currListIdx: null,\n        currCardIdx: null,\n    }\n\n    componentDidMount() {\n        const { board } = this.props;\n        // console.log('board', board)\n        // this.setState({ board })\n        this.getCurrCard(board)\n    }\n\n    getCurrCard = (board) => {\n        const listId = this.props.match.params.listId; // IN THE FUTURE FROM PARAMS\n        const cardId = this.props.match.params.cardId\n        const currListIdx = board.lists.findIndex(list => list.listId === listId)\n        const currCardIdx = board.lists[currListIdx].cards.findIndex(card => card.cardId === cardId)\n        this.setState({ ...this.state, currListIdx, currCardIdx })\n    }\n\n    // handleChange = ({ target }) => {\n    //     console.log('target', target.value)\n    //     const { currListIdx, currCardIdx } = this.state\n    //     const boardToUpdate = { ...this.state.board }\n    //     boardToUpdate.lists[currListIdx].cards[currCardIdx][target.name] = target.value\n    //     // CAN BE DIFFERNET FUNCTION:\n    //     var currCard = boardToUpdate.lists[currListIdx].cards[currCardIdx];\n    //     var action = `changed ${target.name}`\n    //     var txt = target.value\n    //     this.setState({ ...this.state, board: boardToUpdate }, () => {\n    //         this.props.updateBoard({ ...this.state.board }, action, currCard, txt)\n    //     })\n    // }\n\n    onToggleDone = () => {\n        const { currListIdx, currCardIdx } = this.state\n        const board = this.props.board\n        const currCard = board.lists[currListIdx].cards[currCardIdx]\n        currCard.dueDate.isDone = !currCard.dueDate.isDone\n        // console.log('currCard.dueDate', currCard.dueDate)\n        const action = currCard.dueDate.isDone\n            ? 'Marked the due date complete'\n            : 'Marked the due date incomplete'\n        this.props.updateBoard(board, action, currCard)\n\n    }\n\n    OnUpdateBoard = (board, action, currCard, txt) => {\n        this.props.updateBoard(board, action, currCard, txt)\n    }\n\n    handleClose = () => {\n        const { board } = this.props;\n        this.props.history.push(`/boards/${board._id}`)\n    }\n\n    render() {\n        const { currListIdx, currCardIdx } = this.state\n        const { board } = this.props\n        if (!board || currCardIdx === null || currListIdx === null) return <Loading />\n        const currCard = board.lists[currListIdx].cards[currCardIdx]\n        return (\n            <div className=\"card-details-wrapper\" >\n                <div className=\"screen-card-details\" onClick={this.handleClose}></div>\n                <div className=\"card-details\" >\n                    <CardDetailsHeader board={board}\n                        currListIdx={currListIdx}\n                        currCardIdx={currCardIdx}\n                        handleClose={this.handleClose} />\n                    <div className=\"card-details-main-content\">\n\n                        <CardTitle\n                            board={board}\n                            currListIdx={currListIdx}\n                            currCardIdx={currCardIdx}\n                            OnUpdateBoard={this.OnUpdateBoard} />\n\n                        <div className=\"card-details-content\">\n                            <div className=\"card-details-main\">\n                                <div className=\"card-details-items flex direction-row items-flex-start wrap\">\n\n                                    {\n                                        currCard.cardMembers.length ? <div>\n                                            <h3>Members</h3>\n                                            <MembersList members={currCard.cardMembers} board={board}\n                                                currListIdx={currListIdx}\n                                                currCardIdx={currCardIdx} currCard={currCard} isCardOpen={true} />\n                                        </div> : ''\n                                    }\n\n                                    {\n                                        currCard.cardLabelIds.length ?\n                                            <CardLabelsList cardLabelIds={currCard.cardLabelIds} boardLabels={board.labels}\n                                                board={board}\n                                                currListIdx={currListIdx}\n                                                currCardIdx={currCardIdx} isCardOpen={true} /> : ''\n                                    }\n\n                                    {\n                                        currCard.dueDate.date &&\n                                        <div id=\"due-date-preview-card\">\n                                            <DynamicPopover type={'dates-edit'} title={'Dates'} titleModal={'Dates'}\n                                                board={board}\n                                                currListIdx={currListIdx}\n                                                currCardIdx={currCardIdx}\n                                                dueDate={currCard.dueDate}\n                                                onToggleDone={this.onToggleDone}\n                                            />\n                                        </div>\n\n\n\n\n                                        // <DueDatePreview dueDate={currCard.dueDate} onToggleDone={this.onToggleDone}\n                                        //     board={board}\n                                        //     currListIdx={currListIdx}\n                                        //     currCardIdx={currCardIdx} />\n                                    }\n                                </div>\n\n\n                                <CardDescription board={board}\n                                    currListIdx={currListIdx}\n                                    currCardIdx={currCardIdx}\n                                    OnUpdateBoard={this.OnUpdateBoard} />\n\n                                <CardAttachmentsList board={board}\n                                    currListIdx={currListIdx}\n                                    currCardIdx={currCardIdx}\n                                    OnUpdateBoard={this.OnUpdateBoard} />\n\n                                <ChecklistListApp currCard={currCard} />\n\n                                <CardActivities board={board}\n                                    currListIdx={currListIdx}\n                                    currCardIdx={currCardIdx}\n                                    OnUpdateBoard={this.OnUpdateBoard} />\n                            </div>\n                            <div className=\"card-details-sidebar\">\n                                <CardSideBar board={board}\n                                    currListIdx={currListIdx}\n                                    currCardIdx={currCardIdx}\n                                    handleClose={this.handleClose} />\n                            </div>\n                        </div>\n                    </div >\n                </div>\n            </div>)\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        board: state.boardReducer.board,\n        currCard: state.boardReducer.currCard\n    }\n}\n\nconst mapDispatchToProps = {\n    loadBoards,\n    removeBoard,\n    addBoard,\n    updateBoard,\n    loadListAndCard\n}\n\nexport const CardDetails = connect(mapStateToProps, mapDispatchToProps)(_CardDetails)","import React from 'react';\nimport { Pie } from 'react-chartjs-2';\n\nexport class PieDoneOverdue extends React.Component {\n\n    get getValuesDoneOverdue() {\n        const { board } = this.props\n        const data = [0, 0]\n        board.lists.forEach(list => {\n            list.cards.forEach(card => {\n                if (card.dueDate && !card.dueDate.isDone && (card.dueDate.date < Date.now())) {\n                    data[1]++\n                } else if (card.dueDate && card.dueDate.isDone) data[0]++\n            })\n        })\n        return data\n    }\n\n    get getPieData() {\n        return {\n            labels: ['Done', 'Overdue'],\n            datasets: [\n                {\n                    // label: '# of Votes', // WHAT IS IT?\n                    data: this.getValuesDoneOverdue,\n                    backgroundColor: [\n                        '#45cbb2',\n                        '#0079bf'\n                    ],\n                    borderColor: [\n                        'black',\n                    ],\n                    borderWidth: .5,\n                },\n            ],\n        }\n    }\n\n    render() {\n        const data = this.getPieData\n        return (\n            <div className=\"pie-done-overdue\">\n                <h1>Done Vs. Overdue</h1>\n                <Pie data={data} />\n            </div>\n        )\n    }\n};\n","import React from 'react';\nimport { Pie } from 'react-chartjs-2';\n\nexport class PieTasksPerLabel extends React.Component {\n\n    get mapTasksPerLabel() {\n        const { board } = this.props\n        let mapTasksPerLabel = board.labels.map((label, idx) => (\n            {\n                label: label.title ? label.title : `label${idx + 1} (no title)`,\n                id: label.id,\n                tasks: 0\n            }\n        ))\n\n        board.lists.forEach(list => {\n            mapTasksPerLabel.forEach(taskPerLabel => {\n                list.cards.forEach(card => {\n                    if (card.cardLabelIds.some(labelId => labelId === taskPerLabel.id))\n                        taskPerLabel.tasks++\n                })\n\n            })\n        })\n        mapTasksPerLabel = mapTasksPerLabel.filter(taskPerLabel => taskPerLabel.tasks !== 0)\n        // console.log('mapTasksPerLabel', mapTasksPerLabel)\n        return mapTasksPerLabel\n    }\n\n    get getPieData() {\n        const mapTasksPerLabel = this.mapTasksPerLabel\n        // console.log('tasksPerLabels', mapTasksPerLabel)\n        return {\n            labels: mapTasksPerLabel.map(taskPerLabel => taskPerLabel.label),\n            // labels: board.labels.map((label, idx) => label.title ? label.title : `label${idx + 1} (no title)`),\n            datasets: [\n                {\n                    label: '# of Votes', // WHAT IS IT?\n                    data: mapTasksPerLabel.map(taskPerLabel => taskPerLabel.tasks),\n                    backgroundColor: [\n                        '#61bd4f',\n                        '#f2d600',\n                        '#ff9f1a',\n                        '#eb5a46',\n                        '#c377e0',\n                        '#5ba4cf',\n                        '#51e898',\n                        '#2acce5',\n                        '#ff8ed4'\n                    ],\n                    borderColor: [\n                        'black'\n                    ],\n                    borderWidth: .5,\n                },\n            ],\n        }\n    }\n\n    render() {\n        const data = this.getPieData\n        // console.log('data', data)\n        if (!data.datasets[0].data.length) return <div>there is no tasks tagged to any labels</div>\n        return (\n            <div className=\"pie-task-per-label\">\n                <h1>Tasks per label</h1>\n                <Pie data={data} />\n            </div>\n        )\n    }\n};\n","import React from 'react';\nimport { Bar, defaults } from 'react-chartjs-2';\n\nexport class BarTaskPerMember extends React.Component {\n    componentDidMount() {\n        defaults.font.size = 16\n        defaults.color = '#fff'\n        defaults.plugins.legend.display = false\n    }\n\n    get mapTasksPerMember() {\n        const { board } = this.props\n        let tasksPerMembers = board.boardMembers.map(member => ({ fullname: member.fullname, tasks: 0 }))\n\n        board.lists.forEach(list => {\n            tasksPerMembers.forEach(member => {\n                list.cards.forEach(card => {\n                    if (card.cardMembers.some(cardMember => cardMember.fullname === member.fullname))\n                        member.tasks++\n                })\n            })\n        })\n        // console.log('tasksPerMembers', tasksPerMembers)\n        return tasksPerMembers\n    }\n\n    get getPieData() {\n        const mapTasksPerMember = this.mapTasksPerMember\n        // console.log('mapTasksPerMember', mapTasksPerMember)\n        return {\n            labels: mapTasksPerMember.map(taskPerMember => taskPerMember.fullname),\n            datasets: [\n                {\n                    label: 'Tasks',\n                    data: mapTasksPerMember.map(taskPerMember => taskPerMember.tasks),\n                    backgroundColor: [\n                        '#45cbb2',\n                        '#0079bf'\n                    ],\n                    borderColor: [\n                        '#45cbb2',\n                        '#0079bf'\n                    ],\n                    borderWidth: 1,\n                },\n            ],\n        }\n    }\n\n    render() {\n\n        const options = {\n            indexAxis: 'y',\n            responsive: true,\n            scales: {\n                x: {\n                    ticks: {\n                        stepSize: 1\n                    }\n                }\n            },\n            tooltips: {\n                //     bodyFontColor: \"#61bd4f\",\n                //     backgroundColor: \"#61bd4f\"\n                // fontColor: '#fff'\n            },\n            plugins: {\n                legend: {\n                    display: false,\n                    // position: 'right',\n                },\n            },\n        };\n        const data = this.getPieData\n        // console.log('data', data)\n        return (\n            <div className=\"bar-task-per-member\">\n                <h1>Tasks per member</h1>\n                <Bar data={data} options={options} />\n            </div>\n        )\n    }\n};\n","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nexport class BarTaskPerList extends React.Component {\n\n    get getMapTasksPerList() {\n        const { board } = this.props\n        const tasksPerList = []\n        board.lists.forEach(list => {\n            tasksPerList.push({ list: list.listTitle, tasks: list.cards.length })\n        })\n        // console.log('tasksPerList', tasksPerList)\n        return tasksPerList\n    }\n\n    get getBarData() {\n        const mapTasksPerList = this.getMapTasksPerList\n        // console.log('mapTasksPerList', mapTasksPerList)\n        return {\n            labels: mapTasksPerList.map(taskPerList => taskPerList.list),\n            datasets: [\n                {\n                    label: 'Tasks',\n                    data: mapTasksPerList.map(taskPerList => taskPerList.tasks),\n                    backgroundColor: [\n                        '#45cbb2',\n                        '#0079bf'\n                    ],\n                    borderColor: [\n                        '#45cbb2',\n                        '#0079bf'\n                    ],\n                    borderWidth: 1,\n                },\n            ],\n        }\n    }\n\n    render() {\n        const data = this.getBarData\n        // console.log('data', data)\n        return (\n            <div className=\"bar-task-per-list\">\n                <h1>Tasks per list</h1>\n                <Bar data={data} options={{\n                    scales: {\n                        y: {\n                            ticks: {\n                                stepSize: 1\n                            }\n                        }\n                    },\n                    // indexAxis: 'y',\n                    // responsive: true,\n                    // maintainAspectRatio: false,\n                    legend: {\n                        display: false,\n                    },\n                    plugins: {\n                        legend: {\n                            display: false,\n                        },\n                    },\n                }} />\n            </div>\n        )\n    }\n};\n","import React from 'react';\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined';\nimport FormatListBulletedIcon from '@mui/icons-material/FormatListBulleted';\nimport FolderOpenOutlinedIcon from '@mui/icons-material/FolderOpenOutlined';\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nexport class DashboardTitle extends React.Component {\n\n    get getTasksCount() {\n        const { board } = this.props\n        let tasksCount = 0\n        board.lists.forEach(list => {\n            tasksCount += list.cards.length\n        })\n        return tasksCount\n    }\n\n    get getOverdueCount() {\n        const { board } = this.props\n        const overdueCount = 0\n        board.lists.forEach(list => {\n            list.cards.forEach(card => {\n                if (card.dueDate && !card.dueDate.isDone && (card.dueDate.date < Date.now()))\n                    overdueCount++\n            })\n        })\n        return overdueCount\n    }\n\n    // get presen\n\n\n    render() {\n        const { board } = this.props\n        const percentage = 50\n        return (<div>\n            <h1><FolderOpenOutlinedIcon />{board.boardTitle}</h1>\n            <ul className=\"dashboard-title clean-list\">\n                <li><h1><FormatListBulletedIcon />{this.getTasksCount} Tasks</h1></li>\n                <li><h1></h1>{this.getVerdueCount} Overdue</li>\n                <li><h1><PersonOutlineOutlinedIcon />{board.boardMembers.length} Members</h1></li>\n            </ul>\n            <div>\n                <h1>Overdue</h1>\n                <CircularProgressbar\n                    value={percentage}\n                    text={`${percentage}%`}\n                    styles={buildStyles({\n                        textColor: \"white\",\n                        pathColor: '#0079bf',\n                        trailColor: \"white\",\n                        textSize: \"18px\",\n                        // text: {\n                        //     fill: '#ffffff',\n                        //     fontSize: '25px',\n                        // },\n                    })}\n                />\n            </div>\n        </div >\n        )\n    }\n}\n","import React from 'react';\nimport { Line, Scatter } from 'react-chartjs-2';\n\nexport class LineTasksOverTime extends React.Component {\n\n    get getMapTasksOverTime() {\n        const { board } = this.props\n        const mainColor = '#45cbb2'\n        const doneColor = '#61bd4f';\n        const overdueColor = '#eb5a46';\n        const backgroundColor = []\n        let mapTasksOverTime = {}\n        // const data = []\n\n        board.lists.forEach(list => {\n            list.cards.forEach(card => {\n                if (mapTasksOverTime[card.dueDate.date]) {\n                    mapTasksOverTime[card.dueDate.date]++\n                }\n                else {\n                    mapTasksOverTime[card.dueDate.date] = 1\n                    if (card.dueDate && !card.dueDate.isDone && (card.dueDate.date < Date.now())) {\n                        backgroundColor.push(overdueColor)\n                    } else if (card.dueDate && card.dueDate.isDone) {\n                        backgroundColor.push(doneColor)\n                    } else {\n                        backgroundColor.push(mainColor)\n                    }\n                }\n            })\n        })\n        mapTasksOverTime = Object.entries(mapTasksOverTime).sort((a, b) => a[0].localeCompare(b[0]));\n        console.log(' mapTasksOverTime', mapTasksOverTime)\n        const data = mapTasksOverTime.map(task => ({ x: task[0], y: task[1] }))\n\n\n        // for (const key in mapTasksOverTime) {\n        //     data.push({ x: key, y: mapTasksOverTime[key] })\n        // }\n\n        // board.lists.forEach(list => {\n        //     list.cards.forEach(card => {\n        //         if (card.dueDate && !card.dueDate.isDone && (card.dueDate.date < Date.now())) {\n        //             mapTasksOverTime.data.push({ x: card.dueDate.date, y: 1 })\n        //             mapTasksOverTime.backgroundColor.push(overdueColor)\n        //         } else if (card.dueDate && card.dueDate.isDone) {\n        //             mapTasksOverTime.data.push({ x: card.dueDate.date, y: 1 })\n        //             mapTasksOverTime.backgroundColor.push(doneColor)\n        //         } else {\n        //             mapTasksOverTime.data.push({ x: card.dueDate.date, y: 1 })\n        //             mapTasksOverTime.backgroundColor.push(mainColor)\n        //         }\n        //     })\n        // })\n        console.log('data', data)\n        return { data, backgroundColor }\n    }\n\n    get getPieData() {\n        const mapTasksPerLabel = this.mapTasksPerLabel\n        // console.log('tasksPerLabels', mapTasksPerLabel)\n        return {\n            labels: mapTasksPerLabel.map(taskPerLabel => taskPerLabel.label),\n            // labels: board.labels.map((label, idx) => label.title ? label.title : `label${idx + 1} (no title)`),\n            datasets: [\n                {\n                    label: '# of Votes', // WHAT IS IT?\n                    data: mapTasksPerLabel.map(taskPerLabel => taskPerLabel.tasks),\n                    backgroundColor: [\n                        '#61bd4f',\n                        '#f2d600',\n                        '#ff9f1a',\n                        '#eb5a46',\n                        '#c377e0',\n                        '#5ba4cf',\n                        '#51e898',\n                        '#2acce5',\n                        '#ff8ed4'\n                    ],\n                    borderColor: [\n                        'black'\n                    ],\n                    borderWidth: .5,\n                },\n            ],\n        }\n    }\n\n    render() {\n        const mapTasksOverTime = this.getMapTasksOverTime\n        console.log('mapTasksOverTime', mapTasksOverTime)\n        const test = 'is it working?'\n        const data = {\n            // labels: ['one', 'two', 'three', 'four', 'five', 'six', 'seven'],\n            // datasets: [{\n            //     label: 'Tasks',\n            //     data: [65, 59, 80, 81, 56, 55, 40],\n            //     fill: false,\n            //     borderColor: 'rgb(75, 192, 192)',\n            //     backgroundColor: ['rgb(75, 192, 192)', '#f2d600',\n            //         '#ff9f1a',\n            //         '#eb5a46',\n            //         '#c377e0',\n            //         '#5ba4cf',\n            //         '#51e898'],\n            //     tension: 0.5,\n            //     borderWidth: .8,\n            // }]\n        };\n        // console.log('data', data)\n        // if (!data.datasets[0].data.length) return <div>there is no tasks tagged to any labels</div>\n        const options = {\n            scales: {\n                x: {\n                    ticks: {\n                        // Include a dollar sign in the ticks\n                        callback: function (value, index, values) {\n                            return new Date(value).toString().substring(0, 11);\n                        }\n                    }\n                },\n                y: {\n                    beginAtZero: true\n                }\n            },\n            plugins: {\n                tooltip: {\n                    callbacks: {\n                        label: function (context) {\n                            // var label = +context.dataset.label || '';\n                            return 'Task'\n                        }\n                    }\n                }\n            }\n        }\n        return (\n            <div className=\"pie-task-per-label\">\n                <h1>Tasks over time</h1>\n                {/* <Line data={data} /> */}\n                <Scatter data={{\n                    datasets: [{\n                        label: 'Scatter Dataset',\n                        data: mapTasksOverTime.data,\n                        backgroundColor: mapTasksOverTime.backgroundColor,\n                        borderColor: 'rgb(75, 192, 192)',\n                        tension: 0.5,\n                        borderWidth: 1.5,\n                        showLine: true,\n                        pointRadius: 6,\n                    }],\n                }} options={options} />\n            </div>\n        )\n    }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { loadBoard } from '../store/board.actions.js';\nimport { PieDoneOverdue } from '../cmp/DashBoard/PieDoneOverdue';\nimport { PieTasksPerLabel } from '../cmp/DashBoard/PieTasksPerLabel';\nimport { BarTaskPerMember } from '../cmp/DashBoard/BarTaskPerMember.jsx';\nimport { BarTaskPerList } from '../cmp/DashBoard/BarTaskPerList.jsx';\nimport { DashboardTitle } from '../cmp/DashBoard/DashboardTitle';\nimport { LineTasksOverTime } from '../cmp/DashBoard/LineTasksOverTime.jsx';\nimport close from '../assets/imgs/close.svg';\nclass _Dashboard extends React.Component {\n\n    goBack = () => {\n        const { board } = this.props\n        this.props.history.push(`/boards/${board._id}`);\n    }\n    render() {\n        const { board } = this.props\n        const allCards = board.lists.filter(list => list.cards.length !== 0)\n        if (!board.lists.length || !allCards.length) return (\n            <section className=\"dashboard\">\n                No data to show... <br />Try adding tasks to your board\n            </section>\n        )\n        return (\n            <div className=\"dashboard-wrapper\" >\n                <div className=\"screen-dashboard\"></div>\n                <section className=\"dashboard\">\n                    <div className=\"close-window-btn pointer flex align-center justify-center\" onClick={this.goBack}><img src={close} alt=\"close\" /></div>\n                    <DashboardTitle board={board} />\n                    <div className=\"charts-container\">\n                        <PieDoneOverdue board={board} />\n                        <PieTasksPerLabel board={board} />\n                        <BarTaskPerMember board={board} />\n                        <BarTaskPerList board={board} />\n                        <LineTasksOverTime board={board} />\n                    </div>\n                </section>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        board: state.boardReducer.board,\n    }\n}\nconst mapDispatchToProps = {\n    loadBoard,\n}\n\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { loadBoards, loadBoard, removeBoard, updateBoard, toggleLabels, setNotif } from '../store/board.actions.js';\nimport { loginAsGuest } from '../store/user.actions.js';\n// import { boardService } from '../services/board.service.js';\nimport { BoardList } from '../cmp/BoardList.jsx';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { BoardHeader } from '../cmp/BoardHeader.jsx';\nimport { AddList } from '../cmp/AddList.jsx';\nimport { Route, Link } from 'react-router-dom';\nimport { CardDetails } from '../pages/CardDetails.jsx';\nimport { Dashboard } from './Dashboard'\nimport { Loading } from '../cmp/Loading.jsx';\nimport { socketService } from '../services/socket.service';\nimport {utilService} from '../services/util.service';\n\nclass _BoardApp extends React.Component {\n    state = {\n        isMenuOpen: false\n    }\n\n    async componentDidMount() {\n        if (!this.props.loggedInUser) {\n            const user = await this.props.loginAsGuest()\n            await this.props.loadBoards(user._id)\n        }\n        const { boardId } = this.props.match.params\n        this.props.loadBoard(boardId);\n        // socketService.setup();\n        socketService.emit('boardId', boardId);\n        socketService.on('board updated', board => {\n            this.props.loadBoard(board._id)\n        })\n        socketService.on('sending notification', (isNotif) => {\n            this.props.setNotif(isNotif)\n          })\n        // console.log('board component did mount');\n    }\n\n    componentWillUnmount() {\n        socketService.off('board updated', this.updateSocket);\n        socketService.off('boardId');\n        // socketService.off('sending notification', this.resiveNotifi)\n        // socketService.terminate()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { boardId } = this.props.match.params\n        // console.log('prevprops', prevProps);\n        if (prevProps.board && boardId !== this.props.board._id) {\n            this.props.loadBoard(boardId)\n        }\n        // socketService.on('board updated', board => {\n        //     this.props.loadBoard(board._id)\n        // })\n    }\n\n    onUpdateBoard = (board, action, card = '', txt = '') => {\n        // const { board } = this.props\n        this.props.updateBoard(board, action, card, txt);\n    }\n\n    onDragEnd = (res) => {\n        console.log('res dnd', res);\n        const { destination, source, draggableId, type } = res;\n        const { board } = this.props\n        if (!destination) return;\n        const dndStart = source.droppableId;\n        const dndEnd = destination.droppableId;\n        const dndStartIdx = source.index;\n        const dndEndIdx = destination.index;\n        if (dndStart === dndEnd && dndEndIdx === dndStartIdx) return;\n\n        if (type === 'list') {\n            const list = board.lists.splice(dndStartIdx, 1)\n            board.lists.splice(dndEndIdx, 0, ...list)\n            this.props.updateBoard(board);\n            return\n        }\n        if (dndStart === dndEnd) {\n            const list = board.lists.find(list => list.listId === dndStart)\n            const card = list.cards.splice(dndStartIdx, 1);\n            list.cards.splice(dndEndIdx, 0, ...card);\n        }\n        if (dndStart !== dndEnd) {\n            const listStart = board.lists.find(list => list.listId === dndStart)\n            const card = listStart.cards.splice(dndStartIdx, 1);\n            const listEnd = board.lists.find(list => list.listId === dndEnd)\n            if (!listEnd.cards) {\n                listEnd.push(card);\n                return;\n            }\n\n            listEnd.cards.splice(dndEndIdx, 0, ...card);\n        }\n\n        this.props.updateBoard(board);\n    }\n\n    // onPopOver = (position, name, props) => {\n    //     <DynamicPopover type={'labels'} title={'Labels'} titleModal={'Labels'}\n    //         board={board}\n    //         currListIdx={currListIdx}\n    //         currCardIdx={currCardIdx}\n    //     />\n    // }\n\n    onToggleLabels = () => {\n        this.props.toggleLabels()\n    }\n\n    onOpenDashboard = () => {\n        const { board } = this.props\n        this.props.history.push(`/boards/${board._id}/dashboard`);\n    }\n\n    render() {\n        const { board } = this.props;\n        if (!board || !Object.keys(board).length) return <Loading />\n        const bgStyle = utilService.getFormattedBgStyle(board.boardStyle, 'full')\n        return (\n            <section className=\"board-app flex direction-col\">\n                <Route exact component={CardDetails} path=\"/boards/:boardId/:listId/:cardId\" />\n                <Route exact component={Dashboard} path=\"/boards/:boardId/dashboard\" />\n                <BoardHeader board={board} onUpdateBoard={this.onUpdateBoard} onOpenDashboard={this.onOpenDashboard} />\n                <div className=\"board-background\" style={bgStyle}></div>\n               \n                <div className=\"board-canvas flex\">\n                    <DragDropContext onDragEnd={this.onDragEnd}>\n                        <BoardList board={board} lists={board.lists} onUpdateBoard={this.onUpdateBoard} className=\"board\" />\n                    </DragDropContext >\n                    <AddList board={board} onUpdateBoard={this.onUpdateBoard} />\n                </div>\n            </section >\n        )\n\n    }\n\n}\n\nfunction mapStateToProps(state) {\n    return {\n        boards: state.boardReducer.boards,\n        board: state.boardReducer.board,\n        isLabelOpen: state.boardReducer.isLabelOpen,\n        loggedInUser: state.userReducer.loggedInUser\n    }\n}\nconst mapDispatchToProps = {\n    removeBoard,\n    loadBoards,\n    loadBoard,\n    updateBoard,\n    toggleLabels,\n    setNotif,\n    loginAsGuest\n}\n\nexport const BoardApp = connect(mapStateToProps, mapDispatchToProps)(_BoardApp)","export default __webpack_public_path__ + \"static/media/trackit-logo.4b8772cc.svg\";","export default __webpack_public_path__ + \"static/media/trackit-logo-white.9c62af35.svg\";","import { NavLink } from 'react-router-dom'\nimport ColorLogo from '../../assets/imgs/trackit-logo.svg'\nimport WhiteLogo from '../../assets/imgs/trackit-logo-white.svg'\n\nexport function LogoName({ isLoggedIn }) {\n    const linkUrl = isLoggedIn ? \"/boards\" : \"/\"\n    const logoUrl = isLoggedIn ? WhiteLogo : ColorLogo\n    return (\n        <NavLink to={linkUrl} >\n            <div className=\"logo-container flex align-center\">\n                <span className=\"icon-span flex align-center justify-center\"><img className=\"icon\" src={logoUrl} alt=\"\" /></span>\n                <h1 className=\"logo-name\">TrackIt</h1>\n            </div>\n        </NavLink>\n    )\n}","import { NavLink } from 'react-router-dom'\nimport { LogoName } from './LogoName'\n\nexport function HomeHeader() {\n    return (\n        <header className=\"home-header flex\">\n            <nav className=\"nav-bar flex space-between align-center\">\n               <LogoName isLoggedIn={false} />\n                <div className=\"login-signup flex align-center\">\n                    <NavLink className=\"login\" to=\"/login\">Log in</NavLink>\n                    <NavLink className=\"signup home-btn\" to=\"/signup\">Sign up</NavLink>\n                </div>\n            </nav>\n        </header>\n    )\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { loginAsGuest } from '../store/user.actions'\nimport { HomeHeader } from '../cmp/Header/HomeHeader'\n\nclass _HomePage extends React.Component {\n\n    onStartAsGuest = async () => {\n        await this.props.loginAsGuest()\n        this.props.history.push('/boards')\n    }\n\n    render() {\n        return (\n            <>\n                <section className=\"home-page main-container\">\n                    <HomeHeader />\n                    <div className=\"hero flex align-center\">\n                        <div className=\"info flex direction-col justify-center align-center\">\n                            <h1>TrackIt helps teams to stay on track.</h1>\n                            <p>Collaborate, manage projects, and reach new productivity peaks. From high rises to the home office, the way your team works is unique—accomplish it all with TrackIt.</p>\n                            <button onClick={this.onStartAsGuest} className=\"start home-btn\">Get Started!</button>\n                        </div>\n                        <img src=\"https://d2k1ftgv7pobq7.cloudfront.net/meta/p/res/images/spirit/hero/6a3ccd8e5c9a0e8ebea4235d12da6b24/hero.png\" alt=\"\" />\n                    </div>\n                </section >\n            </>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        loggedInUser: state.userReducer.loggedInUser\n    }\n}\n\nconst mapDispatchToProps = {\n    loginAsGuest\n}\n\nexport const HomePage = connect(mapStateToProps, mapDispatchToProps)(_HomePage)","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { onLogin } from '../store/user.actions'\nimport { loadBoards } from '../store/board.actions'\nimport { Loading } from '../cmp/Loading.jsx'\nimport { LogoName } from '../cmp/Header/LogoName'\n\nclass _Login extends React.Component {\n    state = {\n        credentials: {\n            username: '',\n            password: '',\n        },\n        isLoginFailed: false,\n        isLoading: false\n    }\n    componentDidMount() {\n    }\n\n    clearForm = () => {\n        const emptyCredentials = {\n            username: '',\n            password: '',\n        }\n        this.setState(prevState => ({ ...prevState, credentials: emptyCredentials }))\n    }\n\n    handleChange = (ev) => {\n        const field = ev.target.name;\n        const value = ev.target.value;\n        this.setState({ credentials: { ...this.state.credentials, [field]: value } });\n    }\n\n    onLogin = async (ev = null) => {\n        if (ev) ev.preventDefault();\n        try {\n            this.setState({ isLoading: true })\n            await this.props.onLogin(this.state.credentials);\n            // await this.props.loadBoards(this.props.loggedInUser._id)\n            this.props.history.push('/boards')\n        } catch (err) {\n            this.setState(prevState => ({ ...prevState, isLoading: false, isLoginFailed: true }))\n            this.clearForm()\n            setTimeout(this.clearErrMsg, 5000)\n        }\n    }\n\n    clearErrMsg = () => {\n        this.setState({ isLoginFailed: false })\n    }\n\n    render() {\n        const { username, password } = this.state.credentials;\n        const { isLoginFailed, isLoading } = this.state\n        return (\n            <div className=\"login-signup-page\">\n                <LogoName isLoggedIn={false} />\n                <div className=\"form-container\">\n                    {isLoading && <Loading />}\n                    {isLoginFailed && <p className=\"login-signup-error\">Login failed, please check your username and password</p>}\n                    <h3>Log in to TrackIt</h3>\n                    <form className=\"login-signup-form flex direction-col align-center justify-center\" onSubmit={this.onLogin}>\n                        <input\n                            type=\"text\"\n                            name=\"username\"\n                            value={username}\n                            placeholder=\"Username\"\n                            onChange={this.handleChange}\n                            required\n                            autoFocus\n                        />\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            value={password}\n                            placeholder=\"Password\"\n                            onChange={this.handleChange}\n                            required\n                        />\n                        <button>Log in</button>\n                    </form>\n                    <Link className=\"to-login-signup\" to=\"/signup\">Sign up for an account</Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        loggedInUser: state.userReducer.loggedInUser\n    }\n}\nconst mapDispatchToProps = {\n    onLogin,\n    loadBoards\n}\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { onSignup } from '../store/user.actions'\nimport { Loading } from '../cmp/Loading.jsx'\nimport { LogoName } from '../cmp/Header/LogoName'\nimport GoogleLogin from 'react-google-login';\n\nclass _Signup extends React.Component {\n    state = {\n        credentials: {\n            username: '',\n            password: '',\n            fullname: ''\n        },\n        isSignupFailed: false,\n        isLoading: false\n    }\n    componentDidMount() {\n    }\n\n    clearForm = () => {\n        const emptyCredentials = {\n            username: '',\n            password: '',\n            fullname: ''\n        }\n        this.setState(prevState => ({ ...prevState, credentials: emptyCredentials }))\n    }\n\n    handleChange = (ev) => {\n        const field = ev.target.name;\n        const value = ev.target.value;\n        this.setState({ credentials: { ...this.state.credentials, [field]: value } });\n    }\n\n    onSignup = async (ev = null) => {\n        if (ev) ev.preventDefault();\n        try {\n            this.setState({ isLoading: true })\n            await this.props.onSignup(this.state.credentials);\n            // await this.props.loadBoards(this.props.loggedInUser._id)\n            this.props.history.push('/templates')\n        } catch (err) {\n            this.setState(prevState => ({ ...prevState, isLoading: false, isSignupFailed: true }))\n            this.clearForm()\n            setTimeout(this.clearErrMsg, 5000)\n        }\n    }\n\n    clearErrMsg = () => {\n        this.setState({ isSignupFailed: false })\n    }\n\n    render() {\n        const { username, password, fullname } = this.state.credentials;\n        const { isSignupFailed, isLoading } = this.state\n        return (\n            <div className=\"login-signup-page\">\n                <LogoName isLoggedIn={false} />\n                <div className=\"form-container\">\n                    {isLoading && <Loading />}\n                    {isSignupFailed && <p className=\"login-signup-error\">Username is already in use</p>}\n                    <h3>Sign up for your account</h3>\n                    <form className=\"login-signup-form flex direction-col align-center justify-center\" onSubmit={this.onSignup}>\n                        <input\n                            type=\"text\"\n                            name=\"fullname\"\n                            value={fullname}\n                            placeholder=\"Full Name\"\n                            onChange={this.handleChange}\n                            required\n                            autoFocus\n                        />\n                        <input\n                            type=\"text\"\n                            name=\"username\"\n                            value={username}\n                            placeholder=\"Username\"\n                            onChange={this.handleChange}\n                            required\n                        />\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            value={password}\n                            placeholder=\"Password\"\n                            onChange={this.handleChange}\n                            required\n                        />\n\n                        <GoogleLogin\n                            // clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\"\n                            buttonText=\"Login\"\n                            // onSuccess={responseGoogle}\n                            // onFailure={responseGoogle}\n                            cookiePolicy={'single_host_origin'}\n                        />\n                        <button>Sign up</button>\n                    </form>\n                    <Link className=\"to-login-signup\" to=\"/login\">Already have an account? Log In</Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        loggedInUser: state.userReducer.loggedInUser\n    }\n}\nconst mapDispatchToProps = {\n    onSignup\n}\n\n\nexport const Signup = connect(mapStateToProps, mapDispatchToProps)(_Signup)","// import { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { IconContext } from \"react-icons\";\nimport { FiStar } from 'react-icons/fi';\nimport { utilService} from '../../services/util.service'\n\nexport function BoardPreview({ board, loggedInUser, toggleStarBoard, isYellow, isLarge }) {\n    const bgStyle = utilService.getFormattedBgStyle(board.boardStyle)\n    return (\n        <Link to={`/boards/${board._id}`}>\n            <div className=\"board-preview\" style={bgStyle}>\n                {(typeof (board.boardStyle) === 'object') ? <div className=\"darken-image\"></div> : <></>}\n                <div className=\"preview-details flex direction-col space-between\">\n                    <h3 className=\"board-title\">{board.boardTitle}</h3>\n                    <div className=\"board-preview-bottom\">\n                        {(board.createdBy) ?\n                            <>\n                                {(board.createdBy._id !== loggedInUser._id) ?\n                                    <p className=\"board-owner\">{board.createdBy.fullname}'s board</p> : <></>}\n                                {<button className={`star-btn ${board.isStarred ? \"show\" : \"\"}`} onClick={(ev) => toggleStarBoard(ev, board)}>\n                                    <IconContext.Provider value={{ className: `star-icon ${isYellow ? \"yellow\" : \"\"} ${isLarge ? \"large\" : \"\"}` }}>\n                                        <FiStar />\n                                    </IconContext.Provider>\n                                </button>}\n                            </>\n                            :\n                            <></>}\n                    </div>\n                </div>\n            </div>\n        </Link>\n    )\n}","import { NavLink } from 'react-router-dom';\n\nimport { HiOutlineTemplate } from 'react-icons/hi';\nimport { MdDeveloperBoard } from 'react-icons/md';\nimport { AiOutlineHome } from 'react-icons/ai';\n\nexport function SideNav({ path }) {\n    return (\n        <section className=\"side-nav flex direction-col\">\n            <NavLink to=\"/boards\">\n                <div className={`nav-item flex align-center${path === \"boards\" ? \" active\" : \"\"}`}>\n                    <MdDeveloperBoard />\n                    <h3>Boards</h3>\n                </div>\n            </NavLink>\n            <NavLink to=\"/templates\">\n                <div className={`nav-item flex align-center${path === \"templates\" ? \" active\" : \"\"}`}>\n                <HiOutlineTemplate />\n                <h3>Templates</h3>\n                </div >\n            </NavLink>\n        </section>\n    )\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { NavLink } from 'react-router-dom';\nimport { loadBoards, loadBoard } from '../store/board.actions.js';\nimport { BoardPreview } from '../cmp/UserBoards/BoardPreview'\nimport { Loading } from '../cmp/Loading.jsx';\nimport { SideNav } from '../cmp/UserBoards/SideNav.jsx';\n\nclass _TemplateBoards extends React.Component {\n    state = {\n        templateBoards: []\n    }\n\n    async componentDidMount() {\n        const { boards, loggedInUser } = this.props\n        if (!loggedInUser) {\n            this.props.history.push('/')\n            return\n        }\n        if (!boards.length) await this.props.loadBoards(loggedInUser._id);\n        const templateBoards = this.getTemplateBoards()\n        this.setState({ templateBoards })\n        this.props.loadBoard(null)\n        // this.setState({ boards: this.props.boards })\n    }\n\n    getTemplateBoards = () => {\n        return this.props.boards.filter(board => !board.createdBy)\n    }\n\n    render() {\n        const path = this.props.match.path.slice(1)\n        const { templateBoards } = this.state\n        if (!this.props.loggedInUser || !templateBoards.length) return <Loading />\n        return (\n            <section className=\"main-container boards\">\n                <section className=\"boards-page flex\">\n                    <SideNav path={path} />\n                    <section className=\"boards-section\">\n                        <section className=\"template-boards\">\n                            <h3>Templates</h3>\n                            <div className=\"boards-preview\">\n                                {templateBoards.map(board => {\n                                    board.isStarred = false\n                                    return <BoardPreview key={board._id} board={board} />\n                                })}\n                            </div>\n                        </section>\n                    </section>\n                </section>\n            </section>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        boards: state.boardReducer.boards,\n        loggedInUser: state.userReducer.loggedInUser\n    }\n}\n\nconst mapDispatchToProps = {\n    loadBoards,\n    loadBoard\n}\n\nexport const TemplateBoards = connect(mapStateToProps, mapDispatchToProps)(_TemplateBoards)\n","export default __webpack_public_path__ + \"static/media/close-icon-white.c0dcb3ec.svg\";","export default __webpack_public_path__ + \"static/media/checked-icon-white.b2ad68a5.svg\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { utilService } from '../services/util.service';\nimport { addBoard, loadBoard } from '../store/board.actions';\nimport CloseIcon from '../assets/imgs/icons/close-icon-white.svg';\nimport CheckedIcon from '../assets/imgs/icons/checked-icon-white.svg';\n\nclass _CreateBoard extends React.Component {\n    state = {\n        title: '',\n        backgrounds: [\n            {\n                small: \"https://images.unsplash.com/photo-1632813101579-7e7d4dd2c69a?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwyNjQ5NjV8MHwxfGFsbHx8fHx8fHx8fDE2MzMzMzQzNDg&ixlib=rb-1.2.1&q=80&w=400\",\n                full: \"https://images.unsplash.com/photo-1632813101579-7e7d4dd2c69a?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1470&q=80\"\n            },\n            {\n                small: \"https://images.unsplash.com/photo-1632714394526-1e87d08d56c4?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwyNjQ5NjV8MHwxfGFsbHx8fHx8fHx8fDE2MzMzMzQzODg&ixlib=rb-1.2.1&q=80&w=400\",\n                full: \"https://images.unsplash.com/photo-1632714394526-1e87d08d56c4?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1470&q=80\"\n            },\n            {\n                small: \"https://images.unsplash.com/photo-1632829754530-d94a588e2dde?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwyNjQ5NjV8MHwxfGFsbHx8fHx8fHx8fDE2MzMzMzQ0MTk&ixlib=rb-1.2.1&q=80&w=400\",\n                full: \"https://images.unsplash.com/photo-1632829754530-d94a588e2dde?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80\"\n            },\n            {\n                small: \"https://images.unsplash.com/photo-1632918425510-c02e76616549?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwyNjQ5NjV8MHwxfGFsbHx8fHx8fHx8fDE2MzMzMzQ0NDI&ixlib=rb-1.2.1&q=80&w=400\",\n                full: \"https://images.unsplash.com/photo-1632918425510-c02e76616549?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1527&q=80\"\n            },\n            \"linear-gradient(225deg, rgb(255, 60, 172) 0%, rgb(120, 75, 160) 50%, rgb(43, 134, 197) 100%)\",\n            \"#0079bf\", \"#d29034\", \"#519839\", \"#b04632\"\n        ],\n        selectedBgIdx: 0\n    }\n\n    handleChange = (ev) => {\n        const value = ev.target.value\n        this.setState({ title: value })\n    }\n\n    createBoard = async (ev) => {\n        ev.preventDefault()\n        const { title, backgrounds, selectedBgIdx } = this.state\n        if (!title) return\n        const { loggedInUser } = this.props\n        const boardMember = { ...loggedInUser }\n        boardMember.isStarred = false\n\n        const newBoard = {\n            \"boardTitle\": title,\n            \"createdAt\": Date.now(),\n            \"createdBy\": loggedInUser,\n            \"cardsCount\": 0,\n            \"boardStyle\": backgrounds[selectedBgIdx],\n            \"covers\": this.getCovers(),\n            \"labels\": this.getLabels(),\n            \"boardMembers\": [boardMember],\n            \"lists\": [],\n            \"activities\": [],\n            \"archive\": []\n        }\n\n        await this.props.addBoard(newBoard)\n        const { board, onToggleCreateBoard } = this.props\n        onToggleCreateBoard()\n        this.props.history.push(`/boards/${board._id}`)\n    }\n\n    getLabels = () => {\n        let labels = []\n        for (let id = 1; id <= 6; id++) {\n            const label = {\n                \"id\": utilService.makeId(),\n                \"title\": \"\",\n                \"color\": `clr${id}`\n            }\n            labels.push(label)\n        }\n        return labels\n    }\n\n    getCovers = () => {\n        let covers = []\n        for (let id = 1; id <= 10; id++) {\n            const label = {\n                \"id\": utilService.makeId(),\n                \"color\": `clr${id}`\n            }\n            covers.push(label)\n        }\n        return covers\n    }\n\n    selectBg = (selectedBgIdx) => {\n        this.setState({ selectedBgIdx })\n    }\n\n    render() {\n        const { title, backgrounds, selectedBgIdx } = this.state\n        const selectedBg = backgrounds[selectedBgIdx]\n        const selectedBgStyle = utilService.getFormattedBgStyle(selectedBg)\n        return (\n            <div className=\"create-board-wrapper\">\n                <div className=\"screen\" onClick={this.props.onToggleCreateBoard}></div>\n                <div className=\"create-board flex direction-col align-center\">\n                    <div className=\"board-preview flex\">\n                        <div className=\"title-section\" style={selectedBgStyle}>\n                            {(selectedBgIdx < 4) && <span className=\"bg-overlay\"></span>}\n                            <button className=\"close-btn\" onClick={this.props.onToggleCreateBoard}>\n                                <img src={CloseIcon} alt=\"Close\" />\n                            </button>\n                            <form onSubmit={this.createBoard}>\n                                <input type=\"text\"\n                                    autoComplete=\"off\"\n                                    className=\"title-input\"\n                                    name=\"title\"\n                                    placeholder=\"Add board title\"\n                                    value={title}\n                                    onChange={this.handleChange}\n                                />\n                            </form>\n                            {<p className=\"user-title\">{this.props.loggedInUser.fullname}'s Workspace</p>}\n                        </div>\n                        <div className=\"choose-bg flex wrap space-between\">\n                            {backgrounds.map((background, idx) => {\n                                const bgStyle = utilService.getFormattedBgStyle(background, 'small')\n                                return <div key={utilService.makeId()} className=\"bg-color\" style={bgStyle} onClick={() => this.selectBg(idx)}>\n                                    {(idx === selectedBgIdx) && <span className=\"selected\">\n                                        <img src={CheckedIcon} alt=\"selected\" />\n                                    </span>}\n                                </div>\n                            })}\n                        </div>\n                    </div>\n                    <button className={`create-btn${!title ? \" disabled\" : \"\"}`} onClick={this.createBoard}>Create board</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        board: state.boardReducer.board,\n        loggedInUser: state.userReducer.loggedInUser\n    }\n}\nconst mapDispatchToProps = {\n    addBoard,\n    loadBoard\n}\n\nconst _CreateBoardWithRouter = withRouter(_CreateBoard);\nexport const CreateBoard = connect(mapStateToProps, mapDispatchToProps)(_CreateBoardWithRouter)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { userService } from '../services/user.service.js';\nimport { loadBoards, loadBoard, updateBoard } from '../store/board.actions.js';\nimport { loginAsGuest } from '../store/user.actions.js';\nimport { socketService } from '../services/socket.service.js';\n\nimport { BoardPreview } from '../cmp/UserBoards/BoardPreview'\nimport { Loading } from '../cmp/Loading';\nimport { SideNav } from '../cmp/UserBoards/SideNav';\n\nimport { IconContext } from \"react-icons\";\nimport { FiStar } from 'react-icons/fi';\nimport { CreateBoard } from '../cmp/CreateBoard.jsx';\n\nclass _UserBoards extends React.Component {\n    state = {\n        userBoards: [],\n        isCreateBoard: false\n    }\n\n    async componentDidMount() {\n        let user = this.props.loggedInUser\n        if (!user) user = await this.props.loginAsGuest()\n        await this.props.loadBoards(user._id)\n        const userBoards = userService.filterUserBoards(this.props.boards, this.props.loggedInUser._id, \"all\")\n        this.setState({ userBoards })\n        this.props.loadBoard(null)\n    }\n\n\n    getBoardsByType = (type) => {\n        const { loggedInUser } = this.props\n        return userService.filterUserBoards(this.state.userBoards, loggedInUser._id, type)\n    }\n\n    getGuestBoards = () => {\n\n    }\n\n    toggleStarBoard = (ev, board) => {\n        ev.preventDefault()\n        const { loggedInUser, updateBoard } = this.props\n        const updatedBoard = userService.toggleStarBoard(board, loggedInUser._id)\n        updateBoard(updatedBoard)\n    }\n\n    onToggleCreateBoard = () => {\n        const { isCreateBoard } = this.state\n        this.setState({ isCreateBoard: !isCreateBoard })\n    }\n\n    render() {\n        const path = this.props.match.path.slice(1)\n        const { userBoards } = this.state\n        const { loggedInUser } = this.props\n        if (!loggedInUser) return <Loading />\n        const starredBoards = userBoards.length ? this.getBoardsByType(\"starred\") : []\n        const owndBoards = userBoards.length ? this.getBoardsByType(\"owner\") : []\n        const guestdBoards = userBoards.length ? this.getBoardsByType(\"guest\") : []\n        // const starredBoards = userBoards.length ? this.getStarredBoards() : []\n        return (\n            <section className=\"main-container boards\">\n                <section className=\"boards-page flex\">\n                    <SideNav path={path} />\n                    <section className=\"boards-section\">\n                        {starredBoards.length ?\n                            <section className=\"inner-section starred-boards\">\n                                <div className=\"star-title flex\">\n                                    <IconContext.Provider value={{ className: \"star-icon\" }} >\n                                        <FiStar />\n                                    </IconContext.Provider>\n                                    <h3>Starred boards</h3>\n                                </div>\n                                <div className=\"boards-preview\">\n                                    {starredBoards.map(board =>\n                                        <BoardPreview key={board._id} board={board} loggedInUser={loggedInUser} toggleStarBoard={this.toggleStarBoard} isYellow={true} />\n                                    )}\n                                </div>\n                            </section> : <></>}\n                        <section className=\"inner-section user-boards\">\n                            <h3>Your Boards</h3>\n                            <div className=\"boards-preview\">\n                                {owndBoards.map(board => {\n                                    board.isStarred = board.boardMembers.find(member => member._id === loggedInUser._id).isStarred\n                                    return <BoardPreview key={board._id} board={board} loggedInUser={loggedInUser} toggleStarBoard={this.toggleStarBoard} isLarge={board.isStarred} />\n                                })}\n                                <div className=\"board-preview create-board flex align-center justify-center\" onClick={this.onToggleCreateBoard}>Create new board</div>\n                            </div>\n                        </section>\n                        {guestdBoards.length ? <section className=\"inner-section guest-boards user-boards\">\n                            <h3>Guest Boards</h3>\n                            <div className=\"boards-preview\">\n                                {guestdBoards.map(board => {\n                                    board.isStarred = board.boardMembers.find(member => member._id === loggedInUser._id).isStarred\n                                    return <BoardPreview key={board._id} board={board} loggedInUser={loggedInUser} toggleStarBoard={this.toggleStarBoard} isLarge={board.isStarred} />\n                                })}\n                            </div>\n                        </section> : <></>}\n                    </section>\n                </section>\n                {this.state.isCreateBoard && <CreateBoard onToggleCreateBoard={this.onToggleCreateBoard} />}\n            </section>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        boards: state.boardReducer.boards,\n        loggedInUser: state.userReducer.loggedInUser\n    }\n}\n\nconst mapDispatchToProps = {\n    loadBoard,\n    loadBoards,\n    updateBoard,\n    loginAsGuest\n}\n\nexport const UserBoards = connect(mapStateToProps, mapDispatchToProps)(_UserBoards)\n","import { BoardApp } from \"./pages/BoardApp\";\nimport { HomePage } from \"./pages/HomePage\";\n// import { CardDetails } from \"./pages/CardDetails\";\nimport { Login } from \"./pages/Login\";\nimport { Signup } from \"./pages/Signup\";\nimport { TemplateBoards } from \"./pages/TemplateBoards\";\nimport { UserBoards } from \"./pages/UserBoards\";\nimport { CardNotFound } from \"./pages/CardNotFound\";\n\nconst routes = [\n    {\n        path: '/boards/:boardId',\n        component: BoardApp,\n    },\n    {\n        path: '/boards',\n        component: UserBoards,\n    },\n    {\n        path: '/cardNotFound',\n        component: CardNotFound,\n    },\n    {\n        path: '/templates',\n        component: TemplateBoards,\n    },\n    {\n        path: '/login',\n        component: Login,\n    },\n    {\n        path: '/signup',\n        component: Signup,\n    },\n    {\n        path: '/',\n        component: HomePage,\n    }\n]\n\nexport default routes;","\nexport function CardNotFound() {\n\n    return (\n        <section className=\"card-not-found\">\n            <h1>Card not found.</h1>\n            <div>\n                This card may be deleted or on a private board. <br />\n                If someone gave you this link, they may need to invite you to one of their boards or Workspaces.\n            </div>\n        </section>\n    )\n\n}","export default __webpack_public_path__ + \"static/media/menu-plus-icon.7b919228.svg\";","import React from 'react'\nimport { connect } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport { LogoName } from './LogoName';\nimport { DynamicPopover } from '../DynamicPopover';\nimport { CreateBoard } from '../CreateBoard';\nimport { socketService } from \"../../services/socket.service\";\nimport { setNotif } from '../../store/board.actions';\nimport NotificationsActiveOutlinedIcon from '@mui/icons-material/NotificationsActiveOutlined';\nimport NotificationsNoneIcon from '@mui/icons-material/NotificationsNone';\nimport PlusIcon from '../../assets/imgs/icons/menu-plus-icon.svg'\n\nclass _AppHeader extends React.Component {\n\n    state = {\n        isCreateBoard: false,\n        isUserBoardsOpen: false,\n        isStarredBoardsOpen: false,\n        isNotif: false\n    }\n\n    componentDidMount() {\n        socketService.setup()\n    }\n\n    onToggleCreateBoard = () => {\n        const { isCreateBoard } = this.state\n        this.setState(prevState => ({ ...prevState, isCreateBoard: !isCreateBoard }))\n    }\n\n    onToggleUserBoards = () => {\n        const { isUserBoardsOpen } = this.state\n        this.setState(prevState => ({ ...prevState, isUserBoardsOpen: !isUserBoardsOpen }))\n    }\n\n    onToggleStarredBoards = () => {\n        const { isStarredBoardsOpen } = this.state\n        this.setState(prevState => ({ ...prevState, isStarredBoardsOpen: !isStarredBoardsOpen }))\n    }\n\n    markReadNotif = () => {\n        this.props.setNotif(false);\n    }\n\n    render() {\n        const { loggedInUser, isNotif } = this.props;\n        const { } = this.state;\n        if (!loggedInUser) return (<></>)\n        const notificaion = isNotif ? 'newNotif' : 'noNotif';\n        return (\n            <>\n                <header className=\"main-header\">\n                    <nav className=\"nav-bar flex space-between\" >\n                        <div className=\"main-nav-links flex align-center\">\n                            <LogoName isLoggedIn={true} />\n                            <span className={`header-btn${this.state.isUserBoardsOpen ? \" open\" : \"\"}`}>\n                                <DynamicPopover type={'userBoards'} titleModal={'Boards'} onToggle={this.onToggleUserBoards} />\n                            </span>\n                            <span className={`header-btn starred${this.state.isStarredBoardsOpen ? \" open\" : \"\"}`}>\n                                <DynamicPopover type={'starredBoards'} titleModal={'Starred boards'} onToggle={this.onToggleStarredBoards} />\n                            </span>\n                            {/* <NavLink className=\"header-btn\" to=\"/boards\">\n                                <span>Boards</span>\n                                <img src=\"\" alt=\"\" />\n                            </NavLink> */}\n                            <button className=\"header-btn create\" onClick={this.onToggleCreateBoard}>Create</button>\n                            <button className=\"header-btn create-small flex align-center justify-center\" onClick={this.onToggleCreateBoard}><img src={PlusIcon} alt=\"\" /></button>\n                        </div>\n                        <div className=\"user-section flex align-center\">\n                            <div className=\"notifications\">\n                                <DynamicPopover type={notificaion}\n                                    titleModal={'Notifications'} markReadNotif={this.markReadNotif} />\n                            </div>\n                            <div className=\"user-avatar\">\n                                <DynamicPopover type={'userMenu'} titleModal={'Account'} loggedInUser={loggedInUser} />\n                            </div>\n                        </div>\n\n                        {/* {!isNotifi && <div><NotificationsNoneIcon /> </div>}\n                        {isNotifi && <div><NotificationsActiveOutlinedIcon /></div>} */}\n                    </nav >\n                </header >\n                {this.state.isCreateBoard && <CreateBoard onToggleCreateBoard={this.onToggleCreateBoard} />}\n            </>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        board: state.boardReducer.board,\n        boards: state.boardReducer.boards,\n        loggedInUser: state.userReducer.loggedInUser,\n        isNotif: state.boardReducer.isNotif,\n        notifCount: state.boardReducer.notifCount\n    }\n}\n\nconst mapDispatchToProps = {\n    setNotif,\n}\n\nexport const AppHeader = connect(mapStateToProps, mapDispatchToProps)(_AppHeader)","import React from 'react'\n\nimport { eventBusService } from '../services/event-bus.service.js'\nimport DoneOutlineIcon from '@mui/icons-material/DoneOutline';\nimport ErrorIcon from '@mui/icons-material/Error';\n\nexport class UserMsg extends React.Component {\n\n  removeEvent;\n\n  state = {\n    msg: null\n  }\n\n  componentDidMount() {\n    // Here we listen to the event that we emited, its important to remove the listener \n    this.removeEvent = eventBusService.on('show-user-msg', (msg) => {\n      this.setState({ msg })\n      setTimeout(() => {\n        this.setState({ msg: null })\n      }, 2500)\n    })\n  }\n\n  componentWillUnmount() {\n    this.removeEvent()\n  }\n\n  render() {\n    // console.log('im in user-msg')\n    if (!this.state.msg) return <span></span>\n    const msgType = this.state.msg.type || ''\n    return (\n      <section className={'user-msg  flex direction-row align-center'}>\n        <div className=\" txt-msg flex direction-row align-center\">\n          {msgType === 'danger' && <ErrorIcon />}\n          {msgType === 'success' && <DoneOutlineIcon />}\n          {this.state.msg.txt}\n        </div>\n        <button onClick={() => {\n          this.setState({ msg: null })\n        }}>x</button>\n      </section>\n    )\n  }\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router'\nimport routes from './routes.js'\nimport { AppHeader } from './cmp/Header/AppHeader.jsx'\nimport { UserMsg } from './cmp/UserMsg';\nexport class RootCmp extends React.Component {\n\n    render() {\n        return (\n            <>\n                <AppHeader />\n                <main>\n                    <Switch>\n                        {routes.map(route => <Route key={route.path} component={route.component} path={route.path} />)}\n                        {/* {routes.map(route => <Route key={route.path} exact component={route.component} path={route.path} />)} */}\n                    </Switch>\n                    <UserMsg />\n                </main>\n            </>\n        )\n    }\n}\n\n\n","const initialState = {\r\n  boards: [],\r\n  board: null,\r\n  lastUpdatedBoard: null,\r\n  isLabelOpen: false,\r\n  currCard: null,\r\n  currList: null,\r\n  isNotif: false,\r\n  notifCount: 0,\r\n  filterBy: {\r\n    searchKey: '',\r\n    labels: [],\r\n    members: [],\r\n    isFilter: false,\r\n    cardsCount: 0\r\n  },\r\n  labelsProps: {\r\n    label: {},\r\n    isCreate: false\r\n  }\r\n}\r\n\r\nexport function boardReducer(state = initialState, action = null) {\r\n  switch (action.type) {\r\n    case 'SET_BOARDS':\r\n      return { ...state, boards: action.boards }\r\n    case 'SET_BOARD':\r\n      // console.log('in set board', state.board)\r\n      const lastUpdatedBoard = JSON.parse(JSON.stringify(action.board))\r\n      return { ...state, board: { ...action.board }, lastUpdatedBoard }\r\n    case 'ADD_BOARD':\r\n      return { ...state, board: action.board, boards: [...state.boards, action.board] }\r\n    case 'REMOVE_BOARD':\r\n      return { ...state, boards: state.boards.filter(board => board._id !== action.boardId) }\r\n    // case 'UPDATE_BOARD': {\r\n    //   // console.log('state.board', state.board)\r\n    //   const lastUpdatedBoard = JSON.parse(JSON.stringify(state.board))\r\n    //   // const board = JSON.parse(JSON.stringify(action.board))\r\n    //   return {\r\n    //     ...state, board: action.board, lastUpdatedBoard,\r\n    //     boards: state.boards.map(board =>\r\n    //       board._id === action.board._id ? action.board : board)\r\n    //   }\r\n    // }\r\n    case 'UPDATE_BOARD': {\r\n      return {\r\n        ...state, board: action.board, boards: state.boards.map(board =>\r\n          board._id === action.board._id ? action.board : board)\r\n      }\r\n    }\r\n    case 'UPDATE_LAST_UPDATED_BOARD': {\r\n      const lastUpdatedBoard = JSON.parse(JSON.stringify(state.board))\r\n      return {\r\n        ...state, lastUpdatedBoard\r\n      }\r\n    }\r\n    case 'UNDO_UPDATE_BOARD': {\r\n      if (state.lastUpdatedBoard) {\r\n        const undoLastBoard = JSON.parse(JSON.stringify(state.lastUpdatedBoard))\r\n        return {\r\n          ...state, boards: state.boards.map(board =>\r\n            board._id === state.board._id ? state.lastUpdatedBoard : board),\r\n          board: undoLastBoard\r\n        }\r\n      }\r\n      return state\r\n    }\r\n    case 'TOGGLE_LABELS': {\r\n      const isLabelOpen = state.isLabelOpen\r\n      return { ...state, isLabelOpen: !isLabelOpen }\r\n    }\r\n    case 'SET_LIST':\r\n      return { ...state, currList: action.list }\r\n    case 'SET_CARD':\r\n      return { ...state, currCard: action.card }\r\n    // return {\r\n    //   ...state, boards: state.boards.map(board => board._id === action.board._id ?\r\n    //     action.board : board)\r\n    // }\r\n    case 'SET_NOTIF':\r\n      return { ...state, isNotif: action.isNotif }\r\n    case 'SET_NOTIF_COUNT':\r\n      return { ...state, notifCount: action.count }\r\n    case 'SET_NOTIF_COUNT++':\r\n      return { ...state, notifCount: state.notifCount + 1 }\r\n    case 'SET_FILTER':\r\n      return { ...state, filterBy: action.filterBy }\r\n    case 'SET_LABEL':\r\n      return { ...state, labelsProps: action.labelsProps}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { userService } from '../services/user.service.js'\n\n\nconst initialState = {\n    loggedInUser: userService.getLoggedinUser()\n}\nexport function userReducer(state = initialState, action) {\n    var newState = state;\n    switch (action.type) {\n        case 'SET_USER':\n            newState = { ...state, loggedInUser: action.user }\n            break;\n        default:\n    }\n    // For debug:\n    // window.userState = newState;\n    // console.log('State:', newState);\n    return newState;\n\n}\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport { boardReducer } from './board.reducer.js'\nimport { userReducer } from './user.reducer.js'\n\nconst rootReducer = combineReducers({\n    boardReducer,\n    userReducer\n})\n\n// export const store = createStore(rootReducer, applyMiddleware(thunk))\n// window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__();\n// Lets wire up thunk and also redux-dev-tools:\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n// export const store = createStore(rootReducer, applyMiddleware(thunk))\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { RootCmp } from './root-cmp';\nimport '../src/assets/styles/main.scss';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <RootCmp />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}